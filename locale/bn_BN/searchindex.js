Search.setIndex({"docnames": ["apidocs/qiskit_machine_learning", "apidocs/qiskit_machine_learning.algorithms", "apidocs/qiskit_machine_learning.circuit.library", "apidocs/qiskit_machine_learning.connectors", "apidocs/qiskit_machine_learning.datasets", "apidocs/qiskit_machine_learning.kernels", "apidocs/qiskit_machine_learning.kernels.algorithms", "apidocs/qiskit_machine_learning.neural_networks", "apidocs/qiskit_machine_learning.utils", "apidocs/qiskit_machine_learning.utils.loss_functions", "getting_started", "index", "migration/01_migration_guide_0.5", "migration/index", "release_notes", "stubs/qiskit_machine_learning.QiskitMachineLearningError", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC", "stubs/qiskit_machine_learning.algorithms.QSVC", "stubs/qiskit_machine_learning.algorithms.QSVR", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin", "stubs/qiskit_machine_learning.algorithms.TrainableModel", "stubs/qiskit_machine_learning.algorithms.VQC", "stubs/qiskit_machine_learning.algorithms.VQR", "stubs/qiskit_machine_learning.circuit.library.QNNCircuit", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector", "stubs/qiskit_machine_learning.connectors.TorchConnector", "stubs/qiskit_machine_learning.datasets.ad_hoc_data", "stubs/qiskit_machine_learning.kernels.BaseKernel", "stubs/qiskit_machine_learning.kernels.FidelityQuantumKernel", "stubs/qiskit_machine_learning.kernels.FidelityStatevectorKernel", "stubs/qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel", "stubs/qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel", "stubs/qiskit_machine_learning.kernels.TrainableKernel", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.EstimatorQNN", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork", "stubs/qiskit_machine_learning.neural_networks.SamplerQNN", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss", "stubs/qiskit_machine_learning.utils.loss_functions.Loss", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss", "tutorials/01_neural_networks", "tutorials/02_neural_network_classifier_and_regressor", "tutorials/02a_training_a_quantum_model_on_a_real_dataset", "tutorials/03_quantum_kernel", "tutorials/04_torch_qgan", "tutorials/05_torch_connector", "tutorials/07_pegasos_qsvc", "tutorials/08_quantum_kernel_trainer", "tutorials/09_saving_and_loading_models", "tutorials/10_effective_dimension", "tutorials/11_quantum_convolutional_neural_networks", "tutorials/12_quantum_autoencoder", "tutorials/index"], "filenames": ["apidocs/qiskit_machine_learning.rst", "apidocs/qiskit_machine_learning.algorithms.rst", "apidocs/qiskit_machine_learning.circuit.library.rst", "apidocs/qiskit_machine_learning.connectors.rst", "apidocs/qiskit_machine_learning.datasets.rst", "apidocs/qiskit_machine_learning.kernels.rst", "apidocs/qiskit_machine_learning.kernels.algorithms.rst", "apidocs/qiskit_machine_learning.neural_networks.rst", "apidocs/qiskit_machine_learning.utils.rst", "apidocs/qiskit_machine_learning.utils.loss_functions.rst", "getting_started.rst", "index.rst", "migration/01_migration_guide_0.5.rst", "migration/index.rst", "release_notes.rst", "stubs/qiskit_machine_learning.QiskitMachineLearningError.rst", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.rst", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.rst", "stubs/qiskit_machine_learning.algorithms.QSVC.rst", "stubs/qiskit_machine_learning.algorithms.QSVR.rst", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.rst", "stubs/qiskit_machine_learning.algorithms.VQC.rst", "stubs/qiskit_machine_learning.algorithms.VQR.rst", "stubs/qiskit_machine_learning.circuit.library.QNNCircuit.rst", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.rst", "stubs/qiskit_machine_learning.datasets.ad_hoc_data.rst", "stubs/qiskit_machine_learning.kernels.BaseKernel.rst", "stubs/qiskit_machine_learning.kernels.FidelityQuantumKernel.rst", "stubs/qiskit_machine_learning.kernels.FidelityStatevectorKernel.rst", "stubs/qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.rst", "stubs/qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.rst", "stubs/qiskit_machine_learning.kernels.TrainableKernel.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.rst", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.rst", "stubs/qiskit_machine_learning.neural_networks.SamplerQNN.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss.rst", "tutorials/01_neural_networks.ipynb", "tutorials/02_neural_network_classifier_and_regressor.ipynb", "tutorials/02a_training_a_quantum_model_on_a_real_dataset.ipynb", "tutorials/03_quantum_kernel.ipynb", "tutorials/04_torch_qgan.ipynb", "tutorials/05_torch_connector.ipynb", "tutorials/07_pegasos_qsvc.ipynb", "tutorials/08_quantum_kernel_trainer.ipynb", "tutorials/09_saving_and_loading_models.ipynb", "tutorials/10_effective_dimension.ipynb", "tutorials/11_quantum_convolutional_neural_networks.ipynb", "tutorials/12_quantum_autoencoder.ipynb", "tutorials/index.rst"], "titles": ["Qiskit Machine Learning API Reference", "Quantum machine learning algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.algorithms</span></code>)", "Circuit library for machine learning applications (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.circuit.library</span></code>)", "Connectors (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.connectors</span></code>)", "Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.datasets</span></code>)", "Quantum kernels (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.kernels</span></code>)", "Quantum Kernel Algorithms", "Quantum neural networks (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.neural_networks</span></code>)", "Utility functions and classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils</span></code>)", "Loss Functions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils.loss_functions</span></code>)", "\u09b6\u09c1\u09b0\u09c1\u09b0 \u09a8\u09bf\u09b0\u09cd\u09a6\u09c7\u09b6\u09a8\u09be", "Qiskit Machine Learning overview", "Qiskit Machine Learning v0.5 Migration Guide", "Qiskit Machine Learning Migration Guide", "Release Notes", "QiskitMachineLearningError", "BinaryObjectiveFunction", "MultiClassObjectiveFunction", "NeuralNetworkClassifier", "NeuralNetworkRegressor", "ObjectiveFunction", "OneHotObjectiveFunction", "PegasosQSVC", "QSVC", "QSVR", "SerializableModelMixin", "TrainableModel", "VQC", "VQR", "QNNCircuit", "RawFeatureVector", "TorchConnector", "ad_hoc_data", "BaseKernel", "FidelityQuantumKernel", "FidelityStatevectorKernel", "TrainableFidelityQuantumKernel", "TrainableFidelityStatevectorKernel", "TrainableKernel", "QuantumKernelTrainer", "QuantumKernelTrainerResult", "EffectiveDimension", "EstimatorQNN", "LocalEffectiveDimension", "NeuralNetwork", "SamplerQNN", "CrossEntropyLoss", "KernelLoss", "L1Loss", "L2Loss", "Loss", "SVCLoss", "\u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae \u09a8\u09bf\u0989\u09b0\u09be\u09b2 \u09a8\u09c7\u099f\u0993\u09df\u09be\u09b0\u09cd\u0995", "\u09a8\u09bf\u0989\u09b0\u09be\u09b2 \u09a8\u09c7\u099f\u0993\u09df\u09be\u09b0\u09cd\u0995 \u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09a8\u09cd\u09af\u09be\u09b8\u0995\u09b0\u0995 (\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09be\u09df\u09be\u09b0) \u098f\u09ac\u0982 \u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b8\u09b0", "Training a Quantum Model on a Real Dataset", "\u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae \u0995\u09be\u09b0\u09cd\u09a8\u09c7\u09b2 \u09ae\u09c7\u09b6\u09bf\u09a8 \u09b2\u09be\u09b0\u09cd\u09a8\u09bf\u0982", "PyTorch qGAN Implementation", "\u099f\u09b0\u09cd\u099a (PyTorch) \u09b8\u0982\u09af\u09cb\u0997\u0995\u09be\u09b0\u09c0 \u098f\u09ac\u0982 \u09a6\u09c7\u09be\u0986\u0981\u09b6\u09b2\u09be \u0995\u09cb\u09af\u09bc\u09be\u09a8\u09cd\u099f\u09be\u09ae \u09a8\u09bf\u0989\u09b0\u09be\u09b2 \u09a8\u09c7\u099f\u0993\u09af\u09bc\u09be\u09b0\u09cd\u0995", "Pegasos Quantum Support Vector Classifier", "Quantum Kernel Training for Machine Learning Applications", "Saving, Loading Qiskit Machine Learning Models and Continuous Training", "Effective Dimension of Qiskit Neural Networks", "The Quantum Convolution Neural Network", "The Quantum Autoencoder", "\u09ae\u09c7\u09b6\u09bf\u09a8 \u09b2\u09be\u09b0\u09cd\u09a8\u09bf\u0982 \u09aa\u09be\u09a0\u09b8\u09ae\u09c2\u09b9 (\u099f\u09bf\u0989\u099f\u09cb\u09b0\u09bf\u09df\u09be\u09b2\u09b8)"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 64], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 58, 59, 64], "i": [0, 5, 7, 10, 11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "an": [0, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62], "ml": [0, 26, 30, 54], "framework": [0, 3, 11, 12, 54], "come": [0, 54, 63], "essenti": 0, "tool": [0, 12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "like": [0, 12, 21, 22, 23, 24, 26, 27, 42, 44, 45, 53, 54, 55, 56, 60, 61, 62, 63], "quantum": [0, 2, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 51, 53, 57, 60, 61], "kernel": [0, 11, 22, 23, 24, 30, 33, 34, 35, 36, 37, 38, 39, 40, 47, 51, 58, 62], "neural": [0, 11, 14, 16, 17, 18, 19, 20, 21, 26, 27, 28, 31, 41, 42, 43, 44, 45, 53, 54, 57, 60, 63], "network": [0, 10, 11, 14, 16, 17, 18, 19, 20, 21, 26, 27, 28, 31, 41, 42, 43, 44, 45, 53, 54, 57, 60, 63], "These": [0, 29, 35, 45, 52, 54, 61, 62, 63], "ar": [0, 5, 11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "build": [0, 2, 11, 56, 62], "block": [0, 2, 11, 12], "can": [0, 5, 7, 10, 11, 12, 14, 18, 19, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 40, 42, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "us": [0, 2, 5, 7, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63], "train": [0, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 47, 51, 52, 53, 55, 57, 58, 63], "classif": [0, 1, 5, 11, 18, 19, 22, 23, 24, 26, 27, 28, 33, 51, 52, 54, 58, 59, 61, 62], "regress": [0, 1, 5, 11, 12, 18, 19, 23, 24, 26, 27, 28, 33, 55], "other": [0, 3, 11, 14, 23, 24, 44, 52, 53, 54, 55, 56, 60, 61, 62], "model": [0, 11, 18, 19, 22, 23, 24, 25, 26, 27, 28, 31, 35, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 61, 63], "The": [1, 5, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60], "packag": [1, 10, 11, 12, 57, 58, 62], "contain": [1, 12, 22, 23, 24, 27, 30, 36, 37, 47, 51, 52, 53, 54, 59, 62, 63], "core": [1, 11, 12], "data": [1, 5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63], "A": [2, 4, 5, 7, 8, 9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35, 37, 39, 41, 42, 43, 45, 47, 51, 52, 53, 54, 55, 56, 58, 59, 62], "algorithm": [2, 5, 7, 11, 12, 14, 22, 27, 33, 34, 36, 37, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63], "from": [3, 5, 10, 11, 12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 37, 39, 40, 41, 42, 43, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "qiskit": [3, 8, 9, 10, 14, 15, 31, 35, 37, 41, 42, 43, 45, 53, 54, 55, 56, 57, 58, 62, 63], "machin": [3, 4, 5, 8, 9, 10, 14, 15, 33, 36, 37, 53, 56, 57, 58, 61, 62, 63], "learn": [3, 4, 5, 8, 9, 10, 14, 15, 18, 19, 23, 24, 26, 32, 33, 35, 36, 37, 51, 53, 56, 57, 58, 61, 62, 63], "set": [4, 5, 11, 12, 15, 18, 22, 23, 24, 29, 31, 34, 35, 36, 37, 40, 41, 42, 43, 45, 53, 54, 55, 57, 58, 60, 62, 63], "sampl": [4, 12, 18, 19, 22, 23, 24, 26, 27, 28, 32, 34, 35, 36, 37, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63], "suitabl": 4, "problem": [4, 11, 27, 28, 52, 53, 54, 55, 61, 62], "extend": [5, 11, 12, 18, 19, 23, 24, 52], "class": [5, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 60, 61], "evalu": [5, 11, 12, 22, 23, 31, 33, 34, 35, 36, 37, 38, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63], "matric": [5, 11, 23, 24, 55, 62], "gener": [5, 7, 11, 12, 22, 24, 32, 33, 45, 47, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63], "task": [5, 7, 33, 36, 37, 51, 55, 56, 57, 59], "find": [5, 10, 33, 36, 37, 52, 54, 55, 61], "studi": [5, 33, 55, 61], "pattern": [5, 33, 52, 54, 55, 56, 62], "For": [5, 12, 14, 16, 17, 21, 22, 23, 24, 27, 28, 33, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63], "mani": [5, 11, 33, 47, 54, 55, 61], "datapoint": [5, 33, 34, 35, 36, 37, 38, 55], "better": [5, 33, 54, 55, 58, 60], "understood": [5, 33, 55, 61], "higher": [5, 23, 24, 33, 54, 55, 56, 61], "dimension": [5, 18, 19, 26, 27, 33, 53, 54, 55, 56, 57, 62, 63], "featur": [5, 11, 12, 14, 22, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63], "space": [5, 22, 32, 33, 35, 55, 58, 59, 61, 62, 63], "through": [5, 12, 33, 51, 52, 54, 57, 62, 63], "function": [5, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 33, 34, 35, 39, 45, 46, 47, 48, 49, 50, 51, 53, 54, 59, 60, 61, 62], "k": [5, 32, 33, 34, 35, 55, 56, 59, 63], "x": [5, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 45, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63], "y": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 52, 53, 54, 55, 57, 61, 62], "langl": [5, 32, 33, 34, 35, 36, 37, 55], "f": [5, 33, 45, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63], "rangl": [5, 32, 33, 34, 35, 36, 37, 55, 56, 63], "here": [5, 10, 12, 33, 34, 35, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63], "n": [5, 12, 22, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 63], "input": [5, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 33, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 55, 56, 57, 59, 60, 61, 62, 63], "map": [5, 11, 12, 14, 23, 24, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 42, 45, 52, 53, 54, 55, 56, 57, 61, 62, 63], "dimens": [5, 22, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 47, 51, 52, 55, 56, 57, 62, 63], "m": [5, 22, 32, 33, 34, 35, 36, 37, 38, 47, 51, 55, 62, 63], "denot": [5, 22, 33, 53, 55, 63], "inner": [5, 33, 34, 35, 36, 37, 38, 55], "product": [5, 33, 34, 35, 36, 37, 38, 55, 62], "usual": [5, 12, 33, 54, 55, 56, 57, 61, 63], "much": [5, 33, 62, 63], "larger": [5, 22, 27, 28, 33, 54, 58, 63], "than": [5, 22, 23, 27, 28, 29, 33, 53, 54, 55, 56, 57, 58, 60, 61], "calcul": [5, 12, 22, 33, 34, 35, 36, 37, 38, 52, 55, 57, 63], "matrix": [5, 12, 18, 19, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 41, 43, 47, 51, 59, 61, 62], "given": [5, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 41, 43, 45, 51, 53, 55, 56, 57, 61, 62, 63], "all": [5, 11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63], "thi": [5, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "classic": [5, 7, 11, 12, 33, 35, 55, 57, 59, 61, 63], "support": [5, 10, 11, 12, 22, 23, 24, 27, 29, 33, 54, 55, 59], "vector": [5, 11, 18, 19, 22, 23, 24, 26, 30, 32, 33, 36, 37, 38, 39, 41, 43, 46, 52, 53, 54, 55, 62, 63], "spectral": [5, 33], "cluster": [5, 33, 54], "ridg": [5, 33, 55], "qiskit_machine_learn": [6, 12, 29, 30, 42, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "parametr": [7, 11, 27, 28, 34, 35, 42, 45, 52, 56, 59, 61, 62], "which": [7, 10, 11, 12, 22, 23, 30, 34, 36, 37, 39, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "mai": [7, 10, 12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 46, 47, 54, 55, 56, 59, 60, 61, 62, 63], "defin": [7, 11, 12, 24, 26, 30, 34, 35, 36, 39, 45, 51, 52, 53, 54, 56, 57, 62, 63], "artifici": [7, 53, 54, 62], "circuit": [7, 11, 12, 14, 27, 28, 29, 30, 33, 34, 35, 36, 37, 40, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "furthermor": [7, 54], "respect": [7, 12, 14, 22, 29, 42, 44, 45, 52, 54, 56, 62, 63], "discrimin": 7, "exampl": [7, 11, 12, 22, 23, 24, 29, 30, 39, 42, 45, 53, 54, 55, 56, 57, 58, 62], "vqc": [7, 11, 12, 54, 60], "see": [7, 12, 18, 19, 23, 24, 30, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "also": [7, 11, 12, 18, 19, 23, 26, 27, 28, 31, 35, 42, 45, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "torchconnector": [7, 10, 11, 42, 45, 52, 56, 57, 60], "allow": [7, 11, 18, 19, 23, 24, 26, 27, 28, 52, 55, 57, 62, 63], "code": [7, 12, 14, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "written": 7, "pytorch": [7, 10, 11, 12, 31, 52], "collect": [8, 9, 53, 55, 56, 60], "provid": [8, 9, 11, 12, 20, 23, 24, 25, 29, 36, 39, 42, 44, 45, 51, 52, 55, 57, 61, 62], "common": [9, 52, 54, 55, 61, 62, 63], "classifi": [9, 11, 18, 22, 23, 24, 27, 52, 53, 54, 55, 56, 57, 60, 61, 62], "regressor": [9, 11, 19, 24, 28, 52, 53, 60], "depend": [10, 12, 18, 19, 26, 27, 28, 48, 49, 50, 52, 56, 62, 63], "ha": [10, 11, 12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 29, 36, 37, 42, 45, 52, 54, 55, 57, 58, 60, 62, 63], "its": [10, 14, 23, 24, 29, 35, 41, 43, 52, 54, 55, 59, 63], "own": [10, 12, 54, 57, 63], "get": [10, 11, 12, 23, 24, 54, 55, 57, 60, 61, 63], "start": [10, 11, 12, 18, 19, 26, 27, 28, 31, 52, 53, 54, 56, 57, 60, 61, 63], "detail": [10, 12, 18, 19, 23, 26, 27, 28, 45, 51, 56, 60, 61, 62], "instal": 10, "option": [10, 12, 18, 19, 23, 24, 26, 27, 28, 29, 42, 45, 52, 54, 55, 56, 57, 59, 61], "environ": [10, 54], "platform": 10, "you": [10, 12, 14, 22, 23, 24, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "should": [10, 12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 31, 35, 36, 37, 52, 54, 56, 57, 58, 60, 61, 63], "refer": [10, 12, 18, 19, 22, 26, 27, 28, 32, 34, 35, 36, 39, 41, 42, 43, 45, 52, 54, 55, 56, 60, 61], "first": [10, 11, 18, 19, 26, 27, 28, 32, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "Then": [10, 12, 18, 19, 26, 55, 56, 58, 60, 63], "inform": [10, 12, 18, 19, 23, 24, 26, 27, 28, 39, 41, 43, 52, 54, 55, 59, 61, 62, 63], "follow": [10, 12, 22, 41, 42, 43, 45, 52, 55, 56, 57, 59, 60, 61, 62, 63], "focus": [10, 12, 55, 61], "addit": [10, 11, 12, 14, 23, 24, 32, 34, 35, 36, 38, 52, 54, 57, 62, 63], "specif": [10, 36, 37, 41, 43, 52, 61, 62], "\u09ae": [10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "\u09b2": 10, "\u09af": [10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "\u09ab": 10, "\u09b0\u09af": [10, 57], "\u0995\u09ad": 10, "\u09ac": 10, "\u0995\u09b0": [10, 53], "\u09b9\u09af": [10, 52, 53, 55, 57], "\u0996": [10, 53, 57], "\u09ad\u09b0\u09af": 10, "\u0997": 10, "\u09a1": [10, 53], "\u098f\u09ac": 10, "\u09b8\u09ae\u09b0": 10, "\u09a5\u09a8": 10, "\u09ab\u09b2": 10, "\u099f\u09b0": 10, "\u09b9\u09b2": 10, "\u0987\u099f\u09b0": 10, "\u099a": [10, 53], "spars": [10, 23, 24, 31, 42, 44, 45, 56, 57, 60, 61], "\u0986\u09b0\u0993": 10, "\u09a4\u09a5": [10, 53, 57], "\u099c\u09a8": [10, 53], "optional_instal": 10, "\u09ad": [10, 23, 24], "simplest": [10, 54], "wai": [10, 12, 36, 37, 52, 53, 54, 55, 57, 58, 60, 61, 63], "local": [10, 43, 52, 60, 63], "guid": [10, 11, 23, 24, 59], "In": [10, 11, 12, 18, 19, 22, 23, 26, 27, 28, 29, 30, 35, 42, 43, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "your": [10, 12, 14, 57, 61, 63], "virtual": 10, "where": [10, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "pip": 10, "As": [10, 12, 52, 53, 54, 55, 57, 60, 61, 62, 63], "though": [10, 14, 61, 63], "simpli": [10, 62], "abov": [10, 12, 52, 53, 54, 56, 57, 60, 62, 63], "automat": [10, 11, 12, 35, 37, 52, 54, 56, 57], "compat": [10, 12, 18, 19, 28, 58], "version": [10, 12, 14, 24, 37, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "one": [10, 11, 12, 14, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 32, 35, 42, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "alreadi": [10, 14, 62, 63], "\u0989\u09ce\u09b8": 10, "\u0989\u09aa": 10, "\u09a8\u0997": 10, "\u0995\u09b0\u09b2": [10, 57], "\u0986\u09aa\u09a8": [10, 53, 57], "\u098f\u09b0": 10, "\u09b8\u09b0": [10, 57], "\u09a7": [10, 53], "\u0986\u09aa\u09a1": [10, 53], "\u099f": [10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "\u09b9\u0993\u09af": 10, "\u0995\u09b0\u09a3\u099f": 10, "\u09af\u09ac\u09b9": [10, 53, 57], "\u0995\u09b0\u09a4": [10, 53], "\u09b0\u09ac": [10, 57], "python": [10, 12, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63], "index": [10, 18, 19, 26, 52, 63], "pypi": 10, "\u09aa\u09b0": 10, "\u09ac\u09b0": [10, 57], "\u098f\u099f": [10, 53], "\u09ac\u09b6": 10, "\u09b7": [10, 53], "\u09a6\u09b0": 10, "\u09a6\u0995": 10, "\u09b7\u09a4": 10, "\u09b9": [10, 53], "\u0989\u09aa\u09b0": 10, "\u09ad\u09b0": 10, "\u09a4\u09a8\u0997": 10, "\u09a8\u09a4": [10, 23, 24, 57], "\u09af\u0997": 10, "\u09b9\u09a4": 10, "\u09b0\u09a5\u09ae": [10, 57], "sourc": [10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "http": [10, 12, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "org": [10, 12, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "document": [10, 12, 18, 19, 26, 27, 28, 52, 57, 59], "getting_start": 10, "html": [10, 57], "\u09ac\u09b2": [10, 53], "\u098f\u0996": 10, "\u0985\u09a8": 10, "\u09b8\u09b0\u09a3": 10, "\u0989\u099a": 10, "\u0987": [10, 53, 57], "\u098f\u0995\u0987": 10, "\u09b6\u099f": 10, "\u099c": [10, 53], "\u09b0\u09a4": [10, 53, 57], "clone": 10, "git": 10, "github": [10, 14], "com": [10, 62], "commun": [10, 14], "\u09ae\u0995": 10, "\u098f\u0995\u099f": [10, 53, 57], "\u09df": 10, "\u09b9\u09ac": [10, 53], "cd": 10, "\u09a8\u099f": 10, "\u09b2\u09aa": 10, "\u09b0\u09df": 10, "r": [10, 18, 19, 22, 23, 24, 26, 27, 28, 53, 54, 55, 57, 58, 59, 60, 62, 63], "requir": [10, 12, 22, 23, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 52, 54, 55, 56, 57, 60, 61, 62, 63], "dev": 10, "txt": [10, 12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "\u09af\u09a6": 10, "\u09b8\u09ae": 10, "\u09a6\u09a8\u09af": 10, "\u098f\u0987": [10, 52, 53, 55, 57], "\u09b0\u099c": 10, "\u09a4\u09a8": [10, 57], "\u09a8\u09b0": [10, 53, 57], "e": [10, 11, 18, 19, 23, 24, 26, 27, 28, 34, 35, 36, 42, 44, 45, 48, 49, 52, 54, 56, 61, 62, 63], "either": [10, 12, 18, 19, 26, 29, 52, 60, 62, 63], "command": 10, "torch": [10, 31, 56, 57, 60], "when": [10, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 39, 42, 45, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "facilit": [10, 12, 56], "comput": [10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 58, 62, 63], "being": [10, 12, 14, 18, 19, 26, 27, 28, 57, 61, 62, 63], "enabl": [10, 52, 56, 57], "usag": [10, 12], "arrai": [10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 59, 60, 61, 62, 63], "tensor": [10, 31, 56, 57, 62], "dive": [10, 61], "tutori": [10, 11, 12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "out": [10, 12, 27, 28, 52, 54, 57, 63], "about": [10, 52, 59, 61], "introduc": [11, 12, 23, 24, 34, 36, 52, 54, 55, 56, 57, 58, 61, 63], "fundament": [11, 12, 55], "differ": [11, 12, 23, 45, 52, 53, 54, 55, 56, 57, 60, 61, 63], "applic": [11, 14, 52, 55, 56, 57], "includ": [11, 18, 19, 22, 23, 24, 25, 26, 27, 28, 52, 57, 63], "On": [11, 18, 19, 26, 27, 28, 55, 56, 60, 61, 62], "hand": [11, 55, 61, 62], "design": [11, 12, 42, 45, 63], "veri": [11, 12, 23, 54, 55, 60], "easi": 11, "user": [11, 12, 14, 18, 19, 23, 24, 26, 27, 28, 36, 37, 39, 47, 51, 60, 61], "rapidli": [11, 59], "prototyp": 11, "without": [11, 54, 57], "deep": [11, 23, 24, 52, 54, 56, 63], "knowledg": 11, "flexibl": [11, 12, 54, 63], "easili": [11, 54, 55, 62], "cut": 11, "edg": [11, 55], "research": 11, "fidelityquantumkernel": [11, 12, 22, 23, 24, 36, 55, 58], "make": [11, 12, 14, 53, 54, 55, 56, 57, 62, 63], "basestatefidel": [11, 34, 36], "directli": [11, 12, 42, 44, 45, 52, 55, 56, 59, 61], "dataset": [11, 23, 32, 33, 34, 35, 36, 37, 41, 43, 47, 51, 52, 53, 57, 58, 62, 63], "pass": [11, 12, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 34, 39, 41, 42, 43, 44, 45, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "qsvc": [11, 12, 58, 59], "qsvr": [11, 12], "quickli": [11, 12], "solv": [11, 51, 52, 54, 55, 57], "It": [11, 12, 29, 30, 45, 52, 53, 54, 55, 56, 62, 63], "exist": [11, 12, 23, 24, 40], "base": [11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63], "establish": 11, "interfac": [11, 12, 18, 19, 26, 33, 34, 35, 52, 58], "implement": [11, 18, 19, 22, 26, 27, 28, 30, 32, 34, 35, 36, 42, 44, 45, 54, 55, 58, 61, 62, 63], "two": [11, 12, 14, 18, 19, 22, 26, 27, 28, 29, 33, 34, 35, 36, 37, 42, 45, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "readili": 11, "estimatorqnn": [11, 28, 61, 62], "samplerqnn": [11, 27, 56, 63], "leverag": [11, 12, 55, 61], "baseestim": [11, 12, 28, 42, 52], "primit": [11, 18, 19, 22, 23, 24, 25, 26, 27, 28, 34, 36, 42, 45, 52, 53, 54, 55, 56, 60], "combin": [11, 12, 40, 42, 45, 52, 53, 61, 62], "mechan": [11, 23, 24, 52, 54], "observ": [11, 12, 28, 42, 53, 54, 55, 61, 62], "construct": [11, 12, 27, 29, 32, 33, 34, 35, 36, 37, 38, 42, 45, 52, 53, 54, 55, 56, 57, 60, 61], "": [11, 12, 18, 19, 23, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "librari": [11, 12, 14, 29, 30, 42, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "qnn": [11, 14, 27, 28, 29, 41, 42, 43, 45, 53, 56, 57, 60, 62, 63], "output": [11, 12, 16, 17, 18, 19, 21, 26, 27, 30, 31, 41, 42, 43, 44, 45, 48, 49, 50, 52, 53, 54, 56, 57, 59, 61, 62, 63], "expect": [11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 42, 46, 48, 49, 50, 52, 53, 54, 58, 61, 62], "valu": [11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63], "anoth": [11, 45, 54, 55, 57, 58, 60, 62, 63], "basesampl": [11, 12, 27, 45, 52], "translat": [11, 45, 55], "quasi": [11, 12, 45, 53, 56], "probabl": [11, 12, 18, 19, 23, 26, 35, 37, 45, 52, 53, 56, 57, 63], "bitstr": [11, 12, 27, 45, 52, 53, 61], "estim": [11, 12, 22, 23, 24, 26, 28, 42, 45, 52, 58], "desir": [11, 57, 59], "interpret": [11, 12, 18, 27, 42, 44, 45, 53, 57, 61, 63], "particular": [11, 45, 57, 60, 61, 62, 63], "context": [11, 14, 45, 53, 55], "g": [11, 18, 19, 23, 24, 26, 27, 28, 34, 36, 45, 53, 54, 56, 57, 60], "them": [11, 12, 52, 53, 54, 55, 56, 57, 60, 61], "well": [11, 12, 14, 18, 19, 23, 24, 26, 27, 28, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "correspond": [11, 12, 18, 19, 23, 26, 27, 29, 34, 36, 37, 42, 45, 52, 53, 56, 60, 61, 62, 63], "gradient": [11, 12, 16, 17, 20, 21, 22, 30, 31, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 54, 56, 57, 58, 61], "import": [11, 12, 29, 30, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "effici": [11, 56, 63], "To": [11, 12, 14, 22, 32, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "varieti": 11, "neuralnetworkclassifi": [11, 12, 27, 53, 61, 62], "neuralnetworkregressor": [11, 12, 28, 53], "both": [11, 12, 29, 54, 56, 61, 62, 63], "take": [11, 12, 42, 45, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "conveni": [11, 12, 25, 27, 28, 54, 55, 62], "variat": [11, 12, 27, 28, 52, 53, 54, 56, 60], "vqr": [11, 12], "just": [11, 53, 55, 57], "ansatz": [11, 12, 14, 27, 28, 29, 42, 45, 52, 53, 54, 57, 60, 61, 62], "underli": [11, 18, 19, 26, 27, 28, 31, 39, 42, 45, 53, 56, 60], "integr": [11, 52, 57], "our": [11, 12, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63], "open": [11, 52, 62, 63], "thank": 11, "differenti": [11, 56, 57, 61, 62], "overal": [11, 12, 14, 54, 62, 63], "dure": [11, 18, 19, 26, 27, 28, 31, 47, 52, 56, 58, 59, 61, 63], "backpropag": [11, 52, 57], "account": [11, 47], "too": [11, 53, 55, 61], "connector": [11, 31, 56, 57, 60], "futur": [11, 12, 62], "migrat": [11, 14], "process": [12, 18, 19, 26, 27, 28, 45, 52, 53, 54, 55, 58, 61, 62, 63], "4": [12, 29, 30, 32, 42, 45, 53, 57, 58, 59], "main": [12, 55, 61], "focu": 12, "releas": 12, "content": [12, 55], "capabl": [12, 52, 62, 63], "apart": [12, 56], "abil": [12, 36, 38, 60, 61, 62, 63], "non": [12, 18, 19, 26, 55, 61], "distribut": [12, 18, 19, 26, 32, 35, 37, 41, 43, 53, 54, 55, 61], "nativ": 12, "oper": [12, 54, 55, 62], "do": [12, 14, 42, 45, 46, 48, 49, 50, 52, 54, 55, 57, 60, 61, 62, 63], "quantiti": [12, 47], "consequ": 12, "form": [12, 23, 24, 54, 55, 62, 63], "develop": [12, 14, 22, 57], "thu": [12, 22, 30, 43, 54, 56, 58, 61, 62, 63], "wa": [12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 54, 55, 56, 58, 59, 60, 61, 62, 63], "announc": 12, "basic": [12, 18, 19, 52, 59], "were": [12, 14, 55, 57, 60, 63], "sampler": [12, 27, 34, 36, 45, 52, 53, 54, 55, 56, 60], "terra": 12, "statevector": [12, 30, 35, 37, 52, 54, 56, 63], "doe": [12, 30, 52, 54, 57, 60, 63], "backend": 12, "simul": [12, 35, 52, 54, 57, 60, 61], "reli": [12, 14, 52, 54, 63], "quantum_info": [12, 35, 37, 52, 62, 63], "instanc": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 36, 39, 42, 45, 52, 53, 54, 55, 59, 60, 61], "more": [12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 29, 39, 45, 52, 53, 54, 56, 57, 59, 60, 61, 63], "found": [12, 18, 27, 34, 36, 51, 54, 55, 59, 61, 62], "worth": 12, "mention": [12, 54, 60], "aer": [12, 52], "thei": [12, 23, 27, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "same": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 39, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "runtim": [12, 54], "ibm": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "devic": [12, 63], "cloud": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 52, 57, 60, 62], "actual": [12, 52, 55, 56, 61, 62], "hardwar": [12, 52, 56, 57, 60], "along": [12, 29, 40, 55, 62], "some": [12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 52, 54, 56, 57, 58, 60, 61, 62, 63], "highli": 12, "qml": [12, 52], "each": [12, 18, 19, 22, 23, 24, 26, 27, 28, 41, 43, 46, 48, 49, 50, 52, 53, 54, 58, 59, 60, 61, 62, 63], "fidel": [12, 34, 35, 36, 37, 55, 58, 63], "close": [12, 54, 56, 62], "pair": [12, 54, 59, 61, 62], "state": [12, 30, 34, 35, 36, 37, 52, 54, 55, 56, 57, 59, 60, 62, 63], "current": [12, 18, 19, 26, 27, 28, 32, 54, 55, 63], "onli": [12, 18, 19, 23, 24, 26, 29, 30, 31, 32, 35, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "avail": [12, 39, 52, 54, 57, 58, 60, 61, 62, 63], "uncomput": [12, 35], "method": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], "similar": [12, 52, 53, 54, 59, 62, 63], "share": [12, 61], "signatur": [12, 22, 54], "so": [12, 23, 24, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63], "call": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 37, 53, 54, 55, 56, 59, 60, 61, 62, 63], "high": [12, 54, 55, 59, 63], "level": [12, 54, 61], "despit": [12, 53, 57], "consist": [12, 24, 29, 54, 62, 63], "singl": [12, 18, 27, 28, 41, 42, 43, 44, 45, 54, 57, 61], "quantumkernel": [12, 39], "did": 12, "everyth": 12, "execut": [12, 54, 56], "overlap": [12, 34, 35, 55], "between": [12, 29, 34, 36, 52, 53, 54, 55, 56, 59, 61, 63], "paramet": [12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "kept": 12, "track": [12, 18, 19, 26, 27, 28], "assign": [12, 23, 24, 36, 37, 38, 47, 51, 53, 62, 63], "becam": 12, "sophist": [12, 54], "inflex": 12, "ad": [12, 32, 35, 55, 59], "could": [12, 53, 54, 62], "tricki": 12, "address": 12, "issu": [12, 14], "goal": [12, 55, 56, 61, 63], "now": [12, 14, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "plug": [12, 52, 55], "extract": [12, 41, 43, 55, 62, 63], "trainabl": [12, 29, 36, 37, 39, 42, 44, 45, 47, 51, 52, 54, 56, 59, 61], "dedic": 12, "shown": [12, 41, 43, 52, 55, 58, 60, 61, 63], "next": [12, 18, 19, 26, 27, 28, 53, 54, 55, 56, 59, 60, 61, 62, 63], "diagram": [12, 54], "expos": [12, 52, 54], "except": [12, 15, 24, 27, 54], "quantum_inst": 12, "have": [12, 14, 22, 23, 24, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "direct": [12, 54, 58], "replac": [12, 58], "instead": [12, 23, 24, 42, 45, 53, 55, 61, 62], "must": [12, 22, 29, 31, 32, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "handl": [12, 44, 54], "select": [12, 57, 59, 61], "previous": [12, 14, 52, 55, 57, 60, 61, 62], "done": [12, 62, 63], "taken": [12, 35, 37, 40, 42, 45, 54, 59], "care": [12, 56], "via": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 35, 38, 39, 42, 45], "hierarchi": 12, "abstract": [12, 20, 26, 33, 38, 44, 46, 47, 48, 49, 50, 51, 52], "basekernel": [12, 22, 23, 24, 34, 35, 38], "concret": 12, "inherit": [12, 23, 24, 35, 37, 52], "trainablekernel": [12, 36, 37, 39, 47, 51, 59], "trainablefidelityquantumkernel": [12, 39, 59], "trainer": [12, 39, 40], "quantumkerneltrain": [12, 59], "accept": [12, 52, 59], "pend": 12, "subsequ": 12, "remov": [12, 14], "after": [12, 29, 35, 54, 57, 60, 61, 62, 63], "updat": [12, 23, 24, 29, 40, 42, 45, 54, 63], "work": [12, 22, 23, 24, 31, 32, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "qsvm": 12, "fix": [12, 36, 37, 38, 52, 54, 56, 60, 61, 63], "random": [12, 22, 31, 32, 52, 53, 54, 57, 60, 61, 62, 63], "util": [12, 23, 24, 39, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "algorithm_glob": [12, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "random_se": [12, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "123456": [12, 56], "simpl": [12, 23, 24, 52, 53, 54, 57, 60, 62], "scikit": [12, 18, 19, 23, 24, 26, 51, 53, 54, 55, 58, 60, 61], "sklearn": [12, 22, 23, 24, 53, 54, 55, 58, 59, 60, 61, 62], "make_blob": [12, 58], "label": [12, 22, 23, 24, 27, 32, 39, 47, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "n_sampl": [12, 22, 23, 24, 53, 57, 58, 61], "20": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "center": [12, 58], "2": [12, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 42, 45, 49, 53, 58, 59], "center_box": 12, "cluster_std": 12, "random_st": [12, 24, 53, 54, 58, 60, 62], "we": [12, 14, 32, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "quantuminst": 12, "case": [12, 14, 18, 19, 22, 26, 27, 28, 29, 32, 42, 44, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63], "wrap": [12, 29, 56], "basica": [12, 58], "sv_qi": 12, "get_backend": 12, "statevector_simul": 12, "seed_simul": 12, "seed_transpil": 12, "zzfeaturemap": [12, 27, 28, 29, 32, 33, 34, 35, 36, 37, 42, 45, 53, 54, 55, 57, 59, 62], "feature_map": [12, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 42, 45, 53, 54, 55, 57, 58, 59, 61, 62], "previous_kernel": 12, "And": [12, 56, 58], "final": [12, 56, 58, 59, 60, 61, 62, 63], "fit": [12, 18, 19, 22, 23, 24, 26, 27, 28, 39, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "svm": [12, 22, 23, 24, 51, 54, 55, 58, 59], "quantum_kernel": [12, 22, 23, 24, 39, 40, 47, 51, 55, 58, 59], "score": [12, 18, 19, 22, 23, 24, 26, 27, 28, 53, 54, 55, 58, 60, 61, 62], "95": 12, "none": [12, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 52, 53, 54, 57, 59, 60], "But": [12, 52, 54], "manual": [12, 54, 56, 60, 61], "illustr": [12, 54, 55, 57, 59], "purpos": [12, 54, 55, 56, 58, 60, 61, 62], "qiskitruntimeservic": 12, "servic": [12, 54], "state_fidel": [12, 55], "computeuncomput": [12, 34, 36, 55], "new_kernel": 12, "befor": [12, 18, 22, 27, 31, 41, 43, 52, 54, 55, 61, 62, 63], "chang": [12, 14, 23, 24, 29, 45, 52, 54, 57, 61, 62], "dramat": 12, "below": [12, 23, 24, 55, 62, 63], "pre": [12, 22, 52, 57, 58, 62, 63], "twolayerqnn": 12, "few": [12, 54, 63], "One": [12, 27, 36, 37, 52, 54, 55, 62, 63], "keep": [12, 24, 52, 55, 61, 63], "name": [12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 52, 53, 54, 55, 57, 60, 62], "longer": [12, 14, 35], "opflow": 12, "custom": [12, 14, 45, 53, 54, 55, 57, 59, 61], "been": [12, 14, 18, 19, 22, 26, 27, 28, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "time": [12, 14, 23, 29, 40, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63], "might": [12, 14, 55, 61], "lower": [12, 55, 59, 61], "ll": [12, 52, 54, 57, 60, 62, 63], "show": [12, 23, 24, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "how": [12, 18, 19, 23, 24, 26, 27, 28, 34, 36, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "re": [12, 57, 60, 63], "still": [12, 53, 54, 62], "quantumcircuit": [12, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 42, 45, 52, 53, 56, 57, 59, 61, 62, 63], "realamplitud": [12, 27, 28, 29, 42, 45, 53, 54, 57, 60, 61, 63], "num_input": [12, 42, 44, 45, 52, 53, 57, 61], "rep": [12, 53, 54, 55, 56, 57, 58, 61, 63], "compos": [12, 29, 42, 45, 56, 57, 59, 62, 63], "inplac": [12, 42, 45, 56, 57, 62, 63], "true": [12, 18, 19, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 42, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "need": [12, 18, 19, 23, 26, 27, 28, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "pariti": [12, 45, 52, 53, 57, 61], "def": [12, 45, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "return": [12, 15, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63], "b": [12, 52, 53, 54, 55, 58, 59, 60, 61, 63], "format": [12, 27, 32, 45, 52, 53, 57, 61], "count": [12, 45, 52, 53, 57, 61, 63], "initi": [12, 18, 19, 26, 27, 28, 30, 31, 39, 52, 54, 55, 57, 59, 60, 61, 62, 63], "point": [12, 18, 19, 23, 24, 26, 27, 28, 32, 39, 40, 52, 53, 54, 55, 58, 59, 60, 62, 63], "result": [12, 18, 19, 23, 26, 27, 28, 31, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 55, 57, 59, 62, 63], "initial_point": [12, 18, 19, 26, 27, 28, 39, 54, 59, 60, 61, 62, 63], "num_paramet": [12, 56, 60, 63], "neural_network": [12, 16, 17, 18, 19, 20, 21, 26, 27, 28, 31, 42, 44, 45, 52, 53, 56, 57, 60, 61, 62, 63], "circuit_qnn": 12, "input_param": [12, 39, 42, 45, 52, 56, 57, 62, 63], "weight_param": [12, 42, 45, 52, 56, 57, 62, 63], "output_shap": [12, 18, 19, 26, 42, 44, 45, 52, 53, 57, 61, 63], "aim": [12, 56, 63], "good": [12, 36, 37, 53, 54, 61], "number": [12, 18, 22, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "iter": [12, 18, 19, 22, 26, 27, 28, 36, 37, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63], "small": [12, 23, 54, 55, 56, 61], "reduc": [12, 53, 55, 61, 62, 63], "optim": [12, 18, 19, 26, 27, 28, 30, 35, 36, 37, 39, 40, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63], "cobyla": [12, 53, 54, 60, 61, 62, 63], "loss": [12, 16, 17, 18, 19, 20, 21, 26, 27, 28, 39, 46, 47, 48, 49, 51, 52, 53, 59, 62], "cross_entropi": [12, 18, 19, 26, 27, 53], "one_hot": [12, 18, 32, 55, 59], "maxit": [12, 53, 54, 59, 60, 61, 62, 63], "40": [12, 52, 54, 57, 60, 61, 63], "6": [12, 14, 29, 42, 45, 53, 54, 55, 57, 58, 59, 60, 61], "sampler_qnn": [12, 52, 53], "what": [12, 52, 54, 55, 56, 61, 62], "numpi": [12, 18, 19, 26, 27, 28, 30, 36, 37, 38, 39, 41, 42, 43, 44, 45, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "np": [12, 18, 19, 23, 24, 26, 27, 28, 30, 31, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "num_sampl": [12, 53, 57, 60, 61], "ep": [12, 53, 57], "lb": [12, 53, 57], "ub": [12, 53, 57], "pi": [12, 32, 53, 55, 57, 58, 59, 62], "rand": 12, "sin": [12, 53, 57], "ry": [12, 39, 52, 53, 57, 59, 62], "weight": [12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 41, 42, 43, 44, 45, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63], "paulisumop": 12, "statefn": 12, "from_list": [12, 52, 62], "z": [12, 28, 42, 52, 62], "is_measur": 12, "opflow_qnn": 12, "due": [12, 22, 58, 62, 63], "natur": [12, 22, 32, 35, 57, 58, 61], "converg": [12, 54, 57, 59, 60, 62, 63], "l_bfgs_b": [12, 53, 54], "9681198723451012": 12, "otim": [12, 28, 32, 42, 52, 62, 63], "qubit": [12, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 42, 45, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63], "specifi": [12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 38, 39, 42, 45, 51, 52, 54, 60], "estimator_qnn": [12, 52, 53, 61], "default": [12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 52, 53, 54, 55, 57, 58, 59, 60, 61], "compon": [12, 23, 24, 54], "explicitli": [12, 42, 45, 52, 53, 55, 57, 59], "learner": 12, "fulli": [12, 32, 34, 36, 62], "discriminativenetwork": 12, "generativenetwork": 12, "numpydiscrimin": 12, "pytorchdiscrimin": 12, "quantumgener": 12, "qgan": 12, "pleas": [12, 18, 19, 23, 24, 26, 27, 28, 52, 53, 54, 56, 57, 58, 60], "step": [12, 22, 45, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "client": 12, "program": [12, 51], "emb": [12, 57], "script": 12, "jupyt": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "qiskit_version_t": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "qiskit_copyright": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "informationqiskit": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "softwareversionqiskit": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "terra0": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "25": [12, 52, 53, 54, 55, 57, 59, 60, 62], "0qiskit": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61], "aer0": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "13": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "learning0": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "0system": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "informationpython": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "version3": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "8": [12, 42, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "13python": [12, 56, 59, 60, 63], "compilerclang": [12, 52, 53, 56, 59, 60, 61, 63], "12": [12, 32, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "builddefault": [12, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63], "oct": [12, 54, 56, 58, 59, 60, 63], "19": [12, 53, 54, 55, 56, 57, 59, 60, 61, 63], "2022": [12, 52, 54, 56, 57, 58, 59, 60, 63], "17": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "54": [12, 54, 56, 59, 60, 63], "22osdarwincpus10memori": [12, 56, 59, 60, 63], "gb": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "64": [12, 52, 54, 56, 57, 58, 59, 60, 63], "0thu": [12, 63], "sep": [12, 62], "14": [12, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "57": [12, 52, 57], "31": [12, 52, 53, 54, 57, 58], "2023": [12, 52, 53, 55, 56, 59, 60, 61, 62], "ist": [12, 59, 60], "part": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "copi": [12, 23, 24, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "copyright": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "2017": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "licens": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "under": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "apach": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "mayobtain": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "file": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "root": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "directori": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "tree": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "www": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "ani": [12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 40, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "modif": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "deriv": [12, 27, 28, 29, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "retain": [12, 23, 24, 35, 37, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "thiscopyright": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "notic": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "modifi": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "carri": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "indicatingthat": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "alter": [12, 39, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "origin": [12, 23, 24, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "bind": 14, "order": [14, 23, 24, 56, 57, 61, 62, 63], "end": [14, 32, 54, 56], "up": [14, 18, 19, 26, 45, 53, 54, 55, 57, 60, 63], "incorrect": 14, "param": [14, 23, 24, 39, 40, 47, 51, 52, 62], "bound": [14, 30, 36, 37, 42, 51, 59, 61], "would": [14, 18, 24, 52, 62], "right": [14, 32, 48, 52, 55, 56], "most": [14, 18, 27, 54, 57, 61], "often": [14, 42, 45, 54], "led": 14, "howev": [14, 22, 52, 57, 58, 59, 62, 63], "etc": [14, 17, 52], "alwai": [14, 24, 27, 54], "unexpect": 14, "behavior": [14, 39], "sequenc": [14, 36, 37, 38, 39, 42, 45, 47, 51], "suppli": [14, 29], "matter": [14, 61], "organ": [14, 52], "further": [14, 23, 51, 55, 56, 60, 62, 63], "emphas": 14, "driven": 14, "project": [14, 33, 34, 35, 36, 37, 38, 55, 56], "reflect": [14, 33, 34, 35, 36, 37], "becaus": [14, 24, 42, 45, 52, 54, 55, 56, 57, 61, 62, 63], "onboard": 14, "owner": 14, "maintain": 14, "decid": [14, 52, 54, 60], "deprec": 14, "regardless": 14, "ensur": [14, 29, 52, 54, 55, 58, 61], "new": [14, 29, 45, 52, 54, 55, 56, 57, 59, 60, 61, 63], "member": 14, "team": 14, "larg": [14, 22, 56, 58, 60, 61, 62, 63], "bulk": 14, "legaci": 14, "mean": [14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 53, 54, 56, 57, 62, 63], "thing": [14, 52], "noth": 14, "otherwis": [14, 18, 19, 23, 24, 26, 29, 31, 35, 37, 60], "sure": [14, 57], "workflow": [14, 52, 55, 57], "doesn": 14, "t": [14, 22, 23, 24, 27, 28, 30, 52, 54, 55, 56, 57, 59], "If": [14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 52, 54, 55, 56, 57, 58, 61, 63], "cannot": [14, 29, 52, 62, 63], "want": [14, 52, 54, 56, 60, 61], "continu": [14, 56, 62, 63], "pin": 14, "around": [14, 52, 54], "read": [14, 23, 24, 42, 45], "blog": 14, "post": [14, 45, 52], "messag": 15, "error": [15, 22, 23, 24, 28, 31, 48, 49, 51, 53, 57, 61], "modul": [15, 31, 52, 56, 57], "add_not": 15, "note": [15, 23, 24, 31, 42, 45, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63], "add": [15, 36, 37, 54, 55, 56, 58, 62], "with_traceback": 15, "tb": 15, "self": [15, 18, 19, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 56, 57, 59], "__traceback__": 15, "objectivefunct": [16, 17, 21], "object": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 35, 36, 37, 39, 40, 41, 42, 45, 47, 51, 53, 54, 57, 59, 60, 61, 62, 63], "binari": [16, 18, 19, 26, 51, 52, 53, 56, 57, 59, 61], "represent": [16, 17, 18, 19, 21, 26, 27, 28, 58, 60, 63], "\u09aa": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55], "\u09b0": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "ndarrai": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "target": [16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 39, 46, 48, 49, 50, 53, 54, 56, 57, 62], "neuralnetwork": [16, 17, 18, 19, 20, 21, 26, 31, 41, 42, 43, 45, 52, 53, 57], "\u09a8\u09b8": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "\u09a8": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "\u0987\u09aa": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "float": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 39, 42, 44, 45, 47, 51, 56], "multiclass": 17, "squared_error": [18, 19, 26, 28, 53], "fals": [18, 19, 22, 23, 24, 26, 27, 28, 32, 35, 42, 44, 45, 55, 56, 57, 58, 59, 60, 61, 63], "warm_start": [18, 19, 26, 27, 28, 60], "callback": [18, 19, 26, 27, 28, 53, 54, 60, 61, 62], "trainablemodel": [18, 19], "classifiermixin": [18, 22], "multi": [18, 19, 22, 23, 26, 27, 53], "assum": [18, 19, 26, 35, 46], "entri": [18, 19, 26, 36, 37, 52, 59], "neg": [18, 19, 24, 26, 52, 57], "sum": [18, 19, 24, 26, 53, 56, 57, 60, 63], "hot": [18, 19, 21, 26, 27, 32, 46, 53, 60], "encod": [18, 19, 21, 26, 27, 46, 53, 54, 58, 59, 60, 62, 63], "consid": [18, 19, 26, 29, 53, 54, 55, 62], "appli": [18, 19, 26, 30, 32, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63], "whole": [18, 19, 26, 60, 62], "individu": [18, 19, 26, 46, 48, 49, 50], "str": [18, 19, 22, 23, 24, 25, 26, 27, 28, 34, 36, 39, 52, 53], "l2": [18, 19, 26, 49], "string": [18, 19, 26, 27, 39, 53, 59, 63], "absolute_error": [18, 19, 26], "l1": [18, 19, 26, 48], "bool": [18, 19, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45], "determin": [18, 19, 24, 26, 27, 28, 29, 35, 37, 41, 42, 43, 44, 45, 57, 62, 63], "crossentropi": 18, "predict": [18, 19, 22, 23, 24, 26, 27, 28, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 62], "occurr": [18, 56], "frequenc": 18, "absolut": [18, 48], "squar": [18, 24, 28, 49, 53, 57], "categor": [18, 27, 53], "integ": [18, 27, 29, 41, 43, 45, 52, 62], "minim": [18, 19, 26, 27, 28, 39, 51, 53, 54, 62, 63], "callabl": [18, 19, 22, 26, 27, 28, 39, 45], "protocol": [18, 19, 26, 27, 28, 39], "slsqp": [18, 19, 26, 27, 28], "previou": [18, 19, 26, 27, 28, 53, 54, 55, 57, 60, 63], "access": [18, 19, 26, 27, 28, 52, 57, 61], "intermedi": [18, 19, 26, 27, 28, 62], "invok": [18, 19, 26, 27, 28], "go": [18, 19, 26, 27, 28, 53, 54, 56, 57, 60, 61], "\u0987\u099c": [18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 39, 40, 42, 44, 45, 46, 48, 49, 50, 53, 57], "\u09b8": [18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 39, 40, 42, 44, 45, 46, 48, 49, 50], "qiskitmachinelearningerror": [18, 19, 22, 26, 27, 28, 29, 31, 42, 44, 45, 46, 48, 49, 50], "unknown": [18, 19, 26, 39, 63], "invalid": [18, 19, 26, 27, 28, 42, 44, 45], "attribut": [18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54], "fit_result": [18, 19, 26, 27, 28], "procedur": [18, 19, 26, 27, 28, 32, 58, 63], "optimizerresult": [18, 19, 26, 27, 28], "num_class": [18, 27], "recent": [18, 27], "warm": [18, 19, 26, 27, 28], "flag": [18, 19, 22, 26, 27, 28, 52], "queri": [18, 19, 26, 27, 28, 53], "incompat": [18, 19, 22, 26, 27, 28], "classmethod": [18, 19, 22, 23, 24, 25, 26, 27, 28], "load": [18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 52, 54, 57, 62, 63], "file_nam": [18, 19, 22, 23, 24, 25, 26, 27, 28], "whose": [18, 19, 22, 23, 24, 25, 26, 27, 28, 63], "warn": [18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 63], "rais": [18, 19, 22, 23, 24, 25, 26, 27, 28, 31], "nevertheless": [18, 19, 22, 23, 24, 25, 26, 27, 28], "valid": [18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 54, 56], "path": [18, 19, 22, 23, 24, 25, 26, 27, 28], "typeerror": [18, 19, 22, 23, 24, 25, 26, 27, 28, 40], "save": [18, 19, 22, 23, 24, 25, 26, 27, 28, 57, 62, 63], "intern": [18, 19, 22, 23, 24, 25, 26, 27, 28, 47], "serial": [18, 19, 22, 23, 24, 25, 26, 27, 28], "dill": [18, 19, 22, 23, 24, 25, 26, 27, 28], "referenc": [18, 19, 22, 23, 24, 25, 26, 27, 28, 54], "That": [18, 19, 22, 23, 24, 25, 26, 27, 28, 54], "infer": [18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 34, 36, 52, 57, 60], "even": [18, 19, 22, 23, 24, 25, 26, 27, 28, 34, 36, 54, 62, 63], "sample_weight": [18, 19, 22, 23, 24, 26, 27, 28], "accuraci": [18, 19, 22, 23, 26, 27, 28, 55, 57, 59, 61, 62], "coeffici": [18, 19, 24, 26, 27, 28], "test": [18, 19, 22, 23, 24, 26, 27, 28, 32, 54, 55, 57, 58, 60, 61], "regressormixin": 19, "forward": [20, 31, 41, 42, 43, 44, 45, 53, 56, 57, 61, 63], "backward": [20, 41, 42, 43, 44, 45, 56, 57, 61], "c": [22, 23, 24, 51, 53, 58, 59, 62, 63], "num_step": [22, 58], "1000": [22, 58], "precomput": [22, 23, 24], "seed": [22, 52, 54, 55, 56, 57, 60, 61, 63], "serializablemodelmixin": [22, 23, 24, 26], "pegaso": [22, 55], "decision_funct": [22, 23], "svc": [22, 23, 51, 54], "adapt": [22, 59], "pegasos_qsvc": [22, 58], "sample_train": [22, 23, 24], "label_train": [22, 23, 24], "sample_test": [22, 23, 24], "shalev": [22, 58], "shwartz": [22, 58], "et": [22, 41, 43, 54, 56, 58, 61, 62], "al": [22, 41, 43, 54, 56, 58, 61, 62], "primal": [22, 58], "sub": [22, 23, 24, 58], "solver": [22, 58], "posit": [22, 29, 33, 34, 35, 36, 37, 38, 58], "regular": [22, 58, 61], "strength": [22, 58], "invers": [22, 58, 63], "proport": [22, 23, 58], "smaller": [22, 58, 63], "induc": [22, 58], "help": [22, 54, 55, 58, 61], "prevent": [22, 58], "overfit": [22, 54, 58, 61], "becom": [22, 55, 58], "trivial": [22, 58, 61], "improv": [22, 52, 58], "perform": [22, 23, 24, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63], "drastic": [22, 58], "linearli": [22, 54, 55, 58], "separ": [22, 23, 32, 53, 54, 55, 58, 61], "chosen": [22, 31, 55, 56, 57, 58, 60, 62, 63], "perfect": [22, 58], "int": [22, 27, 28, 29, 30, 32, 35, 37, 41, 43, 44, 45, 56, 63], "There": [22, 53, 54, 55, 58, 63], "earli": [22, 58], "stop": [22, 58, 62], "criterion": [22, 58], "over": [22, 39, 51, 58, 61, 63], "boolean": 22, "indic": [22, 41, 43, 45, 61], "whether": [22, 31, 32, 35, 37, 42, 44, 45, 59, 62], "valueerror": [22, 28, 32, 34, 39], "type": [22, 28, 35, 37, 42, 45, 54, 62, 63], "unfit": 22, "decis": [22, 23, 55], "shape": [22, 23, 24, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 63], "m_sampl": 22, "n_featur": [22, 23, 24, 53, 58, 61], "size": [22, 29, 35, 37, 41, 43, 52, 54, 55, 57, 58, 59, 61, 63], "element": [22, 34, 36, 42, 44, 45, 48, 49, 54], "wrong": [22, 54], "accord": [22, 23, 24, 32, 58, 61], "uniqu": 22, "notimplementederror": 22, "subset": [22, 23, 55], "harsh": [22, 23], "metric": [22, 23, 55, 56, 59, 61], "sinc": [22, 23, 30, 39, 55, 56, 59, 62, 63], "correctli": [22, 23], "n_output": [22, 23, 24], "w": [22, 23, 24, 35, 54, 55, 56, 58, 59, 60], "kwarg": [23, 24, 31, 38, 51], "qkernel": [23, 24, 58], "arg": [23, 24, 31, 51, 59], "variabl": [23, 24], "length": [23, 24, 47, 51, 52, 54, 59, 62, 63], "argument": [23, 24, 29, 40, 51, 52, 55, 59], "list": [23, 24, 41, 42, 43, 44, 45, 52, 59, 62], "constructor": [23, 24, 42, 45, 51, 52, 55, 58, 61], "arbitrari": [23, 24, 51], "keyword": [23, 24, 51, 52], "coef_": [23, 24], "linear": [23, 24, 55, 56, 57], "n_class": [23, 24, 53], "n_support_": [23, 24], "proba_": 23, "platt": 23, "scale": [23, 52, 53, 54, 56, 60], "probb_": 23, "unused_param": [23, 24], "nu": 23, "decision_function_shap": 23, "ovr": 23, "ovo": 23, "distanc": [23, 54, 56], "hyperplan": [23, 55], "exact": [23, 35, 37, 56], "divid": [23, 61, 62, 63], "norm": [23, 57], "question": 23, "monoton": 23, "transform": [23, 27, 30, 53, 54, 55, 57, 60, 62], "real": [23, 24, 52, 56, 57, 60, 63], "per": [23, 24, 54, 56, 62], "rescal": [23, 24], "forc": [23, 24], "put": [23, 24, 55], "emphasi": [23, 24], "contigu": [23, 24], "float64": [23, 24], "scipi": [23, 24, 56], "csr_matrix": [23, 24], "dens": [23, 24, 57, 60], "get_metadata_rout": [23, 24], "metadata": [23, 24], "rout": [23, 24], "check": [23, 24, 52, 54, 57], "metadatarequest": [23, 24], "encapsul": [23, 24], "get_param": [23, 24], "subobject": [23, 24], "dict": [23, 24], "n_samples_test": [23, 24], "n_samples_train": [23, 24], "y_pred": [23, 24, 59], "predict_log_proba": 23, "log": [23, 46, 56, 57], "possibl": [23, 24, 34, 36, 53, 57, 61, 62, 63], "outcom": [23, 53, 56, 57, 61, 63], "column": [23, 54, 60], "sort": 23, "appear": [23, 54, 56], "classes_": 23, "creat": [23, 29, 34, 36, 39, 42, 45, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "cross": [23, 46, 56, 57], "slightli": [23, 54], "those": [23, 27, 54, 57], "obtain": [23, 53, 54, 56, 58, 60, 61, 62, 63], "produc": [23, 35, 61], "meaningless": 23, "predict_proba": 23, "set_fit_request": [23, 24], "unchang": [23, 24], "request": [23, 24], "relev": [23, 24, 61, 63], "enable_metadata_rout": [23, 24], "set_config": [23, 24], "ignor": [23, 24, 42, 45, 62], "meta": [23, 24], "alia": [23, 24], "metadata_rout": [23, 24], "3": [23, 24, 29, 30, 32, 42, 45, 53, 57, 58, 59], "\u09b8\u09a8": [23, 24], "insid": [23, 24, 54, 56], "pipelin": [23, 24], "effect": [23, 24, 41, 43, 54, 55, 62, 63], "set_param": [23, 24], "nest": [23, 24], "latter": [23, 24, 54, 55], "__": [23, 24, 63], "set_score_request": [23, 24], "svr": 24, "class_weight_": 24, "inlier": 24, "outlier": 24, "frac": [24, 62, 63], "u": [24, 35, 52, 54, 55, 62, 63], "v": [24, 32, 35, 54, 55, 57, 58], "residu": 24, "y_true": [24, 59], "total": [24, 60, 61, 63], "best": [24, 54, 55, 56], "arbitrarili": 24, "wors": [24, 54], "constant": 24, "disregard": [24, 62, 63], "n_samples_fit": 24, "multioutput": 24, "uniform_averag": 24, "23": [24, 52, 53, 54, 55, 56, 57, 60, 63], "r2_score": 24, "influenc": [24, 52], "multioutputregressor": 24, "num_qubit": [27, 28, 29, 30, 42, 45, 52, 53, 54, 56, 57, 58, 61, 62, 63], "measur": [27, 28, 35, 45, 52, 53, 54, 56, 59, 61, 62, 63], "instanti": [27, 35, 37, 55, 58, 59], "variou": [27, 63], "plain": 27, "neither": [27, 28], "adjust": [27, 28, 29, 33, 34, 35, 36, 37, 62, 63], "zfeaturemap": [27, 28, 29, 58, 61, 62], "least": [27, 28, 29], "Or": [27, 28], "baseoper": [28, 42], "num": [28, 42, 53, 63], "_qubit": [28, 42], "blueprintcircuit": [29, 30], "blueprint": 29, "simplifi": [29, 42, 45, 53, 61, 62], "composit": [29, 42, 45, 53, 61], "At": 29, "potenti": [29, 45, 56], "mismatch": [29, 33, 34, 35, 36, 37], "three": [29, 52, 53, 54, 55, 62, 63], "resolv": 29, "properti": [29, 40, 42, 45, 53, 54, 60], "incorpor": [29, 57, 61], "configur": [29, 31, 56, 63], "latest": 29, "qnn_qc": [29, 42, 45], "print": [29, 30, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "q_0": [29, 30, 59], "q_1": [29, 30, 59], "\u03b8": [29, 51, 54, 59, 62], "5": [29, 42, 45, 51, 53, 57, 58, 59, 60], "input_paramet": [29, 42, 45], "parameterview": 29, "parametervectorel": [29, 59], "weight_paramet": [29, 42, 45], "although": [29, 54], "overridden": 29, "long": [29, 54, 57, 62, 63], "num_input_paramet": 29, "num_weight_paramet": 29, "feature_dimens": [30, 42, 45, 54, 55, 58, 61], "raw": 30, "act": [30, 62, 63], "parameter": [30, 33, 34, 35, 36, 37, 42, 45, 51, 53, 54, 56, 57, 58, 61, 63], "log2": [30, 56], "placehold": [30, 54], "instruct": 30, "synthes": 30, "amplitud": [30, 63], "therefor": [30, 52, 61, 62, 63], "draw": [30, 52, 53, 54, 56, 57, 60, 61, 62, 63], "text": [30, 46, 48, 49, 56, 62, 63], "parameterizediniti": 30, "ordered_paramet": 30, "p": [30, 54, 62, 63], "sqrt": [30, 56, 63], "assign_paramet": [30, 63], "70711": 30, "n_qubit": 30, "feature_dim": 30, "nn": [31, 56, 57], "connect": [31, 61, 62, 63], "rememb": [31, 52, 57], "input_gradi": [31, 42, 44, 45, 52, 57], "properli": 31, "initial_weight": [31, 56, 57], "uniformli": [31, 32, 57], "input_data": [31, 42, 44, 45], "training_s": [32, 55, 59], "test_siz": [32, 55, 59, 62], "gap": [32, 55, 59], "plot_data": [32, 55, 59], "include_sample_tot": [32, 55, 59], "toi": [32, 61], "outlin": 32, "vec": [32, 55], "phi": [32, 34, 35, 55, 56, 62], "u_": 32, "h": [32, 52, 55, 56, 63], "exp": [32, 62], "left": [32, 48, 55, 56, 58, 59, 60, 62], "sum_": [32, 46, 48, 49, 51, 56], "subseteq": 32, "phi_": [32, 36, 37], "prod_": 32, "z_i": 32, "begin": [32, 39, 56, 60, 62, 63], "j": [32, 35, 51, 56, 62, 63], "x_i": [32, 51], "x_j": [32, 51, 56], "rule": [32, 54, 57, 60], "dagger": [32, 35, 63], "prod_i": 32, "delta": 32, "mathrm": 32, "su": [32, 62], "unitari": [32, 62], "havl\u00ed\u010dek": [32, 35], "c\u00f3rcole": [32, 35], "temm": [32, 35], "harrow": [32, 35], "aw": 32, "kandala": [32, 35], "chow": [32, 35], "jm": 32, "gambetta": [32, 35], "supervis": [32, 35, 55], "enhanc": [32, 35, 55], "2019": [32, 35, 56, 62], "mar": 32, "567": [32, 35], "7747": [32, 35], "209": [32, 35], "arxiv": [32, 35, 51], "1804": [32, 35], "11326": 32, "plot": [32, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63], "matplotlib": [32, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "uniform": [32, 41, 43, 56, 61, 62, 63], "grid": [32, 54, 56, 58], "tupl": [32, 42, 44, 45, 52], "enforce_psd": [33, 34, 35, 36, 37, 38], "abc": [33, 38, 44, 47, 50], "definit": [33, 35, 38, 41, 43, 52, 57], "dot": [33, 60, 63], "try": [33, 34, 35, 36, 37, 54, 63], "closest": [33, 34, 35, 36, 37, 38], "semidefinit": [33, 34, 35, 36, 37, 38], "num_featur": [33, 34, 35, 36, 37, 38, 54, 60], "x_vec": [33, 34, 35, 36, 37, 38, 55], "y_vec": [33, 34, 35, 36, 37, 38, 55], "1d": [33, 34, 35, 36, 37, 38, 60], "2d": [33, 34, 35, 36, 37, 38, 56], "nxd": [33, 34, 35, 36, 37, 38], "d": [33, 34, 35, 36, 37, 38, 39, 53, 61, 62], "mxd": [33, 34, 35, 36, 37, 38], "nxm": [33, 34, 35, 36, 37, 38], "evaluate_dupl": [34, 36], "off_diagon": [34, 36], "top": [34, 36], "strategi": [34, 36, 52], "duplic": [34, 36], "diagon": [34, 36], "ones": [34, 36, 56, 63], "nois": [34, 35, 36, 56, 62, 63], "rest": [34, 36, 61], "ident": [34, 36, 45, 55, 63], "unsupport": 34, "statevector_typ": [35, 37], "cache_s": [35, 37], "auto_clear_cach": [35, 37], "shot": [35, 37, 56], "limit": [35, 43], "subclass": [35, 52, 62], "store": [35, 52, 53, 56, 57, 60, 61, 63], "cach": [35, 37], "avoid": [35, 62], "repeat": [35, 56, 63], "clear": [35, 37, 54, 57], "clear_cach": [35, 37], "By": [35, 41, 42, 43, 44, 45, 52, 53, 61, 62, 63], "unless": 35, "emul": 35, "drawn": [35, 37], "binomi": [35, 37], "equal": [35, 37, 53, 58, 59, 62], "prepar": [35, 53, 56, 63], "With": [35, 52, 55], "semi": 35, "condit": 35, "enforc": [35, 61], "212": 35, "11326v2": 35, "quant": 35, "ph": 35, "sv": [35, 37], "maximum": [35, 37, 54, 58, 59], "unbound": [35, 37], "training_paramet": [36, 37, 38, 39, 59], "big": [36, 37, 56], "challeng": [36, 37], "choos": [36, 37, 52, 54, 56, 60], "fine": [36, 37], "tune": [36, 37, 54, 62, 63], "theta": [36, 37, 56, 62, 63], "k_": [36, 37, 51, 55], "parametervector": [36, 37, 38, 39, 52, 59, 62], "gate": [36, 37, 52, 54, 56, 62, 63], "intend": [36, 37], "field": [36, 37, 52, 54, 59], "num_training_paramet": [36, 37, 38], "parameter_valu": [36, 37, 38, 47, 51], "numer": [36, 37, 38, 54, 57, 62], "assign_training_paramet": [36, 37, 38], "fidelitystatevectorkernel": 37, "super": [38, 56, 57], "qc": [39, 42, 45, 53, 56, 57, 61, 62, 63], "x_par": 39, "training_param": [39, 59], "\u03b8_par": 39, "rotat": [39, 56, 58, 59], "layer": [39, 52, 54, 57, 59, 63], "enumer": [39, 57], "rz": [39, 62], "quant_kernel": [39, 59], "loss_func": [39, 57], "qk_trainer": 39, "qkt_result": 39, "x_train": [39, 57, 59], "y_train": [39, 59], "optimized_kernel": [39, 59], "kernelloss": [39, 51, 59], "svc_loss": [39, 59], "svcloss": [39, 59], "exhibit": 39, "analyt": 39, "recommend": [39, 57, 60], "spsa": [39, 59], "quantumkerneltrainerresult": [39, 59], "No": [39, 54], "variationalresult": 40, "optimal_circuit": [40, 59], "retriev": 40, "minimum": [40, 58], "eigenst": 40, "optimal_paramet": [40, 59], "dictionari": [40, 54, 59], "optimal_point": [40, 59], "optimal_valu": [40, 59], "optimizer_ev": [40, 59], "optimizer_result": [40, 59], "optimizer_tim": [40, 59], "receiv": 40, "weight_sampl": [41, 43, 61], "input_sampl": [41, 43, 61], "global": [41, 43, 55], "abba": [41, 43, 61], "power": [41, 43, 57, 61], "num_weight": [41, 42, 43, 44, 45, 52, 53, 57, 61], "fisher": [41, 43, 54, 61], "num_input_sampl": [41, 43, 61], "num_weight_sampl": [41, 43, 61], "qnn_input_s": [41, 43], "randomli": [41, 43, 54, 57, 61], "normal": [41, 43, 54, 55, 56, 61], "get_effective_dimens": [41, 43, 61], "dataset_s": [41, 43, 61], "num_data": [41, 43], "effective_dim": [41, 43], "get_fisher_inform": [41, 43], "model_output": [41, 43], "averag": [41, 43, 61], "jacobian": [41, 43], "everi": [41, 43, 62], "output_s": [41, 43], "get_normalized_fish": [41, 43], "normalized_fish": [41, 43], "trace": [41, 43, 61], "fisher_trac": [41, 43], "run_monte_carlo": [41, 43], "mont": [41, 43, 61], "carlo": [41, 43, 61], "grad": [41, 43], "quit": [42, 45, 53, 54, 56, 61, 63], "Such": [42, 45], "built": [42, 45, 54, 62], "qnncircuit": [42, 45, 53, 61], "onc": [42, 45, 52, 53, 54, 55, 56, 60], "baseestimatorgradi": 42, "repres": [42, 52, 54, 55, 56, 59, 61, 62], "paramshiftestimatorgradi": 42, "proper": [42, 45], "scalar": [42, 44, 45], "cast": [42, 44, 45], "sparsearrai": [42, 44, 45], "effectivedimens": [43, 61], "batch": [44, 57], "match": [45, 46, 48, 49, 50, 57], "bin": 45, "basesamplergradi": 45, "unsign": 45, "paramshiftsamplergradi": 45, "implicitli": [45, 55], "set_interpret": 45, "entropi": [46, 56, 57], "n_": [46, 48, 49], "target_i": [46, 48, 49], "predict_i": [46, 48, 49], "softmax": [46, 57], "unlik": 47, "truth": [47, 51, 53], "x_": [51, 53, 56, 57], "y_": [51, 53, 57], "a_i": 51, "a_j": [51, 62], "k_\u03b8": 51, "lagrang": 51, "multipli": 51, "standard": [51, 54, 57, 58], "quadrat": 51, "hyper": [51, 58], "soft": 51, "margin": [51, 58, 59], "penalti": 51, "equival": [51, 63], "maxim": [51, 63], "align": [51, 59], "turn": [51, 56, 63], "yield": [51, 58], "smallest": 51, "upper": [51, 55, 58, 59, 60], "ab": [51, 63], "2105": 51, "03406": 51, "within": [51, 53], "\u09a4": [52, 53, 55], "doc": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "01_neural_network": 52, "ipynb": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "\u09a5": [52, 53, 55, 57], "\u099b": [52, 53, 55, 57], "notebook": [52, 55, 62], "demonstr": [52, 54, 57, 59, 62, 63], "structur": [52, 54, 55, 56, 59, 63], "inspir": 52, "human": 52, "brain": 52, "recogn": [52, 62], "complex": [52, 53, 54, 56, 58, 61], "seri": [52, 54, 55, 61, 62], "interconnect": 52, "node": [52, 55, 63], "neuron": 52, "motiv": 52, "behind": [52, 55], "notion": [52, 61], "scheme": [52, 56], "principl": [52, 55], "lie": 52, "intersect": 52, "view": [52, 55, 57, 62], "perspect": 52, "again": [52, 53, 54, 55, 60, 63], "hidden": 52, "manner": [52, 62], "counterpart": [52, 54, 63], "later": [52, 55, 57, 61, 63], "figur": [52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "seen": [52, 54, 62, 63], "complementari": 52, "necessarili": 52, "strict": 52, "concept": 52, "constitut": 52, "meant": 52, "agnost": 52, "unit": 52, "setup": [52, 54, 55, 57], "stateless": 52, "push": 52, "nor": 52, "let": [52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "look": [52, 53, 54, 55, 56, 60, 61, 62, 63], "don": [52, 54, 55, 56, 57], "qiskit_algorithm": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "42": [52, 53, 57, 58, 60, 61, 63], "action": [52, 61], "26": [52, 53, 57, 63], "params1": 52, "input1": 52, "weight1": 52, "qc1": 52, "rx": 52, "mpl": [52, 53, 54, 56, 57, 61, 62, 63], "27": [52, 53, 57], "sparsepauliop": [52, 62], "observable1": 52, "togeth": [52, 61], "treat": [52, 55], "while": [52, 54, 55, 57, 59, 61, 62, 63], "second": [52, 54, 55, 56, 57, 60, 62, 63], "resourc": [52, 54], "28": [52, 53], "lt": [52, 53, 54, 57, 59, 60], "0x7fd668ca0e80": 52, "gt": [52, 53, 54, 57, 59, 60], "section": [52, 53, 54, 55, 56, 57, 60, 62, 63], "consum": 52, "mind": [52, 61], "exponenti": 52, "independ": [52, 58], "four": [52, 54, 62], "29": [52, 53, 59], "inputs2": 52, "weights2": 52, "item": [52, 56, 57], "qc2": 52, "cx": [52, 56, 62], "39": [52, 53, 54, 59], "similarli": [52, 53], "30": [52, 53, 57, 59, 60], "0x7fd659264880": 52, "sake": [52, 53, 54, 57], "estimator_qnn_input": 52, "estimator_qnn_weight": 52, "32": [52, 53, 61, 63], "ninput": 52, "nweight": 52, "77395605": 52, "43887844": 52, "33": [52, 53, 54, 57, 58, 62], "sampler_qnn_input": 52, "sampler_qnn_weight": 52, "34": [52, 53, 54], "85859792": 52, "69736803": 52, "09417735": 52, "97562235": 52, "7611397": 52, "78606431": 52, "num_observ": 52, "35": [52, 53], "estimator_qnn_forward": 52, "nshape": 52, "2970094": 52, "36": [52, 53, 55], "sampler_qnn_forward": 52, "01826527": 52, "25735654": 52, "5267981": 52, "19758009": 52, "batch_siz": [52, 57], "37": 52, "estimator_qnn_forward_batch": 52, "38": [52, 57], "sampler_qnn_forward_batch": 52, "advantag": [52, 56, 57, 61], "weight_gradi": 52, "estimator_qnn_input_grad": 52, "estimator_qnn_weight_grad": 52, "63272767": 52, "sampler_qnn_input_grad": 52, "sampler_qnn_weight_grad": 52, "00606238": 52, "1124595": 52, "06856156": 52, "09809236": 52, "21167414": 52, "09069775": 52, "22549618": 52, "48846674": 52, "32499215": 52, "32262178": 52, "27073021": 52, "12183491": 52, "41": [52, 55], "3038852": 52, "43": [52, 53, 54, 61], "05844702": 52, "10621091": 52, "38798796": 52, "19544083": 52, "34561132": 52, "09459601": 52, "01607038": 52, "20705573": 52, "architectur": [52, 57, 63], "44": 52, "observable2": 52, "estimator_qnn2": 52, "45": 52, "estimator_qnn_forward2": 52, "estimator_qnn_input_grad2": 52, "estimator_qnn_weight_grad2": 52, "estimatorqnn1": 52, "estimatorqnn2": 52, "explain": [52, 54, 57, 61, 63], "46": 52, "lambda": [52, 53, 57, 62], "sampler_qnn2": 52, "47": 52, "sampler_qnn_forward2": 52, "sampler_qnn_input_grad2": 52, "sampler_qnn_weight_grad2": 52, "samplerqnn1": 52, "samplerqnn2": 52, "theoret": 52, "background": [52, 54, 62, 63], "kei": [52, 54, 57, 61], "encourag": [52, 57], "plai": [52, 54], "48": [52, 63], "22": [52, 53, 54, 55, 57, 58, 60, 61, 63], "3qiskit": 52, "9": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "15python": 52, "buildmain": [52, 55], "nov": [52, 57, 63], "24": [52, 53, 54, 57, 60, 61], "08": [52, 59, 61], "02osdarwincpus8memori": 52, "0mon": [52, 56, 59, 60], "jan": [52, 55], "11": [52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "49": [52, 58], "cet": [52, 55], "\u099c\u099f": [53, 55, 57], "02_neural_network_classifier_and_regressor": 53, "\u09a0\u09b8\u09ae": [53, 57], "\u0989\u099f": 53, "\u0986\u09ae\u09b0": [53, 57], "\u0989\u09ad\u09af": 53, "\u0987\u09a8\u09aa": 53, "\u09b0\u09b9\u09a3": 53, "\u09b0\u09b8\u0999": 53, "\u0995\u09a8\u09ab": 53, "\u09b0\u09b8\u09b0": 53, "\u09b0\u09a6": 53, "\u0997\u09a0\u09a8": 53, "\u0986\u09b0": [53, 57], "pyplot": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "plt": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "ipython": [53, 54, 56, 60, 61, 62, 63], "displai": [53, 54, 56, 59, 60, 61, 62, 63], "clear_output": [53, 54, 56, 60, 61, 62, 63], "\u09b0\u09ae": 53, "\u0985": 53, "\u09b2\u0997": 53, "\u09a6\u09ae": 53, "\u099d": [53, 57], "\u09b8\u09b9\u099c": 53, "\u09b8\u0995\u09b0\u09a3": 53, "\u09af\u09b6": 53, "y01": [53, 57], "axi": [53, 57, 60], "y_one_hot": 53, "zero": [53, 55, 56, 62, 63], "rang": [53, 54, 56, 57, 59, 60, 61, 62, 63], "y_target": [53, 57], "zip": [53, 57, 62, 63], "bo": [53, 57], "els": [53, 57], "color": [53, 55, 56, 57, 58, 60], "black": [53, 57, 60], "23521988": 53, "callback_graph": [53, 54, 60, 61, 62], "\u0995\u09b2\u09ac": 53, "\u0995\u09b0\u09ac": 53, "\u0985\u09aa": 53, "\u09a4\u09ae": 53, "\u0993\u099c\u09a8": 53, "\u0993\u099c\u09a8\u0997": 53, "\u0989\u09a6": 53, "\u09af\u09ae": 53, "\u09b2\u0995": [53, 57], "\u0986\u09ae": [53, 57], "\u09a8\u0995": 53, "\u09ac\u09a8": 53, "\u09ac\u09b8": [53, 57], "\u09a0": [53, 57], "\u09b2\u099f": 53, "\u0987\u09b9": 53, "\u09af\u09a4\u099f": 53, "\u09af\u09a4\u0995": 53, "\u09b7\u09a3": 53, "live": [53, 60, 61], "obj_func_ev": [53, 54, 61, 62], "wait": [53, 54, 56, 60, 61, 62, 63], "objective_func_v": [53, 54, 61, 62, 63], "append": [53, 54, 56, 57, 59, 60, 61, 62, 63], "titl": [53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "against": [53, 54, 60, 61, 62, 63], "xlabel": [53, 54, 57, 60, 61, 62, 63], "ylabel": [53, 54, 57, 60, 61, 62, 63], "len": [53, 54, 56, 57, 59, 60, 61, 62, 63], "estimator_classifi": [53, 61], "60": [53, 57], "empti": [53, 60, 61, 63], "rcparam": [53, 54, 59, 60, 61, 62, 63], "figsiz": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "y_predict": [53, 57, 62], "red": [53, 55, 57], "wrongli": [53, 57], "y_p": [53, 57], "scatter": [53, 55, 57, 58, 59, 60], "200": [53, 57, 60, 62], "facecolor": [53, 55, 57, 58, 59, 60], "edgecolor": [53, 55, 57, 58, 59, 60], "linewidth": [53, 56, 57, 60], "explor": [53, 54, 55], "10": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "99142399e": 53, "01": [53, 55, 56], "02869770e": 53, "00": [53, 55, 63], "32131512e": 53, "04": 53, "47046684e": 53, "13636802e": 53, "56831727e": 53, "17902158e": 53, "08678332e": 53, "bit": [53, 54, 57, 58, 63], "choic": [53, 54, 57, 59], "sampler_classifi": 53, "15": [53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "16": [53, 54, 55, 56, 57, 60, 61, 62, 63], "less": [53, 63], "67198565": 53, "46045402": 53, "93462862": 53, "95266092": 53, "special": 53, "variant": 53, "extens": [53, 55, 60], "crossentropyloss": [53, 57], "18": [53, 54, 55, 56, 57, 60, 61, 63], "tackl": [53, 54, 55], "interest": [53, 54, 63], "Of": 53, "cours": [53, 54], "short": [53, 60], "tini": 53, "emploi": [53, 55, 56, 60], "make_classif": [53, 61], "nice": [53, 56], "redund": 53, "kind": 53, "centroid": 53, "slight": 53, "increas": [53, 54, 63], "eas": [53, 62], "21": [53, 54, 55, 57, 60, 61], "preprocess": [53, 54, 58, 60, 61], "minmaxscal": [53, 54, 58, 60, 61], "n_redund": [53, 61], "n_clusters_per_class": [53, 61], "class_sep": [53, 61], "fit_transform": [53, 54, 55, 58, 60, 61], "pathcollect": [53, 60], "0x7fd5e072c250": 53, "y_cat": 53, "dtype": [53, 56], "low": 53, "progress": [53, 56], "had": [53, 54, 55], "achiev": [53, 54, 55, 57], "compar": [53, 54, 56, 61, 62, 63], "ground": 53, "\u09a6\u09ae\u09b8": 53, "linspac": [53, 56, 57, 60], "50": [53, 54, 56, 57, 59, 61, 62], "reshap": [53, 55, 56, 57, 58, 60, 62, 63], "restrict": [53, 62], "exce": 53, "scope": 53, "param_x": [53, 57], "fm": [53, 57, 59, 63], "param_i": [53, 57], "vf": [53, 57], "regression_estimator_qnn": 53, "9769994291935522": 53, "line": [53, 57, 62], "58870599": 53, "l2loss": 53, "9769955693935385": 53, "ignis0": [53, 54, 57, 58, 61], "ibmq": [53, 55, 61], "provider0": [53, 55, 61], "2qiskit0": [53, 61], "8python": [53, 61], "apr": [53, 61], "2021": [53, 61, 62], "59": [53, 61, 63], "45osdarwincpus8memori": [53, 61], "0tue": [53, 61], "jun": [53, 60, 61], "cest": [53, 61], "page": [54, 56, 58, 59, 60, 61, 62, 63], "02a_training_a_quantum_model_on_a_real_dataset": 54, "life": 54, "pick": [54, 61, 63], "known": [54, 55, 63], "albeit": 54, "rel": [54, 56, 57], "iri": 54, "flower": 54, "wikipedia": [54, 63], "scientist": 54, "briefli": [54, 61], "refresh": 54, "memori": 54, "comparison": 54, "conclud": [54, 62], "load_iri": 54, "iris_data": 54, "descript": 54, "descr": 54, "_iris_dataset": 54, "plant": 54, "characterist": 54, "150": [54, 63], "sepal": 54, "cm": [54, 55, 56, 59], "width": 54, "petal": 54, "setosa": 54, "versicolour": 54, "virginica": 54, "summari": 54, "statist": 54, "min": [54, 55, 60], "max": [54, 55, 60, 62, 63], "sd": 54, "correl": [54, 61], "84": [54, 56], "83": 54, "7826": 54, "05": [54, 55, 56, 58, 59, 60, 63], "4194": 54, "76": 54, "9490": 54, "9565": 54, "miss": 54, "creator": 54, "donor": 54, "michael": 54, "marshal": 54, "plu": 54, "io": 54, "arc": 54, "nasa": 54, "gov": 54, "date": 54, "juli": 54, "1988": 54, "famou": [54, 57], "databas": 54, "sir": 54, "paper": [54, 55, 58, 61], "uci": 54, "repositori": 54, "perhap": 54, "recognit": [54, 62, 63], "literatur": 54, "frequent": 54, "dai": 54, "duda": 54, "amp": 54, "hart": 54, "NOT": 54, "topic": 54, "multipl": [54, 57, 60], "taxonom": 54, "annual": 54, "eugen": 54, "ii": 54, "179": 54, "188": 54, "1936": 54, "contribut": 54, "mathemat": [54, 55], "john": 54, "wilei": 54, "ny": 54, "1950": 54, "o": [54, 55, 56, 58, 59, 60], "1973": 54, "scene": 54, "q327": 54, "d83": 54, "son": 54, "isbn": 54, "471": 54, "22361": 54, "218": 54, "dasarathi": 54, "1980": 54, "nose": 54, "neighborhood": 54, "system": [54, 62, 63], "partial": 54, "ieee": 54, "transact": 54, "intellig": 54, "vol": 54, "pami": 54, "67": 54, "71": 54, "1972": 54, "nearest": [54, 55, 59], "neighbor": [54, 62], "theori": [54, 62], "431": 54, "433": 54, "mlc": 54, "proceed": 54, "cheeseman": 54, "autoclass": 54, "conceptu": [54, 61], "perfectli": [54, 55], "balanc": 54, "tabl": 54, "lead": [54, 62, 63], "think": 54, "cope": 54, "examin": 54, "firstli": 54, "squeez": [54, 56, 57], "onto": [54, 63], "interv": [54, 57], "techniqu": [54, 55, 59], "stabil": 54, "exactli": [54, 63], "wise": 54, "panda": 54, "pd": 54, "seaborn": 54, "sn": 54, "df": 54, "datafram": 54, "feature_nam": 54, "pairplot": 54, "hue": 54, "palett": 54, "tab10": 54, "axisgrid": 54, "pairgrid": 54, "0x1c92dbc4188": 54, "sometim": 54, "intertwin": 54, "especi": [54, 60], "regard": 54, "split": [54, 58, 60, 62, 63], "former": [54, 55, 62], "verifi": [54, 60], "unseen": [54, 60, 61], "ask": 54, "bore": 54, "job": 54, "reproduc": [54, 55, 56, 57, 60, 61], "model_select": [54, 58, 60, 62], "train_test_split": [54, 58, 60, 62], "123": 54, "train_featur": [54, 55, 58, 60], "test_featur": [54, 55, 58, 60], "train_label": [54, 55, 58, 60, 62, 63], "test_label": [54, 55, 58, 60, 62, 63], "train_siz": [54, 58, 60], "simplic": [54, 57], "tweak": [54, 60], "_": [54, 56, 60, 63], "suppress": [54, 56], "analyz": [54, 62], "train_score_c4": 54, "test_score_c4": 54, "2f": [54, 55, 56, 63], "99": 54, "97": [54, 62], "newcom": 54, "who": 54, "compris": 54, "central": 54, "crucial": [54, 57], "embed": 54, "role": [54, 63], "world": 54, "immedi": 54, "analog": [54, 57], "tunabl": 54, "character": 54, "trial": 54, "wide": 54, "term": [54, 61, 62, 63], "reader": 54, "decompos": [54, 56, 62, 63], "constitu": 54, "give": [54, 63], "flavor": 54, "fold": 54, "pai": 54, "attent": [54, 57], "repetit": [54, 56, 63], "faster": [54, 58], "free": 54, "100": [54, 55, 57, 58, 60, 62], "back": [54, 61, 62], "versu": [54, 60], "whatev": 54, "readi": [54, 56], "stand": [54, 56], "enough": [54, 56, 61], "omit": 54, "earlier": [54, 60], "patient": [54, 56, 61, 62], "histori": [54, 57], "elaps": [54, 56, 63], "round": [54, 62], "303": 54, "train_score_q4": 54, "test_score_q4": 54, "85": 54, "87": 54, "entangl": [54, 55, 57], "bunch": 54, "addition": 54, "determinist": 54, "sever": [54, 62, 63], "modern": 54, "recal": 54, "move": 54, "pca": 54, "reduct": [54, 57], "educ": 54, "saw": [54, 55], "decomposit": [54, 55], "n_compon": [54, 55], "scatterplot": 54, "axessubplot": 54, "train_score_c2": 54, "test_score_c2": 54, "90": [54, 57], "deal": 54, "recreat": [54, 57], "run": [54, 57, 58, 61, 62, 63], "fewer": 54, "nicer": [54, 63], "58": 54, "train_score_q2_ra": 54, "test_score_q2_ra": 54, "63": 54, "fair": 54, "coin": 54, "toss": 54, "almost": 54, "flat": 54, "toward": 54, "won": 54, "stai": 54, "efficientsu2": [54, 56], "74": 54, "train_score_q2_eff": 54, "test_score_q2_eff": 54, "78": 54, "80": [54, 57, 60, 61], "unsurprisingli": 54, "yet": 54, "reach": [54, 59], "matur": 54, "went": 54, "down": [54, 60, 63], "permit": 54, "full": [54, 60, 61, 63], "compromis": 54, "hyperparamet": [54, 58], "critic": 54, "search": 54, "approach": [54, 55, 60, 62], "hope": 54, "brief": 54, "leap": 54, "0qiskit0": [54, 55, 57, 58], "9python": [54, 55, 57, 58], "compilermsc": [54, 57, 58], "1916": [54, 57, 58], "amd64": [54, 57, 58], "aug": [54, 57, 58], "2020": [54, 57, 58], "11oswindowscpus4memori": [54, 57, 58], "837730407714844fri": 54, "06": 54, "gmt": [54, 56, 57, 58, 63], "daylight": [54, 58], "03_quantum_kernel": 55, "commonli": [55, 62, 63], "boundari": 55, "benefit": [55, 58], "formal": 55, "easier": [55, 60, 63], "word": [55, 56], "trick": [55, 58], "unsupervis": 55, "graph": 55, "partit": 55, "segreg": 55, "_i": 55, "_j": 55, "finit": 55, "ij": [55, 62], "idea": [55, 60, 63], "hilbert": [55, 62, 63], "12345": [55, 58, 62], "hoc": [55, 59], "describ": [55, 56, 62, 63], "ad_hoc_data": [55, 59], "adhoc_dimens": [55, 59], "adhoc_tot": [55, 59], "coordin": [55, 57], "plot_featur": 55, "ax": [55, 56, 57, 59, 62], "class_label": 55, "marker": [55, 58, 59, 60], "face": 55, "plot_dataset": [55, 60], "ylim": [55, 59], "xlim": [55, 59], "imshow": [55, 57, 59, 62, 63], "asmatrix": [55, 59], "interpol": [55, 59], "cmap": [55, 56, 57, 58, 59], "rdbu": [55, 58, 59], "extent": [55, 59], "legend": [55, 56, 58, 59, 60, 61], "bbox_to_anchor": [55, 58, 59, 60], "loc": [55, 56, 58, 59, 60], "borderaxespad": [55, 58, 59, 60], "subroutin": 55, "adhoc_feature_map": 55, "adhoc_kernel": 55, "adhoc_svc": 55, "adhoc_score_callable_funct": 55, "visual": [55, 58], "graphic": 55, "adhoc_matrix_train": 55, "adhoc_matrix_test": 55, "fig": [55, 56, 57, 59, 62, 63], "subplot": [55, 56, 57, 59, 62, 63], "blue": [55, 60], "set_titl": [55, 56, 57, 62, 63], "adhoc_score_precomputed_kernel": 55, "altern": [55, 56, 58, 62, 63], "qsvc_score": 55, "fall": 55, "categori": 55, "adhoc_matrix": 55, "green": [55, 60], "mutual": 55, "know": [55, 57], "priori": 55, "spectralclust": 55, "normalized_mutual_info_scor": 55, "adhoc_spectr": 55, "affin": 55, "cluster_label": 55, "fit_predict": 55, "cluster_scor": 55, "7287008798015754": 55, "simpler": [55, 63], "rather": 55, "resembl": 55, "ultim": 55, "proce": [55, 61], "qpca_kernel": 55, "matrix_train": 55, "matrix_test": 55, "kernelpca": 55, "rbf": 55, "popular": [55, 57], "wherea": 55, "fail": 55, "succe": 55, "mostli": 55, "tractabl": 55, "logist": 55, "logisticregress": 55, "kernel_pca_rbf": 55, "train_features_rbf": 55, "test_features_rbf": 55, "kernel_pca_q": 55, "train_features_q": 55, "test_features_q": 55, "linear_model": 55, "logistic_regress": 55, "logistic_scor": 55, "q_ax": 55, "rbf_ax": 55, "set_ylabel": [55, 56, 59], "set_xlabel": [55, 56, 59], "kpca": 55, "mesh": [55, 58], "x_min": 55, "x_max": 55, "y_min": 55, "y_max": 55, "xx": 55, "yy": 55, "meshgrid": [55, 56, 58], "arang": [55, 58, 63], "c_": 55, "ravel": [55, 58], "contourf": 55, "alpha": [55, 62], "henc": [55, 56, 62], "why": [55, 57, 61, 63], "review": [55, 62], "investig": 55, "agglom": 55, "1qiskit": [55, 56, 57, 63], "2qiskit": [55, 63], "compilergcc": [55, 62], "0python": [55, 62], "40oslinuxcpus10memori": 55, "394691467285156wed": 55, "feb": [55, 56], "04_torch_qgan": 56, "adversari": 56, "represt": 56, "hybrid": 56, "interplai": 56, "g_": 56, "d_": 56, "tri": [56, 63], "tell": 56, "approxim": 56, "zoufal": 56, "p_": 56, "basi": 56, "ldot": 56, "lucchi": 56, "woerner": 56, "price": 56, "financi": 56, "multivari": 56, "equat": 56, "limits_": 56, "x_0": 56, "leq": 56, "p_j": 56, "discret": 56, "resolut": 56, "manual_se": [56, 57], "num_dim": 56, "num_discrete_valu": 56, "pdf": [56, 58], "stat": 56, "multivariate_norm": 56, "coord": 56, "rv": 56, "cov": 56, "grid_el": 56, "transpos": 56, "tile": 56, "prob_data": 56, "bell": 56, "bivari": 56, "mesh_x": 56, "mesh_i": 56, "grid_shap": 56, "subplot_kw": [56, 62], "3d": [56, 61], "prob_grid": 56, "surf": 56, "plot_surfac": 56, "coolwarm": 56, "antialias": 56, "colorbar": 56, "shrink": 56, "aspect": [56, 62], "boldsymbol": 56, "theta_1": 56, "theta_k": 56, "r_y": 56, "r_z": 56, "notabl": 56, "carefulli": 56, "depth": 56, "abl": [56, 61, 62, 63], "adequ": 56, "captur": [56, 61], "multinomi": 56, "10000": [56, 61], "create_gener": 56, "__init__": [56, 57, 59], "input_s": 56, "linear_input": 56, "leaky_relu": 56, "leakyrelu": 56, "linear20": 56, "sigmoid": 56, "l": [56, 57, 62, 63], "sum_jp_j": 56, "y_j": 56, "binary_cross_entropi": 56, "adversarial_loss": 56, "bce_loss": 56, "weighted_loss": 56, "total_loss": [56, 57], "momentum": 56, "adam": [56, 57], "kingma": 56, "stochast": 56, "lr": [56, 57], "rate": 56, "b1": 56, "b2": 56, "999": 56, "generator_optim": 56, "beta": [56, 62], "weight_decai": 56, "005": 56, "discriminator_optim": 56, "happen": [56, 61], "evolut": 56, "epoch": [56, 57], "complet": 56, "across": 56, "plot_training_progress": 56, "generator_loss_valu": 56, "ax1": [56, 63], "ax2": [56, 63], "royalblu": 56, "discriminator_loss_valu": 56, "magenta": 56, "entropy_valu": 56, "monitor": [56, 61], "benchmark": 56, "far": 56, "awai": 56, "n_epoch": 56, "num_qnn_output": 56, "fake": 56, "real_dist": 56, "disc_valu": 56, "gen_dist": 56, "zero_grad": [56, 57], "generator_loss": 56, "detach": [56, 57], "retain_graph": 56, "real_loss": 56, "fake_loss": 56, "discriminator_loss": 56, "sec": 56, "70": [56, 57], "86": 56, "cdf": 56, "autograd": [56, 57], "off": [56, 60, 61], "anymor": 56, "no_grad": [56, 57], "generated_prob": 56, "third": [56, 62], "pretti": [56, 58], "gen_prob_grid": 56, "cumsum": 56, "add_subplot": 56, "set_zlim": 56, "real_prob_grid": 56, "ax3": 56, "channel": 56, "present": 56, "discuss": [56, 62, 63], "mathscr": 56, "poli": 56, "09": [56, 57, 62], "05_torch_connector": 57, "\u09b9\u09df": 57, "seamlessli": 57, "jointli": 57, "consider": 57, "novel": 57, "engin": 57, "link": 57, "\u09ae\u09a7": 57, "\u0993\u09af": 57, "\u09aa\u09a6": 57, "\u09a7\u09a4": 57, "\u09ac\u09a6": 57, "\u09b0\u09a3": 57, "cnn": [57, 62], "necessari": [57, 61, 63], "mseloss": 57, "lbfg": 57, "convert": [57, 58], "y01_": 57, "straightforward": 57, "qnn1": 57, "declar": 57, "model1": 57, "01256962": 57, "06653564": 57, "04005302": 57, "03752667": 57, "06645196": 57, "06095287": 57, "02250432": 57, "04233438": 57, "3285": 57, "grad_fn": 57, "_torchnnfunctionbackward": 57, "success": 57, "sgd": 57, "adagrad": 57, "bfg": 57, "clarif": 57, "thumb": [57, 60], "mse": 57, "assumpt": 57, "wonder": 57, "reason": [57, 63], "experi": 57, "impact": 57, "f_loss": 57, "mode": 57, "stabl": 57, "reevalu": 57, "closur": 57, "recomput": 57, "step4": 57, "535646438598633": 57, "696760177612305": 57, "039228439331055": 57, "687908172607422": 57, "267208099365234": 57, "025373458862305": 57, "154708862304688": 57, "337854385375977": 57, "082578659057617": 57, "073287963867188": 57, "21839141845703": 57, "992582321166992": 57, "929339408874512": 57, "914533615112305": 57, "907636642456055": 57, "902364730834961": 57, "902134895324707": 57, "90211009979248": 57, "902111053466797": 57, "5356": 57, "mselossbackward0": 57, "eval": 57, "sign": 57, "\u09a4\u0997": 57, "\u09b2\u09ad": 57, "\u09aa\u09af": 57, "\u0995\u09b0\u099b": 57, "correct": 57, "info": 57, "offici": 57, "dim": 57, "qnn2": 57, "remind": 57, "model2": 57, "0364991": 57, "0720495": 57, "06001836": 57, "09852755": 57, "\u0985\u09aa\u099f": 57, "\u09b2\u09b8": 57, "\u09aa\u099b\u09a8": 57, "\u09a6\u0997": 57, "\u09ae\u09b0\u09a3\u099a": 57, "set_to_non": 57, "6925069093704224": 57, "6881508231163025": 57, "6516683101654053": 57, "6485998034477234": 57, "6394743919372559": 57, "7057444453239441": 57, "669085681438446": 57, "766187310218811": 57, "7188469171524048": 57, "7919709086418152": 57, "7598814964294434": 57, "7028256058692932": 57, "7486447095870972": 57, "6890242695808411": 57, "7760348916053772": 57, "7892935276031494": 57, "7556288242340088": 57, "7058126330375671": 57, "7203161716461182": 57, "7030722498893738": 57, "argmax": 57, "sine": 57, "wave": 57, "loop": [57, 62], "littl": 57, "qnn3": 57, "model3": 57, "947757720947266": 57, "948650360107422": 57, "952412605285645": 57, "37905153632164": 57, "24995625019073486": 57, "2483610212802887": 57, "24835753440856934": 57, "9478": 57, "\u0987\u09ac": 57, "\u0993\u09aa\u09b0": 57, "\u099b\u09ac": 57, "textbook": 57, "\u098f": 57, "\u09b8\u09ac": 57, "relat": 57, "cat": [57, 62], "dataload": 57, "torchvis": 57, "conv2d": 57, "dropout2d": 57, "nllloss": 57, "maxpool2d": 57, "flatten": 57, "sequenti": 57, "relu": 57, "api": 57, "\u098f\u0995": 57, "\u09a3\u09a8": 57, "shuffl": [57, 58], "concentr": 57, "download": 57, "totensor": 57, "filter": 57, "leav": [57, 63], "idx": 57, "train_load": 57, "\u09df\u09a8": 57, "\u09e6": 57, "n_samples_show": 57, "data_it": 57, "nrow": 57, "ncol": 57, "imag": [57, 62, 63], "__next__": 57, "grai": 57, "set_xtick": 57, "set_ytick": 57, "x_test": [57, 59], "test_load": 57, "\u09ac\u09a7": 57, "\u09b8\u09ae\u09af": 57, "\u09a5\u09ae": 57, "\u09b0\u099f": 57, "\u09a6\u09b0\u0995": 57, "\u09af\u09a5": 57, "\u099b\u09a8": 57, "\u09b0\u099a": 57, "\u0995\u09aa": 57, "\u09b0\u09aa": 57, "create_qnn": [57, 60], "TO": 57, "FOR": 57, "backprop": 57, "qnn4": 57, "net": [57, 60], "conv1": 57, "kernel_s": 57, "conv2": 57, "dropout": 57, "fc1": 57, "256": 57, "fc2": 57, "fc3": 57, "max_pool2d": 57, "model4": 57, "001": 57, "loss_list": 57, "batch_idx": 57, "0f": 57, "tloss": 57, "4f": [57, 61], "1630": 57, "5294": 57, "7855": 57, "9863": 57, "2257": 57, "4513": 57, "6758": 57, "8832": 57, "1006": 57, "3061": 57, "likelihood": 57, "state_dict": [57, 60], "pt": [57, 60], "vice": 57, "vers": 57, "qnn5": 57, "model5": 57, "load_state_dict": [57, 60], "successfulli": 57, "pred": 57, "keepdim": 57, "eq": 57, "view_a": 57, "taccuraci": 57, "1f": 57, "3585": 57, "break": 57, "\u098f\u09b8": 57, "\u0986\u09b6": 57, "\u0997\u09ac": 57, "\u09aa\u09a4": 57, "\u09ad\u0995": 57, "\u09ae\u09a8": 57, "\u09b0\u0987\u09b2": 57, "837730407714844thu": [57, 58], "03": [57, 60], "07_pegasos_qsvc": 58, "home": 58, "ttic": 58, "edu": 58, "nati": 58, "public": 58, "pegasosmpb": 58, "dual": 58, "pegasosqsvc": 58, "suffici": 58, "feature_rang": 58, "tau": 58, "last": [58, 62, 63], "afterward": 58, "pegasos_scor": 58, "predefin": 58, "span": [58, 62], "grid_step": 58, "grid_x": 58, "grid_i": 58, "meshgrid_featur": 58, "column_stack": 58, "meshgrid_color": 58, "pcolormesh": 58, "shade": 58, "auto": 58, "08_quantum_kernel_train": 59, "qka": 59, "preprint": 59, "covari": 59, "group": 59, "pylab": 59, "circuit_draw": 59, "qktcallback": 59, "wrapper": 59, "_data": 59, "x0": [59, 63], "x1": 59, "x2": 59, "x3": 59, "x4": 59, "stepsiz": 59, "get_callback_data": 59, "clear_callback_data": 59, "ad_hoc": 59, "py": 59, "y_test": 59, "amount": [59, 60, 62, 63], "fm0": 59, "fm1": 59, "hold": 59, "manag": 59, "cb_qkt": 59, "spsa_opt": 59, "learning_r": 59, "perturb": 59, "qkt": 59, "qka_result": 59, "4745458584261386": 59, "47454586": 59, "399057680986741": 59, "trainable_fidelity_quantum_kernel": 59, "0x7f84c120feb0": 59, "labels_test": 59, "evalaut": 59, "accuracy_test": 59, "balanced_accuracy_scor": 59, "evolv": 59, "font": 59, "colormap": 59, "bwr": 59, "tight_layout": 59, "09_saving_and_loading_model": 60, "signific": 60, "invest": 60, "resum": 60, "cover": 60, "heavili": 60, "cell": 60, "onehotencod": 60, "sampler1": 60, "sampler2": 60, "79067335": 60, "44566143": 60, "88072937": 60, "7126244": 60, "06741233": 60, "7770372": 60, "80422817": 60, "10351936": 60, "45754615": 60, "sparse_output": 60, "behav": [60, 62], "solid": 60, "objective_valu": 60, "minor": 60, "stage1_len": 60, "stage1_x": 60, "stage1_i": 60, "stage2_len": 60, "stage2_x": 60, "stage2_i": 60, "orang": 60, "purpl": 60, "original_optim": 60, "asarrai": [60, 62], "original_classifi": 60, "0x7fb74126db20": 60, "8333333333333334": 60, "vqc_classifi": 60, "loaded_classifi": 60, "finish": 60, "0x7fb7411cb760": 60, "misclassifi": 60, "train_predict": 60, "test_predict": 60, "highlight": 60, "incorrectli": 60, "0x7fb6e04c2eb0": 60, "snippet": [60, 61], "pseudo": 60, "new_qnn": 60, "loaded_model": 60, "51": 60, "10_effective_dimens": 61, "localeffectivedimens": 61, "geometri": 61, "express": 61, "insight": 61, "assess": 61, "author": 61, "propos": [61, 62], "capac": 61, "practic": 61, "sensit": 61, "formula": 61, "sent": 61, "global_": 61, "affect": 61, "5000": 61, "8000": 61, "40000": 61, "60000": 61, "100000": 61, "150000": 61, "200000": 61, "500000": 61, "1000000": 61, "global_eff_dim_0": 61, "6657": 61, "7776": 61, "global_eff_dim_1": 61, "66565096": 61, "7133723": 61, "73782922": 61, "89963559": 61, "94632272": 61, "00280009": 61, "04530433": 61, "07408394": 61, "15786005": 61, "21349874": 61, "introduct": 61, "constraint": 61, "n_inform": 61, "fashion": 61, "96": 61, "trained_weight": 61, "local_ed_train": 61, "local_eff_dim_train": 61, "38001027": 61, "38667693": 61, "39017714": 61, "41507888": 61, "42307677": 61, "43341398": 61, "44170977": 61, "44758111": 61, "46577231": 61, "4786767": 61, "local_ed_untrain": 61, "local_eff_dim_untrain": 61, "69803061": 61, "7130991": 61, "7203237": 61, "76321615": 61, "77452215": 61, "7877625": 61, "79746712": 61, "8039319": 61, "82236146": 61, "83435907": 61, "decreas": [61, 62], "badli": 61, "certain": [61, 62], "inher": 61, "logic": 61, "unnecessarili": 61, "implicit": 61, "inact": 61, "intuit": 61, "11_quantum_convolutional_neural_network": 62, "throughout": [62, 63], "cong": 62, "horizont": 62, "vertic": 62, "pixel": [62, 63], "accordingli": 62, "json": [62, 63], "audio": 62, "dog": 62, "detect": [62, 63], "associ": 62, "fc": 62, "th": 62, "plane": 62, "cost": [62, 63], "schemat": 62, "until": [62, 63], "remain": [62, 63], "relationship": 62, "upon": 62, "gellmann": 62, "pauli": 62, "a_1": 62, "a_2": 62, "cdot": 62, "gamma": 62, "a_3": 62, "a_4": 62, "sigma_x": 62, "sigma_i": 62, "sigma_z": 62, "evid": 62, "impli": 62, "difficult": 62, "overcom": 62, "subspac": 62, "solut": 62, "conv_circuit": 62, "style": 62, "clifford": 62, "conv_lay": 62, "odd": 62, "circular": 62, "coupl": 62, "barrier": [62, 63], "param_prefix": 62, "param_index": 62, "q1": 62, "q2": 62, "qc_inst": 62, "to_instruct": 62, "remaind": [62, 63], "dynam": 62, "involv": [62, 63], "feedback": 62, "pool_circuit": 62, "neglect": [62, 63], "q0": 62, "pool_lay": 62, "sink": 62, "straight": 62, "curv": 62, "handwritten": [62, 63], "digit": 62, "distinguish": 62, "place": [62, 63], "anywher": 62, "alongsid": 62, "noisi": [62, 63], "generate_dataset": 62, "num_imag": 62, "hor_arrai": 62, "ver_arrai": 62, "rng": 62, "random_imag": 62, "elif": 62, "vari": [62, 63], "train_imag": [62, 63], "test_imag": [62, 63], "246": 62, "xtick": 62, "ytick": 62, "subplots_adjust": 62, "wspace": 62, "hspace": 62, "025": 62, "greatest": 62, "eight": 62, "c1": 62, "p1": 62, "c2": 62, "p2": 62, "c3": 62, "p3": 62, "11_qcnn_initial_point": 62, "slowli": 62, "93": 62, "inde": [62, 63], "congratul": 62, "choi": 62, "lukin": 62, "nat": 62, "phy": 62, "1273": 62, "1278": 62, "doi": 62, "1038": 62, "s41567": 62, "019": 62, "0648": 62, "vatan": 62, "farrokh": 62, "colin": 62, "william": 62, "physic": 62, "69": 62, "2004": 62, "032315": 62, "informationsoftwareversionqiskit1": 62, "dev0": 62, "737f21bqiskit_algorithms0": 62, "0qiskit_machine_learning0": 62, "7python": 62, "58oslinuxcpus2memori": 62, "792198181152344thu": 62, "dec": 62, "53": 62, "est": 62, "12_quantum_autoencod": 63, "broken": 63, "cae": 63, "uncompress": 63, "decod": 63, "typic": 63, "bottleneck": 63, "travel": 63, "reconstruct": 63, "denois": 63, "anomali": 63, "facial": 63, "pictori": 63, "psi": 63, "wish": 63, "psi_": 63, "comp": 63, "subtleti": 63, "middl": 63, "auxiliari": 63, "regist": 63, "math": 63, "skip": 63, "subsystem": 63, "latent": 63, "trash": 63, "rho_": 63, "tr": 63, "a_": 63, "complic": 63, "deeper": 63, "cnot": 63, "classicalregist": 63, "quantumregist": 63, "rawfeaturevector": 63, "hard": 63, "greater": 63, "circ": 63, "00111": 63, "auto_encoder_circuit": 63, "num_lat": 63, "num_trash": 63, "qr": 63, "q": 63, "cr": 63, "auxiliary_qubit": 63, "cswap": 63, "adjoint": 63, "exclud": 63, "domain_wal": 63, "domain_wall_circuit": 63, "ae": 63, "penal": 63, "identity_interpret": 63, "twice": 63, "cost_func_domain": 63, "params_valu": 63, "opt": 63, "opt_result": 63, "reset": 63, "hermitian": 63, "conjug": 63, "test_qc": 63, "ansatz_qc": 63, "domain_wall_st": 63, "output_st": 63, "conj": 63, "9832814006314854": 63, "zero_idx": 63, "one_idx": 63, "get_dataset_digit": 63, "insert": 63, "sum_sq": 63, "write": 63, "circuitqnn": 63, "cost_func_digit": 63, "12_qae_initial_point": 63, "fun": 63, "period": 63, "original_qc": 63, "original_sv": 63, "param_valu": 63, "concaten": 63, "output_qc": 63, "output_sv": 63, "huge": 63, "benefici": 63, "prone": 63, "chemistri": 63, "hubbard": 63, "electron": 63, "interact": 63, "molecul": 63, "en": 63, "wiki": 63, "romero": 63, "jonathan": 63, "olson": 63, "alan": 63, "aspuru": 63, "guzik": 63, "scienc": 63, "technologi": 63, "045001": 63, "swap_test": 63}, "objects": {"": [[0, 0, 0, "-", "qiskit_machine_learning"]], "qiskit_machine_learning": [[15, 1, 1, "", "QiskitMachineLearningError"], [1, 0, 0, "-", "algorithms"], [3, 0, 0, "-", "connectors"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "kernels"], [7, 0, 0, "-", "neural_networks"], [8, 0, 0, "-", "utils"]], "qiskit_machine_learning.QiskitMachineLearningError": [[15, 2, 1, "", "add_note"], [15, 2, 1, "", "with_traceback"]], "qiskit_machine_learning.algorithms": [[16, 3, 1, "", "BinaryObjectiveFunction"], [17, 3, 1, "", "MultiClassObjectiveFunction"], [18, 3, 1, "", "NeuralNetworkClassifier"], [19, 3, 1, "", "NeuralNetworkRegressor"], [20, 3, 1, "", "ObjectiveFunction"], [21, 3, 1, "", "OneHotObjectiveFunction"], [22, 3, 1, "", "PegasosQSVC"], [23, 3, 1, "", "QSVC"], [24, 3, 1, "", "QSVR"], [25, 3, 1, "", "SerializableModelMixin"], [26, 3, 1, "", "TrainableModel"], [27, 3, 1, "", "VQC"], [28, 3, 1, "", "VQR"]], "qiskit_machine_learning.algorithms.BinaryObjectiveFunction": [[16, 2, 1, "", "gradient"], [16, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction": [[17, 2, 1, "", "gradient"], [17, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.NeuralNetworkClassifier": [[18, 4, 1, "", "callback"], [18, 2, 1, "", "fit"], [18, 4, 1, "", "fit_result"], [18, 4, 1, "", "initial_point"], [18, 2, 1, "", "load"], [18, 4, 1, "", "loss"], [18, 4, 1, "", "neural_network"], [18, 4, 1, "", "num_classes"], [18, 4, 1, "", "optimizer"], [18, 2, 1, "", "predict"], [18, 2, 1, "", "save"], [18, 2, 1, "", "score"], [18, 4, 1, "", "warm_start"], [18, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.NeuralNetworkRegressor": [[19, 4, 1, "", "callback"], [19, 2, 1, "", "fit"], [19, 4, 1, "", "fit_result"], [19, 4, 1, "", "initial_point"], [19, 2, 1, "", "load"], [19, 4, 1, "", "loss"], [19, 4, 1, "", "neural_network"], [19, 4, 1, "", "optimizer"], [19, 2, 1, "", "predict"], [19, 2, 1, "", "save"], [19, 2, 1, "", "score"], [19, 4, 1, "", "warm_start"], [19, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.ObjectiveFunction": [[20, 2, 1, "", "gradient"], [20, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.OneHotObjectiveFunction": [[21, 2, 1, "", "gradient"], [21, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.PegasosQSVC": [[22, 4, 1, "", "FITTED"], [22, 4, 1, "", "UNFITTED"], [22, 2, 1, "", "decision_function"], [22, 2, 1, "", "fit"], [22, 2, 1, "", "load"], [22, 4, 1, "", "num_steps"], [22, 4, 1, "", "precomputed"], [22, 2, 1, "", "predict"], [22, 4, 1, "", "quantum_kernel"], [22, 2, 1, "", "save"], [22, 2, 1, "", "score"]], "qiskit_machine_learning.algorithms.QSVC": [[23, 4, 1, "", "coef_"], [23, 2, 1, "", "decision_function"], [23, 2, 1, "", "fit"], [23, 2, 1, "", "get_metadata_routing"], [23, 2, 1, "", "get_params"], [23, 2, 1, "", "load"], [23, 4, 1, "", "n_support_"], [23, 2, 1, "", "predict"], [23, 2, 1, "", "predict_log_proba"], [23, 2, 1, "", "predict_proba"], [23, 4, 1, "", "probA_"], [23, 4, 1, "", "probB_"], [23, 4, 1, "", "quantum_kernel"], [23, 2, 1, "", "save"], [23, 2, 1, "", "score"], [23, 2, 1, "", "set_fit_request"], [23, 2, 1, "", "set_params"], [23, 2, 1, "", "set_score_request"], [23, 4, 1, "", "unused_param"]], "qiskit_machine_learning.algorithms.QSVR": [[24, 4, 1, "", "class_weight_"], [24, 4, 1, "", "coef_"], [24, 2, 1, "", "fit"], [24, 2, 1, "", "get_metadata_routing"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "load"], [24, 4, 1, "", "n_support_"], [24, 2, 1, "", "predict"], [24, 4, 1, "", "quantum_kernel"], [24, 2, 1, "", "save"], [24, 2, 1, "", "score"], [24, 2, 1, "", "set_fit_request"], [24, 2, 1, "", "set_params"], [24, 2, 1, "", "set_score_request"], [24, 4, 1, "", "unused_param"]], "qiskit_machine_learning.algorithms.SerializableModelMixin": [[25, 2, 1, "", "load"], [25, 2, 1, "", "save"]], "qiskit_machine_learning.algorithms.TrainableModel": [[26, 4, 1, "", "callback"], [26, 2, 1, "", "fit"], [26, 4, 1, "", "fit_result"], [26, 4, 1, "", "initial_point"], [26, 2, 1, "", "load"], [26, 4, 1, "", "loss"], [26, 4, 1, "", "neural_network"], [26, 4, 1, "", "optimizer"], [26, 2, 1, "", "predict"], [26, 2, 1, "", "save"], [26, 2, 1, "", "score"], [26, 4, 1, "", "warm_start"], [26, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.VQC": [[27, 4, 1, "", "ansatz"], [27, 4, 1, "", "callback"], [27, 4, 1, "", "circuit"], [27, 4, 1, "", "feature_map"], [27, 2, 1, "", "fit"], [27, 4, 1, "", "fit_result"], [27, 4, 1, "", "initial_point"], [27, 2, 1, "", "load"], [27, 4, 1, "", "loss"], [27, 4, 1, "", "neural_network"], [27, 4, 1, "", "num_classes"], [27, 4, 1, "", "num_qubits"], [27, 4, 1, "", "optimizer"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "save"], [27, 2, 1, "", "score"], [27, 4, 1, "", "warm_start"], [27, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.VQR": [[28, 4, 1, "", "ansatz"], [28, 4, 1, "", "callback"], [28, 4, 1, "", "feature_map"], [28, 2, 1, "", "fit"], [28, 4, 1, "", "fit_result"], [28, 4, 1, "", "initial_point"], [28, 2, 1, "", "load"], [28, 4, 1, "", "loss"], [28, 4, 1, "", "neural_network"], [28, 4, 1, "", "num_qubits"], [28, 4, 1, "", "optimizer"], [28, 2, 1, "", "predict"], [28, 2, 1, "", "save"], [28, 2, 1, "", "score"], [28, 4, 1, "", "warm_start"], [28, 4, 1, "", "weights"]], "qiskit_machine_learning.circuit": [[2, 0, 0, "-", "library"]], "qiskit_machine_learning.circuit.library": [[29, 3, 1, "", "QNNCircuit"], [30, 3, 1, "", "RawFeatureVector"]], "qiskit_machine_learning.circuit.library.QNNCircuit": [[29, 4, 1, "", "ansatz"], [29, 4, 1, "", "feature_map"], [29, 4, 1, "", "input_parameters"], [29, 4, 1, "", "num_input_parameters"], [29, 4, 1, "", "num_qubits"], [29, 4, 1, "", "num_weight_parameters"], [29, 4, 1, "", "weight_parameters"]], "qiskit_machine_learning.circuit.library.RawFeatureVector": [[30, 4, 1, "", "feature_dimension"], [30, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.connectors": [[31, 3, 1, "", "TorchConnector"]], "qiskit_machine_learning.connectors.TorchConnector": [[31, 2, 1, "", "forward"], [31, 4, 1, "", "neural_network"], [31, 4, 1, "", "sparse"], [31, 4, 1, "", "weight"]], "qiskit_machine_learning.datasets": [[32, 5, 1, "", "ad_hoc_data"]], "qiskit_machine_learning.kernels": [[33, 3, 1, "", "BaseKernel"], [34, 3, 1, "", "FidelityQuantumKernel"], [35, 3, 1, "", "FidelityStatevectorKernel"], [36, 3, 1, "", "TrainableFidelityQuantumKernel"], [37, 3, 1, "", "TrainableFidelityStatevectorKernel"], [38, 3, 1, "", "TrainableKernel"], [6, 0, 0, "-", "algorithms"]], "qiskit_machine_learning.kernels.BaseKernel": [[33, 4, 1, "", "enforce_psd"], [33, 2, 1, "", "evaluate"], [33, 4, 1, "", "feature_map"], [33, 4, 1, "", "num_features"]], "qiskit_machine_learning.kernels.FidelityQuantumKernel": [[34, 4, 1, "", "enforce_psd"], [34, 2, 1, "", "evaluate"], [34, 4, 1, "", "evaluate_duplicates"], [34, 4, 1, "", "feature_map"], [34, 4, 1, "", "fidelity"], [34, 4, 1, "", "num_features"]], "qiskit_machine_learning.kernels.FidelityStatevectorKernel": [[35, 2, 1, "", "clear_cache"], [35, 4, 1, "", "enforce_psd"], [35, 2, 1, "", "evaluate"], [35, 4, 1, "", "feature_map"], [35, 4, 1, "", "num_features"]], "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel": [[36, 2, 1, "", "assign_training_parameters"], [36, 4, 1, "", "enforce_psd"], [36, 2, 1, "", "evaluate"], [36, 4, 1, "", "evaluate_duplicates"], [36, 4, 1, "", "feature_map"], [36, 4, 1, "", "fidelity"], [36, 4, 1, "", "num_features"], [36, 4, 1, "", "num_training_parameters"], [36, 4, 1, "", "parameter_values"], [36, 4, 1, "", "training_parameters"]], "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel": [[37, 2, 1, "", "assign_training_parameters"], [37, 2, 1, "", "clear_cache"], [37, 4, 1, "", "enforce_psd"], [37, 2, 1, "", "evaluate"], [37, 4, 1, "", "feature_map"], [37, 4, 1, "", "num_features"], [37, 4, 1, "", "num_training_parameters"], [37, 4, 1, "", "parameter_values"], [37, 4, 1, "", "training_parameters"]], "qiskit_machine_learning.kernels.TrainableKernel": [[38, 2, 1, "", "assign_training_parameters"], [38, 4, 1, "", "enforce_psd"], [38, 2, 1, "", "evaluate"], [38, 4, 1, "", "feature_map"], [38, 4, 1, "", "num_features"], [38, 4, 1, "", "num_training_parameters"], [38, 4, 1, "", "parameter_values"], [38, 4, 1, "", "training_parameters"]], "qiskit_machine_learning.kernels.algorithms": [[39, 3, 1, "", "QuantumKernelTrainer"], [40, 3, 1, "", "QuantumKernelTrainerResult"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer": [[39, 2, 1, "", "fit"], [39, 4, 1, "", "initial_point"], [39, 4, 1, "", "loss"], [39, 4, 1, "", "optimizer"], [39, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult": [[40, 2, 1, "", "combine"], [40, 4, 1, "", "optimal_circuit"], [40, 4, 1, "", "optimal_parameters"], [40, 4, 1, "", "optimal_point"], [40, 4, 1, "", "optimal_value"], [40, 4, 1, "", "optimizer_evals"], [40, 4, 1, "", "optimizer_result"], [40, 4, 1, "", "optimizer_time"], [40, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.neural_networks": [[41, 3, 1, "", "EffectiveDimension"], [42, 3, 1, "", "EstimatorQNN"], [43, 3, 1, "", "LocalEffectiveDimension"], [44, 3, 1, "", "NeuralNetwork"], [45, 3, 1, "", "SamplerQNN"]], "qiskit_machine_learning.neural_networks.EffectiveDimension": [[41, 2, 1, "", "get_effective_dimension"], [41, 2, 1, "", "get_fisher_information"], [41, 2, 1, "", "get_normalized_fisher"], [41, 4, 1, "", "input_samples"], [41, 2, 1, "", "run_monte_carlo"], [41, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.EstimatorQNN": [[42, 2, 1, "", "backward"], [42, 4, 1, "", "circuit"], [42, 4, 1, "", "estimator"], [42, 2, 1, "", "forward"], [42, 4, 1, "", "gradient"], [42, 4, 1, "", "input_gradients"], [42, 4, 1, "", "input_params"], [42, 4, 1, "", "num_inputs"], [42, 4, 1, "", "num_weights"], [42, 4, 1, "", "observables"], [42, 4, 1, "", "output_shape"], [42, 4, 1, "", "sparse"], [42, 4, 1, "", "weight_params"]], "qiskit_machine_learning.neural_networks.LocalEffectiveDimension": [[43, 2, 1, "", "get_effective_dimension"], [43, 2, 1, "", "get_fisher_information"], [43, 2, 1, "", "get_normalized_fisher"], [43, 4, 1, "", "input_samples"], [43, 2, 1, "", "run_monte_carlo"], [43, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.NeuralNetwork": [[44, 2, 1, "", "backward"], [44, 2, 1, "", "forward"], [44, 4, 1, "", "input_gradients"], [44, 4, 1, "", "num_inputs"], [44, 4, 1, "", "num_weights"], [44, 4, 1, "", "output_shape"], [44, 4, 1, "", "sparse"]], "qiskit_machine_learning.neural_networks.SamplerQNN": [[45, 2, 1, "", "backward"], [45, 4, 1, "", "circuit"], [45, 2, 1, "", "forward"], [45, 4, 1, "", "gradient"], [45, 4, 1, "", "input_gradients"], [45, 4, 1, "", "input_params"], [45, 4, 1, "", "interpret"], [45, 4, 1, "", "num_inputs"], [45, 4, 1, "", "num_weights"], [45, 4, 1, "", "output_shape"], [45, 4, 1, "", "sampler"], [45, 2, 1, "", "set_interpret"], [45, 4, 1, "", "sparse"], [45, 4, 1, "", "weight_params"]], "qiskit_machine_learning.utils": [[9, 0, 0, "-", "loss_functions"]], "qiskit_machine_learning.utils.loss_functions": [[46, 3, 1, "", "CrossEntropyLoss"], [47, 3, 1, "", "KernelLoss"], [48, 3, 1, "", "L1Loss"], [49, 3, 1, "", "L2Loss"], [50, 3, 1, "", "Loss"], [51, 3, 1, "", "SVCLoss"]], "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss": [[46, 2, 1, "", "evaluate"], [46, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.KernelLoss": [[47, 2, 1, "", "evaluate"]], "qiskit_machine_learning.utils.loss_functions.L1Loss": [[48, 2, 1, "", "evaluate"], [48, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.L2Loss": [[49, 2, 1, "", "evaluate"], [49, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.Loss": [[50, 2, 1, "", "evaluate"], [50, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.SVCLoss": [[51, 2, 1, "", "evaluate"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:method", "3": "py:class", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python \u09ae\u09a1\u09bf\u0989\u09b2"], "1": ["py", "exception", "Python \u098f\u0995\u09cd\u09b8\u09c7\u09aa\u09b6\u09a8"], "2": ["py", "method", "Python \u09ae\u09c7\u09a5\u09a1"], "3": ["py", "class", "Python \u0995\u09cd\u09b2\u09be\u09b8"], "4": ["py", "attribute", "Python \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f"], "5": ["py", "function", "Python \u09ab\u09be\u0982\u09b6\u09a8"]}, "titleterms": {"qiskit": [0, 11, 12, 13, 52, 59, 60, 61], "machin": [0, 1, 2, 11, 12, 13, 52, 54, 55, 59, 60], "learn": [0, 1, 2, 11, 12, 13, 52, 54, 55, 59, 60], "api": 0, "refer": [0, 62, 63], "modul": 0, "qiskit_machine_learn": [0, 1, 2, 3, 4, 5, 7, 8, 9], "submodul": [0, 5], "quantum": [1, 5, 6, 7, 12, 52, 54, 55, 56, 58, 59, 62, 63], "algorithm": [1, 6, 61], "base": [1, 7, 9], "class": [1, 7, 8, 9, 53, 59], "object": 1, "function": [1, 8, 9, 52, 55, 56, 57, 63], "classifi": [1, 12, 58], "regressor": [1, 12], "circuit": [2, 63], "librari": 2, "applic": [2, 59, 63], "featur": [2, 54, 59], "map": [2, 59], "helper": 2, "connector": 3, "dataset": [4, 12, 54, 55, 59, 60, 61], "kernel": [5, 6, 12, 55, 59], "neural": [7, 12, 52, 56, 61, 62], "network": [7, 12, 52, 56, 61, 62], "neural_network": 7, "metric": 7, "util": [8, 9], "loss": [9, 50, 56, 57, 63], "loss_funct": 9, "\u09b6": [10, 53, 55, 57, 64], "\u09b0": [10, 52, 53, 55, 57, 64], "\u09a8": [10, 52, 53, 55, 57, 64], "\u09a6": [10, 53, 57], "\u09b6\u09a8": [10, 53, 57], "\u09b8": [10, 53, 57], "\u09a5": 10, "\u09aa\u09a8": 10, "\u0987\u09a8\u09b8": 10, "\u099f\u09b2": 10, "\u0990\u099a": 10, "\u099b": 10, "\u0995": [10, 52, 53, 55, 57], "\u0986\u09b0": 10, "\u098f\u0997": 10, "\u09a4": [10, 57], "\u09aa": [10, 57, 64], "\u09b0\u09b8": 10, "overview": [11, 12, 52, 55, 56], "next": 11, "step": 11, "v0": 12, "5": [12, 52, 54, 55, 56, 61, 62, 63], "migrat": [12, 13], "guid": [12, 13], "introduct": [12, 52, 55, 56, 62], "primit": 12, "new": 12, "creat": [12, 56], "previou": 12, "implement": [12, 52, 56], "samplerqnn": [12, 45, 52, 53, 57, 61], "build": [12, 63], "us": [12, 55], "circuitqnn": 12, "estimatorqnn": [12, 42, 52, 53, 57], "opflowqnn": 12, "other": 12, "notabl": 12, "deprec": 12, "releas": 14, "note": 14, "0": 14, "7": [14, 56, 62, 63], "1": [14, 52, 54, 55, 56, 57, 60, 61, 62, 63], "4": [14, 52, 54, 55, 56, 60, 61, 62, 63], "bug": 14, "fix": 14, "prelud": 14, "qiskitmachinelearningerror": 15, "binaryobjectivefunct": 16, "multiclassobjectivefunct": 17, "neuralnetworkclassifi": 18, "neuralnetworkregressor": 19, "objectivefunct": 20, "onehotobjectivefunct": 21, "pegasosqsvc": 22, "qsvc": [23, 55], "qsvr": 24, "serializablemodelmixin": 25, "trainablemodel": 26, "vqc": [27, 53], "vqr": [28, 53], "qnncircuit": 29, "rawfeaturevector": 30, "torchconnector": 31, "ad_hoc_data": 32, "basekernel": 33, "fidelityquantumkernel": 34, "fidelitystatevectorkernel": 35, "trainablefidelityquantumkernel": 36, "trainablefidelitystatevectorkernel": 37, "trainablekernel": 38, "quantumkerneltrain": 39, "quantumkerneltrainerresult": 40, "effectivedimens": 41, "localeffectivedimens": 43, "neuralnetwork": 44, "crossentropyloss": 46, "kernelloss": 47, "l1loss": 48, "l2loss": 49, "svcloss": 51, "\u09df": [52, 53, 55, 64], "\u099f": [52, 53, 55, 57, 64], "\u09ae": [52, 53, 55, 57, 64], "\u0989\u09b0": [52, 53, 57], "\u09b2": [52, 53, 55, 57, 64], "\u099f\u0993\u09df": [52, 53], "v": [52, 61], "classic": [52, 54, 56, 62], "2": [52, 54, 55, 56, 57, 60, 61, 62, 63], "how": 52, "instanti": 52, "qnn": [52, 61], "3": [52, 54, 55, 56, 60, 61, 62, 63], "run": 52, "forward": 52, "pass": 52, "set": [52, 56, 59, 61], "up": [52, 56, 59, 61], "exampl": [52, 61, 63], "non": 52, "batch": 52, "backward": 52, "without": 52, "input": 52, "gradient": 52, "advanc": 52, "multipl": [52, 53], "observ": 52, "custom": 52, "interpret": 52, "6": [52, 56, 62, 63], "conclus": [52, 54, 55, 56], "\u09a3": [53, 57], "\u09ac": [53, 57], "\u09af": [53, 57], "\u09b8\u0995\u09b0\u0995": 53, "\u09ab": [53, 57], "\u098f\u09ac": [53, 57], "\u0997": [53, 57], "\u09b8\u09b0": 53, "\u09ad": [53, 57], "classif": [53, 55, 57], "an": [53, 63], "\u09aa\u09b0": [53, 57], "\u09ac\u09b0": 53, "\u09a4\u09a8\u09b6": 53, "\u0989": 53, "regress": [53, 57], "\u09b6\u09b0": 53, "train": [54, 56, 59, 60, 61, 62], "model": [54, 55, 56, 59, 60, 62], "real": 54, "exploratori": 54, "data": [54, 56, 62], "analysi": [54, 55], "reduc": 54, "number": 54, "method": 55, "defin": [55, 59, 61], "svc": 55, "callabl": 55, "precomput": 55, "matrix": 55, "evalu": 55, "cluster": 55, "spectral": 55, "princip": 55, "compon": [55, 62, 63], "comparison": 55, "pca": 55, "gaussian": 55, "pytorch": [56, 57, 60], "qgan": 56, "load": [56, 60], "random": 56, "distribut": 56, "represent": 56, "definit": 56, "ansatz": [56, 63], "gener": [56, 62], "discrimin": 56, "loop": 56, "optim": [56, 59], "visual": [56, 59], "process": [56, 59], "result": [56, 61], "cumul": 56, "densiti": 56, "\u099f\u09b0": 57, "\u099a": 57, "\u0997\u0995": 57, "\u0986": 57, "\u09b6\u09b2": 57, "\u099f\u0993\u09af": 57, "\u09b8\u09b0\u09b2": 57, "\u09b8\u0995\u09b0\u09a3": 57, "\u0993": 57, "A": [57, 63], "\u0985\u09a8": 57, "\u09df\u0995": 57, "\u09b9": [57, 64], "b": 57, "\u0985\u09a7": 57, "mnist": 57, "\u098f\u09b0": 57, "hybrid": [57, 60], "\u09a7": 57, "\u09e7": 57, "\u09b0\u09b6": 57, "\u09b7\u09a3": 57, "\u09b7": 57, "\u099c\u09a8": 57, "\u09a1": 57, "\u099c": 57, "\u099e": 57, "\u0995\u09b0": 57, "\u09e8": 57, "\u09ae\u09a1": 57, "\u09e9": 57, "\u09ea": 57, "pegaso": 58, "support": 58, "vector": 58, "import": 59, "local": [59, 61], "extern": 59, "packag": 59, "callback": 59, "our": [59, 62], "prepar": [59, 60], "trainer": 59, "fit": 59, "test": [59, 62, 63], "save": 60, "continu": 60, "effect": 61, "dimens": 61, "global": 61, "The": [61, 62, 63], "basic": 61, "calcul": 61, "comput": 61, "untrain": 61, "plot": 61, "analyz": 61, "convolut": 62, "differ": 62, "between": 62, "qcnn": 62, "ccnn": 62, "layer": 62, "pool": 62, "autoencod": 63, "content": 63, "what": 63, "i": 63, "choos": 63, "swap": 63, "parametr": 63, "simpl": 63, "domain": 63, "wall": 63, "digit": 63, "compress": 63, "8": 63, "9": 63, "\u09a0\u09b8\u09ae": 64, "\u0989\u099f": 64, "\u09b2\u09b8": 64}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Qiskit Machine Learning API Reference": [[0, "qiskit-machine-learning-api-reference"]], "Qiskit Machine Learning module (qiskit_machine_learning)": [[0, "qiskit-machine-learning-module-qiskit-machine-learning"]], "Submodules": [[0, "submodules"], [5, "submodules"]], "Quantum machine learning algorithms (qiskit_machine_learning.algorithms)": [[1, "quantum-machine-learning-algorithms-qiskit-machine-learning-algorithms"]], "Machine Learning Base Classes": [[1, "machine-learning-base-classes"]], "Machine Learning Objective Functions": [[1, "machine-learning-objective-functions"]], "Algorithms": [[1, "algorithms"]], "Classifiers": [[1, "classifiers"]], "Regressors": [[1, "regressors"]], "Circuit library for machine learning applications (qiskit_machine_learning.circuit.library)": [[2, "circuit-library-for-machine-learning-applications-qiskit-machine-learning-circuit-library"]], "Feature Maps": [[2, "feature-maps"]], "Helper Circuits": [[2, "helper-circuits"]], "Connectors (qiskit_machine_learning.connectors)": [[3, "connectors-qiskit-machine-learning-connectors"]], "Connectors": [[3, "connectors"]], "Datasets (qiskit_machine_learning.datasets)": [[4, "datasets-qiskit-machine-learning-datasets"]], "Datasets": [[4, "datasets"]], "Quantum kernels (qiskit_machine_learning.kernels)": [[5, "quantum-kernels-qiskit-machine-learning-kernels"]], "Quantum Kernels": [[5, "quantum-kernels"]], "Quantum Kernel Algorithms": [[6, "quantum-kernel-algorithms"]], "Quantum neural networks (qiskit_machine_learning.neural_networks)": [[7, "quantum-neural-networks-qiskit-machine-learning-neural-networks"]], "Neural Network Base Classes": [[7, "neural-network-base-classes"]], "Neural Networks": [[7, "neural-networks"]], "Neural Network Metrics": [[7, "neural-network-metrics"]], "Utility functions and classes (qiskit_machine_learning.utils)": [[8, "utility-functions-and-classes-qiskit-machine-learning-utils"]], "Utilities": [[8, "utilities"]], "Loss Functions (qiskit_machine_learning.utils.loss_functions)": [[9, "loss-functions-qiskit-machine-learning-utils-loss-functions"]], "Loss Function Base Class": [[9, "loss-function-base-class"]], "Loss Functions": [[9, "loss-functions"]], "\u09b6\u09c1\u09b0\u09c1\u09b0 \u09a8\u09bf\u09b0\u09cd\u09a6\u09c7\u09b6\u09a8\u09be": [[10, "getting-started"]], "\u09b8\u09cd\u09a5\u09be\u09aa\u09a8 (\u0987\u09a8\u09b8\u09cd\u099f\u09b2\u09c7\u09b6\u09a8)": [[10, "installation"]], "\u0990\u099a\u09cd\u099b\u09bf\u0995 \u0987\u09a8\u09b8\u09cd\u099f\u09b2": [[10, "optional-installs"]], "\u0986\u09b0\u09cb \u098f\u0997\u09cb\u09a4\u09c7 \u09aa\u09cd\u09b0\u09b8\u09cd\u09a4\u09c1\u09a4 ?...": [[10, "ready-to-get-going"]], "Qiskit Machine Learning overview": [[11, "qiskit-machine-learning-overview"]], "Overview": [[11, "overview"], [52, "Overview"], [55, "Overview"], [56, "Overview"]], "Next Steps": [[11, "next-steps"]], "Qiskit Machine Learning v0.5 Migration Guide": [[12, "qiskit-machine-learning-v0-5-migration-guide"]], "Introduction": [[12, "introduction"]], "Overview of the primitives": [[12, "overview-of-the-primitives"]], "New quantum kernel": [[12, "new-quantum-kernel"]], "Create a dataset": [[12, "create-a-dataset"]], "Previous implementation of quantum kernel": [[12, "previous-implementation-of-quantum-kernel"]], "New implementation of quantum kernel": [[12, "new-implementation-of-quantum-kernel"]], "New quantum neural networks": [[12, "new-quantum-neural-networks"]], "SamplerQNN": [[12, "samplerqnn"], [45, "samplerqnn"]], "Building a classifier using CircuitQNN": [[12, "building-a-classifier-using-circuitqnn"]], "Building a classifier using SamplerQNN": [[12, "building-a-classifier-using-samplerqnn"]], "EstimatorQNN": [[12, "estimatorqnn"], [42, "estimatorqnn"]], "Building a regressor using OpflowQNN": [[12, "building-a-regressor-using-opflowqnn"]], "Building a regressor using EstimatorQNN": [[12, "building-a-regressor-using-estimatorqnn"]], "Other notable deprecation": [[12, "other-notable-deprecation"]], "Qiskit Machine Learning Migration Guide": [[13, "qiskit-machine-learning-migration-guide"]], "Release Notes": [[14, "release-notes"]], "0.7.1-4": [[14, "release-notes-0-7-1-4"]], "Bug Fixes": [[14, "bug-fixes"]], "0.7.0": [[14, "release-notes-0-7-0"]], "Prelude": [[14, "prelude"]], "QiskitMachineLearningError": [[15, "qiskitmachinelearningerror"]], "BinaryObjectiveFunction": [[16, "binaryobjectivefunction"]], "MultiClassObjectiveFunction": [[17, "multiclassobjectivefunction"]], "NeuralNetworkClassifier": [[18, "neuralnetworkclassifier"]], "NeuralNetworkRegressor": [[19, "neuralnetworkregressor"]], "ObjectiveFunction": [[20, "objectivefunction"]], "OneHotObjectiveFunction": [[21, "onehotobjectivefunction"]], "PegasosQSVC": [[22, "pegasosqsvc"]], "QSVC": [[23, "qsvc"]], "QSVR": [[24, "qsvr"]], "SerializableModelMixin": [[25, "serializablemodelmixin"]], "TrainableModel": [[26, "trainablemodel"]], "VQC": [[27, "vqc"]], "VQR": [[28, "vqr"]], "QNNCircuit": [[29, "qnncircuit"]], "RawFeatureVector": [[30, "rawfeaturevector"]], "TorchConnector": [[31, "torchconnector"]], "ad_hoc_data": [[32, "ad-hoc-data"]], "BaseKernel": [[33, "basekernel"]], "FidelityQuantumKernel": [[34, "fidelityquantumkernel"]], "FidelityStatevectorKernel": [[35, "fidelitystatevectorkernel"]], "TrainableFidelityQuantumKernel": [[36, "trainablefidelityquantumkernel"]], "TrainableFidelityStatevectorKernel": [[37, "trainablefidelitystatevectorkernel"]], "TrainableKernel": [[38, "trainablekernel"]], "QuantumKernelTrainer": [[39, "quantumkerneltrainer"]], "QuantumKernelTrainerResult": [[40, "quantumkerneltrainerresult"]], "EffectiveDimension": [[41, "effectivedimension"]], "LocalEffectiveDimension": [[43, "localeffectivedimension"]], "NeuralNetwork": [[44, "neuralnetwork"]], "CrossEntropyLoss": [[46, "crossentropyloss"]], "KernelLoss": [[47, "kernelloss"]], "L1Loss": [[48, "l1loss"]], "L2Loss": [[49, "l2loss"]], "Loss": [[50, "loss"]], "SVCLoss": [[51, "svcloss"]], "\u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae \u09a8\u09bf\u0989\u09b0\u09be\u09b2 \u09a8\u09c7\u099f\u0993\u09df\u09be\u09b0\u09cd\u0995": [[52, "\u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae-\u09a8\u09bf\u0989\u09b0\u09be\u09b2-\u09a8\u09c7\u099f\u0993\u09df\u09be\u09b0\u09cd\u0995"]], "1. Introduction": [[52, "1.-Introduction"], [55, "1.-Introduction"], [56, "1.-Introduction"], [62, "1.-Introduction"]], "1.1. Quantum vs. Classical Neural Networks": [[52, "1.1.-Quantum-vs.-Classical-Neural-Networks"]], "1.2. Implementation in qiskit-machine-learning": [[52, "1.2.-Implementation-in-qiskit-machine-learning"]], "2. How to Instantiate QNNs": [[52, "2.-How-to-Instantiate-QNNs"]], "2.1. EstimatorQNN": [[52, "2.1.-EstimatorQNN"]], "2.2. SamplerQNN": [[52, "2.2.-SamplerQNN"]], "3. How to Run a Forward Pass": [[52, "3.-How-to-Run-a-Forward-Pass"]], "3.1. Set-Up": [[52, "3.1.-Set-Up"]], "3.1.1. EstimatorQNN Example": [[52, "3.1.1.-EstimatorQNN-Example"]], "3.1.2. SamplerQNN Example": [[52, "3.1.2.-SamplerQNN-Example"]], "3.2. Non-batched Forward Pass": [[52, "3.2.-Non-batched-Forward-Pass"]], "3.2.1. EstimatorQNN Example": [[52, "3.2.1.-EstimatorQNN-Example"]], "3.2.2. SamplerQNN Example": [[52, "3.2.2.-SamplerQNN-Example"]], "3.3. Batched Forward Pass": [[52, "3.3.-Batched-Forward-Pass"]], "3.3.1. EstimatorQNN Example": [[52, "3.3.1.-EstimatorQNN-Example"]], "3.3.2. SamplerQNN Example": [[52, "3.3.2.-SamplerQNN-Example"]], "4. How to Run a Backward Pass": [[52, "4.-How-to-Run-a-Backward-Pass"]], "4.1. Backward Pass without Input Gradients": [[52, "4.1.-Backward-Pass-without-Input-Gradients"]], "4.1.1. EstimatorQNN Example": [[52, "4.1.1.-EstimatorQNN-Example"]], "4.1.2. SamplerQNN Example": [[52, "4.1.2.-SamplerQNN-Example"]], "4.2. Backward Pass with Input Gradients": [[52, "4.2.-Backward-Pass-with-Input-Gradients"]], "4.2.1. EstimatorQNN Example": [[52, "4.2.1.-EstimatorQNN-Example"]], "4.2.2. SamplerQNN Example": [[52, "4.2.2.-SamplerQNN-Example"]], "5. Advanced Functionality": [[52, "5.-Advanced-Functionality"]], "5.1. EstimatorQNN with Multiple Observables": [[52, "5.1.-EstimatorQNN-with-Multiple-Observables"]], "5.2. SamplerQNN with custom interpret": [[52, "5.2.-SamplerQNN-with-custom-interpret"]], "6. Conclusion": [[52, "6.-Conclusion"]], "\u09a8\u09bf\u0989\u09b0\u09be\u09b2 \u09a8\u09c7\u099f\u0993\u09df\u09be\u09b0\u09cd\u0995 \u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09a8\u09cd\u09af\u09be\u09b8\u0995\u09b0\u0995 (\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09be\u09df\u09be\u09b0) \u098f\u09ac\u0982 \u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b8\u09b0": [[53, "\u09a8\u09bf\u0989\u09b0\u09be\u09b2-\u09a8\u09c7\u099f\u0993\u09df\u09be\u09b0\u09cd\u0995-\u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09a8\u09cd\u09af\u09be\u09b8\u0995\u09b0\u0995-(\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09be\u09df\u09be\u09b0)-\u098f\u09ac\u0982-\u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b8\u09b0"]], "\u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09ad\u09be\u0997 (\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09bf\u0995\u09c7\u09b6\u09a8)": [[53, "\u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09ad\u09be\u0997-(\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09bf\u0995\u09c7\u09b6\u09a8)"]], "Classification with an EstimatorQNN": [[53, "Classification-with-an-EstimatorQNN"]], "Classification with a SamplerQNN": [[53, "Classification-with-a-SamplerQNN"]], "\u09aa\u09b0\u09bf\u09ac\u09b0\u09cd\u09a4\u09a8\u09b6\u09c0\u09b2 (\u09ad\u09cd\u09af\u09be\u09b0\u09bf\u09df\u09c7\u09b6\u09a8\u09be\u09b2) \u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae \u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09a8\u09cd\u09af\u09be\u09b8\u0995\u09b0\u0995 (\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09be\u09df\u09be\u09b0) (\u09ad\u09bf.\u0995\u09bf\u0989.\u09b8\u09bf)": [[53, "\u09aa\u09b0\u09bf\u09ac\u09b0\u09cd\u09a4\u09a8\u09b6\u09c0\u09b2-(\u09ad\u09cd\u09af\u09be\u09b0\u09bf\u09df\u09c7\u09b6\u09a8\u09be\u09b2)-\u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae-\u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09a8\u09cd\u09af\u09be\u09b8\u0995\u09b0\u0995-(\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09be\u09df\u09be\u09b0)-(\u09ad\u09bf.\u0995\u09bf\u0989.\u09b8\u09bf)"]], "Multiple classes with VQC": [[53, "Multiple-classes-with-VQC"]], "\u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09a8": [[53, "\u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09a8"]], "Regression with an EstimatorQNN": [[53, "Regression-with-an-EstimatorQNN"]], "\u09aa\u09b0\u09bf\u09ac\u09b0\u09cd\u09a4\u09a8\u09b6\u09c0\u09b2 (\u09ad\u09cd\u09af\u09be\u09b0\u09bf\u09df\u09c7\u09b6\u09a8\u09be\u09b2) \u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae \u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09b0 (VQR) \u09a6\u09cd\u09ac\u09be\u09b0\u09be \u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09a8\u0964": [[53, "\u09aa\u09b0\u09bf\u09ac\u09b0\u09cd\u09a4\u09a8\u09b6\u09c0\u09b2-(\u09ad\u09cd\u09af\u09be\u09b0\u09bf\u09df\u09c7\u09b6\u09a8\u09be\u09b2)-\u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae-\u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09b0-(VQR)-\u09a6\u09cd\u09ac\u09be\u09b0\u09be-\u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09a8\u0964"]], "Training a Quantum Model on a Real Dataset": [[54, "Training-a-Quantum-Model-on-a-Real-Dataset"]], "1. Exploratory Data Analysis": [[54, "1.-Exploratory-Data-Analysis"]], "2. Training a Classical Machine Learning Model": [[54, "2.-Training-a-Classical-Machine-Learning-Model"]], "3. Training a Quantum Machine Learning Model": [[54, "3.-Training-a-Quantum-Machine-Learning-Model"]], "4. Reducing the Number of Features": [[54, "4.-Reducing-the-Number-of-Features"]], "5. Conclusion": [[54, "5.-Conclusion"], [55, "5.-Conclusion"]], "\u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae \u0995\u09be\u09b0\u09cd\u09a8\u09c7\u09b2 \u09ae\u09c7\u09b6\u09bf\u09a8 \u09b2\u09be\u09b0\u09cd\u09a8\u09bf\u0982": [[55, "\u0995\u09cb\u09df\u09be\u09a8\u09cd\u099f\u09be\u09ae-\u0995\u09be\u09b0\u09cd\u09a8\u09c7\u09b2-\u09ae\u09c7\u09b6\u09bf\u09a8-\u09b2\u09be\u09b0\u09cd\u09a8\u09bf\u0982"]], "1.1. Kernel Methods for Machine Learning": [[55, "1.1.-Kernel-Methods-for-Machine-Learning"]], "1.2. Kernel Functions": [[55, "1.2.-Kernel-Functions"]], "1.3. Quantum Kernels": [[55, "1.3.-Quantum-Kernels"]], "2. Classification": [[55, "2.-Classification"]], "2.1. Defining the dataset": [[55, "2.1.-Defining-the-dataset"]], "2.2. Defining the quantum kernel": [[55, "2.2.-Defining-the-quantum-kernel"]], "2.3. Classification with SVC": [[55, "2.3.-Classification-with-SVC"]], "Kernel as a callable function": [[55, "Kernel-as-a-callable-function"]], "Precomputed kernel matrix": [[55, "Precomputed-kernel-matrix"]], "2.4. Classification with QSVC": [[55, "2.4.-Classification-with-QSVC"]], "2.5. Evaluation of models used for classification": [[55, "2.5.-Evaluation-of-models-used-for-classification"]], "3. Clustering": [[55, "3.-Clustering"]], "3.1. Defining the dataset": [[55, "3.1.-Defining-the-dataset"]], "3.2. Defining the Quantum Kernel": [[55, "3.2.-Defining-the-Quantum-Kernel"]], "3.3. Clustering with the Spectral Clustering Model": [[55, "3.3.-Clustering-with-the-Spectral-Clustering-Model"]], "4. Kernel Principal Component Analysis": [[55, "4.-Kernel-Principal-Component-Analysis"]], "4.1. Defining the dataset": [[55, "4.1.-Defining-the-dataset"]], "4.2. Defining the Quantum Kernel": [[55, "4.2.-Defining-the-Quantum-Kernel"]], "4.3. Comparison of Kernel PCA on gaussian and quantum kernel": [[55, "4.3.-Comparison-of-Kernel-PCA-on-gaussian-and-quantum-kernel"]], "PyTorch qGAN Implementation": [[56, "PyTorch-qGAN-Implementation"]], "1.1. qGANs for Loading Random Distributions": [[56, "1.1.-qGANs-for-Loading-Random-Distributions"]], "2. Data and Representation": [[56, "2.-Data-and-Representation"]], "3. Definitions of the Neural Networks": [[56, "3.-Definitions-of-the-Neural-Networks"]], "3.1. Definition of the quantum neural network ansatz": [[56, "3.1.-Definition-of-the-quantum-neural-network-ansatz"]], "3.2. Definition of the quantum generator": [[56, "3.2.-Definition-of-the-quantum-generator"]], "3.3. Definition of the classical discriminator": [[56, "3.3.-Definition-of-the-classical-discriminator"]], "3.4. Create a generator and a discriminator": [[56, "3.4.-Create-a-generator-and-a-discriminator"]], "4. Setting up the Training Loop": [[56, "4.-Setting-up-the-Training-Loop"]], "4.1. Definition of the loss functions": [[56, "4.1.-Definition-of-the-loss-functions"]], "4.2. Definition of the optimizers": [[56, "4.2.-Definition-of-the-optimizers"]], "4.3. Visualization of the training process": [[56, "4.3.-Visualization-of-the-training-process"]], "5. Model Training": [[56, "5.-Model-Training"]], "6. Results: Cumulative Density Functions": [[56, "6.-Results:-Cumulative-Density-Functions"]], "7. Conclusion": [[56, "7.-Conclusion"]], "\u099f\u09b0\u09cd\u099a (PyTorch) \u09b8\u0982\u09af\u09cb\u0997\u0995\u09be\u09b0\u09c0 \u098f\u09ac\u0982 \u09a6\u09c7\u09be\u0986\u0981\u09b6\u09b2\u09be \u0995\u09cb\u09af\u09bc\u09be\u09a8\u09cd\u099f\u09be\u09ae \u09a8\u09bf\u0989\u09b0\u09be\u09b2 \u09a8\u09c7\u099f\u0993\u09af\u09bc\u09be\u09b0\u09cd\u0995": [[57, "\u099f\u09b0\u09cd\u099a-(PyTorch)-\u09b8\u0982\u09af\u09cb\u0997\u0995\u09be\u09b0\u09c0-\u098f\u09ac\u0982-\u09a6\u09c7\u09be\u0986\u0981\u09b6\u09b2\u09be-\u0995\u09cb\u09af\u09bc\u09be\u09a8\u09cd\u099f\u09be\u09ae-\u09a8\u09bf\u0989\u09b0\u09be\u09b2-\u09a8\u09c7\u099f\u0993\u09af\u09bc\u09be\u09b0\u09cd\u0995"]], "\u09b8\u09c1\u099a\u09bf:": [[57, "\u09b8\u09c1\u099a\u09bf:"]], "\u09aa\u09b0\u09cd\u09ac 1: \u09b8\u09b0\u09b2 \u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09a8\u09cd\u09af\u09be\u09b8\u0995\u09b0\u09a3 (\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09bf\u0995\u09c7\u09b6\u09a8) \u0993 \u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09a8": [[57, "\u09aa\u09b0\u09cd\u09ac-1:-\u09b8\u09b0\u09b2-\u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09a8\u09cd\u09af\u09be\u09b8\u0995\u09b0\u09a3-(\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09bf\u0995\u09c7\u09b6\u09a8)-\u0993-\u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09a8"]], "1. \u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09ad\u09be\u0997 (\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09bf\u0995\u09c7\u09b6\u09a8)": [[57, "1.-\u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09ad\u09be\u0997-(\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09bf\u0995\u09c7\u09b6\u09a8)"]], "A. Classification with PyTorch and EstimatorQNN": [[57, "A.-Classification-with-PyTorch-and-EstimatorQNN"]], "\u0985\u09a8\u09c1\u0995\u09c2\u09b2\u09be\u09df\u0995": [[57, "\u0985\u09a8\u09c1\u0995\u09c2\u09b2\u09be\u09df\u0995"]], "\u09b9\u09cd\u09b0\u09be\u09b8 \u09ab\u09be\u0982\u09b6\u09a8 (Loss Function)": [[57, "\u09b9\u09cd\u09b0\u09be\u09b8-\u09ab\u09be\u0982\u09b6\u09a8-(Loss-Function)"]], "B. Classification with PyTorch and SamplerQNN": [[57, "B.-Classification-with-PyTorch-and-SamplerQNN"]], "2. \u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09a8": [[57, "2.-\u09b0\u09bf\u0997\u09cd\u09b0\u09c7\u09b6\u09a8"]], "A. Regression with PyTorch and EstimatorQNN": [[57, "A.-Regression-with-PyTorch-and-EstimatorQNN"]], "\u09a6\u09cd\u09ac\u09bf\u09a4\u09c0\u09af\u09bc \u0985\u09a7\u09cd\u09af\u09be\u09af\u09bc: MNIST \u098f\u09b0 \u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09a8\u09cd\u09af\u09be\u09b8\u0995\u09b0\u09a3 (\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09bf\u0995\u09c7\u09b6\u09a8), \u09a6\u09c7\u09be\u0986\u0981\u09b6\u09b2\u09be (Hybrid) \u0995\u09cb\u09af\u09bc\u09be\u09a8\u09cd\u099f\u09be\u09ae \u09a8\u09bf\u0989\u09b0\u09be\u09b2 \u09a8\u09c7\u099f\u0993\u09af\u09bc\u09be\u09b0\u09cd\u0995": [[57, "\u09a6\u09cd\u09ac\u09bf\u09a4\u09c0\u09af\u09bc-\u0985\u09a7\u09cd\u09af\u09be\u09af\u09bc:-MNIST-\u098f\u09b0-\u09b6\u09cd\u09b0\u09c7\u09a3\u09bf\u09ac\u09bf\u09a8\u09cd\u09af\u09be\u09b8\u0995\u09b0\u09a3-(\u0995\u09cd\u09b2\u09be\u09b8\u09bf\u09ab\u09bf\u0995\u09c7\u09b6\u09a8),-\u09a6\u09c7\u09be\u0986\u0981\u09b6\u09b2\u09be-(Hybrid)-\u0995\u09cb\u09af\u09bc\u09be\u09a8\u09cd\u099f\u09be\u09ae-\u09a8\u09bf\u0989\u09b0\u09be\u09b2-\u09a8\u09c7\u099f\u0993\u09af\u09bc\u09be\u09b0\u09cd\u0995"]], "\u09a7\u09be\u09aa \u09e7: \u09aa\u09cd\u09b0\u09b6\u09bf\u0995\u09cd\u09b7\u09a3 \u098f\u09ac\u0982 \u09aa\u09b0\u09c0\u0995\u09cd\u09b7\u09be\u09b0 \u099c\u09a8\u09cd\u09af \u09a1\u09c7\u099f\u09be-\u09b2\u09cb\u09a1\u09be\u09b0 \u09b8\u0982\u099c\u09cd\u099e\u09be\u09af\u09bc\u09bf\u09a4 \u0995\u09b0\u09be": [[57, "\u09a7\u09be\u09aa-\u09e7:-\u09aa\u09cd\u09b0\u09b6\u09bf\u0995\u09cd\u09b7\u09a3-\u098f\u09ac\u0982-\u09aa\u09b0\u09c0\u0995\u09cd\u09b7\u09be\u09b0-\u099c\u09a8\u09cd\u09af-\u09a1\u09c7\u099f\u09be-\u09b2\u09cb\u09a1\u09be\u09b0-\u09b8\u0982\u099c\u09cd\u099e\u09be\u09af\u09bc\u09bf\u09a4-\u0995\u09b0\u09be"]], "\u09a7\u09be\u09aa \u09e8: \u0995\u09cb\u09af\u09bc\u09be\u09a8\u09cd\u099f\u09be\u09ae \u09a8\u09bf\u0989\u09b0\u09be\u09b2 \u09a8\u09c7\u099f\u0993\u09af\u09bc\u09be\u09b0\u09cd\u0995 \u09ac\u09be\u09a8\u09be\u09a8\u09cb \u098f\u09ac\u0982 \u09a6\u09c7\u09be\u0986\u0981\u09b6\u09b2\u09be (Hybrid) \u09ae\u09a1\u09c7\u09b2": [[57, "\u09a7\u09be\u09aa-\u09e8:-\u0995\u09cb\u09af\u09bc\u09be\u09a8\u09cd\u099f\u09be\u09ae-\u09a8\u09bf\u0989\u09b0\u09be\u09b2-\u09a8\u09c7\u099f\u0993\u09af\u09bc\u09be\u09b0\u09cd\u0995-\u09ac\u09be\u09a8\u09be\u09a8\u09cb-\u098f\u09ac\u0982-\u09a6\u09c7\u09be\u0986\u0981\u09b6\u09b2\u09be-(Hybrid)-\u09ae\u09a1\u09c7\u09b2"]], "\u09a7\u09be\u09aa \u09e9: \u09aa\u09cd\u09b0\u09b6\u09bf\u0995\u09cd\u09b7\u09a3": [[57, "\u09a7\u09be\u09aa-\u09e9:-\u09aa\u09cd\u09b0\u09b6\u09bf\u0995\u09cd\u09b7\u09a3"]], "\u09a7\u09be\u09aa \u09ea: \u09ae\u09c2\u09b2\u09cd\u09af\u09be\u09af\u09bc\u09a8": [[57, "\u09a7\u09be\u09aa-\u09ea:-\u09ae\u09c2\u09b2\u09cd\u09af\u09be\u09af\u09bc\u09a8"]], "Pegasos Quantum Support Vector Classifier": [[58, "Pegasos-Quantum-Support-Vector-Classifier"]], "Quantum Kernel Training for Machine Learning Applications": [[59, "Quantum-Kernel-Training-for-Machine-Learning-Applications"]], "Import Local, External, and Qiskit Packages and define a callback class for our optimizer": [[59, "Import-Local,-External,-and-Qiskit-Packages-and-define-a-callback-class-for-our-optimizer"]], "Prepare the Dataset": [[59, "Prepare-the-Dataset"]], "Define the Quantum Feature Map": [[59, "Define-the-Quantum-Feature-Map"]], "Set Up the Quantum Kernel and Quantum Kernel Trainer": [[59, "Set-Up-the-Quantum-Kernel-and-Quantum-Kernel-Trainer"]], "Train the Quantum Kernel": [[59, "Train-the-Quantum-Kernel"]], "Fit and Test the Model": [[59, "Fit-and-Test-the-Model"]], "Visualize the Kernel Training Process": [[59, "Visualize-the-Kernel-Training-Process"]], "Saving, Loading Qiskit Machine Learning Models and Continuous Training": [[60, "Saving,-Loading-Qiskit-Machine-Learning-Models-and-Continuous-Training"]], "1. Prepare a dataset": [[60, "1.-Prepare-a-dataset"]], "2. Train a model and save it": [[60, "2.-Train-a-model-and-save-it"]], "3. Load a model and continue training": [[60, "3.-Load-a-model-and-continue-training"]], "4. PyTorch hybrid models": [[60, "4.-PyTorch-hybrid-models"]], "Effective Dimension of Qiskit Neural Networks": [[61, "Effective-Dimension-of-Qiskit-Neural-Networks"]], "1. Global vs. Local Effective Dimension": [[61, "1.-Global-vs.-Local-Effective-Dimension"]], "2. The Effective Dimension Algorithm": [[61, "2.-The-Effective-Dimension-Algorithm"]], "3. Basic Example (SamplerQNN)": [[61, "3.-Basic-Example-(SamplerQNN)"]], "3.1 Define QNN": [[61, "3.1-Define-QNN"]], "3.2 Set up Effective Dimension calculation": [[61, "3.2-Set-up-Effective-Dimension-calculation"]], "3.3 Compute Global Effective Dimension": [[61, "3.3-Compute-Global-Effective-Dimension"]], "4. Local Effective Dimension Example": [[61, "4.-Local-Effective-Dimension-Example"]], "4.1 Define Dataset and QNN": [[61, "4.1-Define-Dataset-and-QNN"]], "4.2 Train QNN": [[61, "4.2-Train-QNN"]], "4.3 Compute Local Effective Dimension of trained QNN": [[61, "4.3-Compute-Local-Effective-Dimension-of-trained-QNN"]], "4.4 Compute Local Effective Dimension of untrained QNN": [[61, "4.4-Compute-Local-Effective-Dimension-of-untrained-QNN"]], "4.5 Plot and analyze results": [[61, "4.5-Plot-and-analyze-results"]], "The Quantum Convolution Neural Network": [[62, "The-Quantum-Convolution-Neural-Network"]], "1. Differences between a QCNN and CCNN": [[62, "1.-Differences-between-a-QCNN-and-CCNN"]], "1.1 Classical Convolutional Neural Networks": [[62, "1.1-Classical-Convolutional-Neural-Networks"]], "1.2 Quantum Convolutional Neural Networks": [[62, "1.2-Quantum-Convolutional-Neural-Networks"]], "2. Components of a QCNN": [[62, "2.-Components-of-a-QCNN"]], "2.1 Convolutional Layer": [[62, "2.1-Convolutional-Layer"]], "2.2 Pooling Layer": [[62, "2.2-Pooling-Layer"]], "3. Data Generation": [[62, "3.-Data-Generation"]], "4. Modeling our QCNN": [[62, "4.-Modeling-our-QCNN"]], "5. Training our QCNN": [[62, "5.-Training-our-QCNN"]], "6. Testing our QCNN": [[62, "6.-Testing-our-QCNN"]], "7. References": [[62, "7.-References"]], "The Quantum Autoencoder": [[63, "The-Quantum-Autoencoder"]], "Contents": [[63, "Contents"]], "1. What is an Autoencoder?": [[63, "1.-What-is-an-Autoencoder?"]], "2. The Quantum Autoencoder": [[63, "2.-The-Quantum-Autoencoder"]], "3. Components of a Quantum Autoencoder": [[63, "3.-Components-of-a-Quantum-Autoencoder"]], "4. Choosing a Loss Function": [[63, "4.-Choosing-a-Loss-Function"]], "The SWAP Test": [[63, "The-SWAP-Test"]], "5. Building the Quantum Autoencoder Ansatz": [[63, "5.-Building-the-Quantum-Autoencoder-Ansatz"]], "The Parametrized Circuit": [[63, "The-Parametrized-Circuit"]], "6. A Simple Example: The Domain Wall Autoencoder": [[63, "6.-A-Simple-Example:-The-Domain-Wall-Autoencoder"]], "7. A Quantum Autoencoder for Digital Compression": [[63, "7.-A-Quantum-Autoencoder-for-Digital-Compression"]], "8. Applications of a Quantum Autoencoder": [[63, "8.-Applications-of-a-Quantum-Autoencoder"]], "9. References": [[63, "9.-References"]], "\u09ae\u09c7\u09b6\u09bf\u09a8 \u09b2\u09be\u09b0\u09cd\u09a8\u09bf\u0982 \u09aa\u09be\u09a0\u09b8\u09ae\u09c2\u09b9 (\u099f\u09bf\u0989\u099f\u09cb\u09b0\u09bf\u09df\u09be\u09b2\u09b8)": [[64, "machine-learning-tutorials"]]}, "indexentries": {"module": [[0, "module-qiskit_machine_learning"], [1, "module-qiskit_machine_learning.algorithms"], [2, "module-qiskit_machine_learning.circuit.library"], [3, "module-qiskit_machine_learning.connectors"], [4, "module-qiskit_machine_learning.datasets"], [5, "module-qiskit_machine_learning.kernels"], [6, "module-qiskit_machine_learning.kernels.algorithms"], [7, "module-qiskit_machine_learning.neural_networks"], [8, "module-qiskit_machine_learning.utils"], [9, "module-qiskit_machine_learning.utils.loss_functions"]], "qiskit_machine_learning": [[0, "module-qiskit_machine_learning"]], "qiskit_machine_learning.algorithms": [[1, "module-qiskit_machine_learning.algorithms"]], "qiskit_machine_learning.circuit.library": [[2, "module-qiskit_machine_learning.circuit.library"]], "qiskit_machine_learning.connectors": [[3, "module-qiskit_machine_learning.connectors"]], "qiskit_machine_learning.datasets": [[4, "module-qiskit_machine_learning.datasets"]], "qiskit_machine_learning.kernels": [[5, "module-qiskit_machine_learning.kernels"]], "qiskit_machine_learning.kernels.algorithms": [[6, "module-qiskit_machine_learning.kernels.algorithms"]], "qiskit_machine_learning.neural_networks": [[7, "module-qiskit_machine_learning.neural_networks"]], "qiskit_machine_learning.utils": [[8, "module-qiskit_machine_learning.utils"]], "qiskit_machine_learning.utils.loss_functions": [[9, "module-qiskit_machine_learning.utils.loss_functions"]], "qiskitmachinelearningerror": [[15, "qiskit_machine_learning.QiskitMachineLearningError"]], "add_note() (qiskitmachinelearningerror \u09ae\u09c7\u09a5\u09a1)": [[15, "qiskit_machine_learning.QiskitMachineLearningError.add_note"]], "with_traceback() (qiskitmachinelearningerror \u09ae\u09c7\u09a5\u09a1)": [[15, "qiskit_machine_learning.QiskitMachineLearningError.with_traceback"]], "binaryobjectivefunction (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[16, "qiskit_machine_learning.algorithms.BinaryObjectiveFunction"]], "gradient() (binaryobjectivefunction \u09ae\u09c7\u09a5\u09a1)": [[16, "qiskit_machine_learning.algorithms.BinaryObjectiveFunction.gradient"]], "objective() (binaryobjectivefunction \u09ae\u09c7\u09a5\u09a1)": [[16, "qiskit_machine_learning.algorithms.BinaryObjectiveFunction.objective"]], "multiclassobjectivefunction (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[17, "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction"]], "gradient() (multiclassobjectivefunction \u09ae\u09c7\u09a5\u09a1)": [[17, "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.gradient"]], "objective() (multiclassobjectivefunction \u09ae\u09c7\u09a5\u09a1)": [[17, "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.objective"]], "neuralnetworkclassifier (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier"]], "callback (neuralnetworkclassifier \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.callback"]], "fit() (neuralnetworkclassifier \u09ae\u09c7\u09a5\u09a1)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit"]], "fit_result (neuralnetworkclassifier \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit_result"]], "initial_point (neuralnetworkclassifier \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.initial_point"]], "load() (neuralnetworkclassifier \u0995\u09cd\u09b2\u09be\u09b8 \u09ae\u09c7\u09a5\u09a1)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.load"]], "loss (neuralnetworkclassifier \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.loss"]], "neural_network (neuralnetworkclassifier \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.neural_network"]], "num_classes (neuralnetworkclassifier \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.num_classes"]], "optimizer (neuralnetworkclassifier \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.optimizer"]], "predict() (neuralnetworkclassifier \u09ae\u09c7\u09a5\u09a1)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.predict"]], "save() (neuralnetworkclassifier \u09ae\u09c7\u09a5\u09a1)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.save"]], "score() (neuralnetworkclassifier \u09ae\u09c7\u09a5\u09a1)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.score"]], "warm_start (neuralnetworkclassifier \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.warm_start"]], "weights (neuralnetworkclassifier \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.weights"]], "neuralnetworkregressor (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor"]], "callback (neuralnetworkregressor \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.callback"]], "fit() (neuralnetworkregressor \u09ae\u09c7\u09a5\u09a1)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit"]], "fit_result (neuralnetworkregressor \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit_result"]], "initial_point (neuralnetworkregressor \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.initial_point"]], "load() (neuralnetworkregressor \u0995\u09cd\u09b2\u09be\u09b8 \u09ae\u09c7\u09a5\u09a1)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.load"]], "loss (neuralnetworkregressor \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.loss"]], "neural_network (neuralnetworkregressor \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.neural_network"]], "optimizer (neuralnetworkregressor \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.optimizer"]], "predict() (neuralnetworkregressor \u09ae\u09c7\u09a5\u09a1)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.predict"]], "save() (neuralnetworkregressor \u09ae\u09c7\u09a5\u09a1)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.save"]], "score() (neuralnetworkregressor \u09ae\u09c7\u09a5\u09a1)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.score"]], "warm_start (neuralnetworkregressor \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.warm_start"]], "weights (neuralnetworkregressor \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.weights"]], "objectivefunction (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[20, "qiskit_machine_learning.algorithms.ObjectiveFunction"]], "gradient() (objectivefunction \u09ae\u09c7\u09a5\u09a1)": [[20, "qiskit_machine_learning.algorithms.ObjectiveFunction.gradient"]], "objective() (objectivefunction \u09ae\u09c7\u09a5\u09a1)": [[20, "qiskit_machine_learning.algorithms.ObjectiveFunction.objective"]], "onehotobjectivefunction (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[21, "qiskit_machine_learning.algorithms.OneHotObjectiveFunction"]], "gradient() (onehotobjectivefunction \u09ae\u09c7\u09a5\u09a1)": [[21, "qiskit_machine_learning.algorithms.OneHotObjectiveFunction.gradient"]], "objective() (onehotobjectivefunction \u09ae\u09c7\u09a5\u09a1)": [[21, "qiskit_machine_learning.algorithms.OneHotObjectiveFunction.objective"]], "fitted (pegasosqsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.FITTED"]], "pegasosqsvc (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC"]], "unfitted (pegasosqsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.UNFITTED"]], "decision_function() (pegasosqsvc \u09ae\u09c7\u09a5\u09a1)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.decision_function"]], "fit() (pegasosqsvc \u09ae\u09c7\u09a5\u09a1)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.fit"]], "load() (pegasosqsvc \u0995\u09cd\u09b2\u09be\u09b8 \u09ae\u09c7\u09a5\u09a1)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.load"]], "num_steps (pegasosqsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.num_steps"]], "precomputed (pegasosqsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.precomputed"]], "predict() (pegasosqsvc \u09ae\u09c7\u09a5\u09a1)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.predict"]], "quantum_kernel (pegasosqsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.quantum_kernel"]], "save() (pegasosqsvc \u09ae\u09c7\u09a5\u09a1)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.save"]], "score() (pegasosqsvc \u09ae\u09c7\u09a5\u09a1)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.score"]], "qsvc (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[23, "qiskit_machine_learning.algorithms.QSVC"]], "coef_ (qsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[23, "qiskit_machine_learning.algorithms.QSVC.coef_"]], "decision_function() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.decision_function"]], "fit() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.fit"]], "get_metadata_routing() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.get_metadata_routing"]], "get_params() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.get_params"]], "load() (qsvc \u0995\u09cd\u09b2\u09be\u09b8 \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.load"]], "n_support_ (qsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[23, "qiskit_machine_learning.algorithms.QSVC.n_support_"]], "predict() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.predict"]], "predict_log_proba() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.predict_log_proba"]], "predict_proba() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.predict_proba"]], "proba_ (qsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[23, "qiskit_machine_learning.algorithms.QSVC.probA_"]], "probb_ (qsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[23, "qiskit_machine_learning.algorithms.QSVC.probB_"]], "quantum_kernel (qsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[23, "qiskit_machine_learning.algorithms.QSVC.quantum_kernel"]], "save() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.save"]], "score() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.score"]], "set_fit_request() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.set_fit_request"]], "set_params() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.set_params"]], "set_score_request() (qsvc \u09ae\u09c7\u09a5\u09a1)": [[23, "qiskit_machine_learning.algorithms.QSVC.set_score_request"]], "unused_param (qsvc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[23, "qiskit_machine_learning.algorithms.QSVC.unused_param"]], "qsvr (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[24, "qiskit_machine_learning.algorithms.QSVR"]], "class_weight_ (qsvr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[24, "qiskit_machine_learning.algorithms.QSVR.class_weight_"]], "coef_ (qsvr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[24, "qiskit_machine_learning.algorithms.QSVR.coef_"]], "fit() (qsvr \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.fit"]], "get_metadata_routing() (qsvr \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.get_metadata_routing"]], "get_params() (qsvr \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.get_params"]], "load() (qsvr \u0995\u09cd\u09b2\u09be\u09b8 \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.load"]], "n_support_ (qsvr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[24, "qiskit_machine_learning.algorithms.QSVR.n_support_"]], "predict() (qsvr \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.predict"]], "quantum_kernel (qsvr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[24, "qiskit_machine_learning.algorithms.QSVR.quantum_kernel"]], "save() (qsvr \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.save"]], "score() (qsvr \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.score"]], "set_fit_request() (qsvr \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.set_fit_request"]], "set_params() (qsvr \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.set_params"]], "set_score_request() (qsvr \u09ae\u09c7\u09a5\u09a1)": [[24, "qiskit_machine_learning.algorithms.QSVR.set_score_request"]], "unused_param (qsvr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[24, "qiskit_machine_learning.algorithms.QSVR.unused_param"]], "serializablemodelmixin (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[25, "qiskit_machine_learning.algorithms.SerializableModelMixin"]], "load() (serializablemodelmixin \u0995\u09cd\u09b2\u09be\u09b8 \u09ae\u09c7\u09a5\u09a1)": [[25, "qiskit_machine_learning.algorithms.SerializableModelMixin.load"]], "save() (serializablemodelmixin \u09ae\u09c7\u09a5\u09a1)": [[25, "qiskit_machine_learning.algorithms.SerializableModelMixin.save"]], "trainablemodel (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[26, "qiskit_machine_learning.algorithms.TrainableModel"]], "callback (trainablemodel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.callback"]], "fit() (trainablemodel \u09ae\u09c7\u09a5\u09a1)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.fit"]], "fit_result (trainablemodel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.fit_result"]], "initial_point (trainablemodel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.initial_point"]], "load() (trainablemodel \u0995\u09cd\u09b2\u09be\u09b8 \u09ae\u09c7\u09a5\u09a1)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.load"]], "loss (trainablemodel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.loss"]], "neural_network (trainablemodel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.neural_network"]], "optimizer (trainablemodel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.optimizer"]], "predict() (trainablemodel \u09ae\u09c7\u09a5\u09a1)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.predict"]], "save() (trainablemodel \u09ae\u09c7\u09a5\u09a1)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.save"]], "score() (trainablemodel \u09ae\u09c7\u09a5\u09a1)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.score"]], "warm_start (trainablemodel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.warm_start"]], "weights (trainablemodel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.weights"]], "vqc (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[27, "qiskit_machine_learning.algorithms.VQC"]], "ansatz (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.ansatz"]], "callback (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.callback"]], "circuit (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.circuit"]], "feature_map (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.feature_map"]], "fit() (vqc \u09ae\u09c7\u09a5\u09a1)": [[27, "qiskit_machine_learning.algorithms.VQC.fit"]], "fit_result (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.fit_result"]], "initial_point (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.initial_point"]], "load() (vqc \u0995\u09cd\u09b2\u09be\u09b8 \u09ae\u09c7\u09a5\u09a1)": [[27, "qiskit_machine_learning.algorithms.VQC.load"]], "loss (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.loss"]], "neural_network (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.neural_network"]], "num_classes (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.num_classes"]], "num_qubits (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.num_qubits"]], "optimizer (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.optimizer"]], "predict() (vqc \u09ae\u09c7\u09a5\u09a1)": [[27, "qiskit_machine_learning.algorithms.VQC.predict"]], "save() (vqc \u09ae\u09c7\u09a5\u09a1)": [[27, "qiskit_machine_learning.algorithms.VQC.save"]], "score() (vqc \u09ae\u09c7\u09a5\u09a1)": [[27, "qiskit_machine_learning.algorithms.VQC.score"]], "warm_start (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.warm_start"]], "weights (vqc \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[27, "qiskit_machine_learning.algorithms.VQC.weights"]], "vqr (qiskit_machine_learning.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[28, "qiskit_machine_learning.algorithms.VQR"]], "ansatz (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.ansatz"]], "callback (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.callback"]], "feature_map (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.feature_map"]], "fit() (vqr \u09ae\u09c7\u09a5\u09a1)": [[28, "qiskit_machine_learning.algorithms.VQR.fit"]], "fit_result (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.fit_result"]], "initial_point (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.initial_point"]], "load() (vqr \u0995\u09cd\u09b2\u09be\u09b8 \u09ae\u09c7\u09a5\u09a1)": [[28, "qiskit_machine_learning.algorithms.VQR.load"]], "loss (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.loss"]], "neural_network (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.neural_network"]], "num_qubits (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.num_qubits"]], "optimizer (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.optimizer"]], "predict() (vqr \u09ae\u09c7\u09a5\u09a1)": [[28, "qiskit_machine_learning.algorithms.VQR.predict"]], "save() (vqr \u09ae\u09c7\u09a5\u09a1)": [[28, "qiskit_machine_learning.algorithms.VQR.save"]], "score() (vqr \u09ae\u09c7\u09a5\u09a1)": [[28, "qiskit_machine_learning.algorithms.VQR.score"]], "warm_start (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.warm_start"]], "weights (vqr \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[28, "qiskit_machine_learning.algorithms.VQR.weights"]], "qnncircuit (qiskit_machine_learning.circuit.library \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit"]], "ansatz (qnncircuit \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.ansatz"]], "feature_map (qnncircuit \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.feature_map"]], "input_parameters (qnncircuit \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.input_parameters"]], "num_input_parameters (qnncircuit \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.num_input_parameters"]], "num_qubits (qnncircuit \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.num_qubits"]], "num_weight_parameters (qnncircuit \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.num_weight_parameters"]], "weight_parameters (qnncircuit \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.weight_parameters"]], "rawfeaturevector (qiskit_machine_learning.circuit.library \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[30, "qiskit_machine_learning.circuit.library.RawFeatureVector"]], "feature_dimension (rawfeaturevector \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[30, "qiskit_machine_learning.circuit.library.RawFeatureVector.feature_dimension"]], "num_qubits (rawfeaturevector \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[30, "qiskit_machine_learning.circuit.library.RawFeatureVector.num_qubits"]], "torchconnector (qiskit_machine_learning.connectors \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[31, "qiskit_machine_learning.connectors.TorchConnector"]], "forward() (torchconnector \u09ae\u09c7\u09a5\u09a1)": [[31, "qiskit_machine_learning.connectors.TorchConnector.forward"]], "neural_network (torchconnector \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[31, "qiskit_machine_learning.connectors.TorchConnector.neural_network"]], "sparse (torchconnector \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[31, "qiskit_machine_learning.connectors.TorchConnector.sparse"]], "weight (torchconnector \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[31, "qiskit_machine_learning.connectors.TorchConnector.weight"]], "ad_hoc_data() (qiskit_machine_learning.datasets \u09ae\u09a1\u09bf\u0989\u09b2\u09c7)": [[32, "qiskit_machine_learning.datasets.ad_hoc_data"]], "basekernel (qiskit_machine_learning.kernels \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[33, "qiskit_machine_learning.kernels.BaseKernel"]], "enforce_psd (basekernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[33, "qiskit_machine_learning.kernels.BaseKernel.enforce_psd"]], "evaluate() (basekernel \u09ae\u09c7\u09a5\u09a1)": [[33, "qiskit_machine_learning.kernels.BaseKernel.evaluate"]], "feature_map (basekernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[33, "qiskit_machine_learning.kernels.BaseKernel.feature_map"]], "num_features (basekernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[33, "qiskit_machine_learning.kernels.BaseKernel.num_features"]], "fidelityquantumkernel (qiskit_machine_learning.kernels \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel"]], "enforce_psd (fidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.enforce_psd"]], "evaluate() (fidelityquantumkernel \u09ae\u09c7\u09a5\u09a1)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.evaluate"]], "evaluate_duplicates (fidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.evaluate_duplicates"]], "feature_map (fidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.feature_map"]], "fidelity (fidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.fidelity"]], "num_features (fidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.num_features"]], "fidelitystatevectorkernel (qiskit_machine_learning.kernels \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel"]], "clear_cache() (fidelitystatevectorkernel \u09ae\u09c7\u09a5\u09a1)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.clear_cache"]], "enforce_psd (fidelitystatevectorkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.enforce_psd"]], "evaluate() (fidelitystatevectorkernel \u09ae\u09c7\u09a5\u09a1)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.evaluate"]], "feature_map (fidelitystatevectorkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.feature_map"]], "num_features (fidelitystatevectorkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.num_features"]], "trainablefidelityquantumkernel (qiskit_machine_learning.kernels \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel"]], "assign_training_parameters() (trainablefidelityquantumkernel \u09ae\u09c7\u09a5\u09a1)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.assign_training_parameters"]], "enforce_psd (trainablefidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.enforce_psd"]], "evaluate() (trainablefidelityquantumkernel \u09ae\u09c7\u09a5\u09a1)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.evaluate"]], "evaluate_duplicates (trainablefidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.evaluate_duplicates"]], "feature_map (trainablefidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.feature_map"]], "fidelity (trainablefidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.fidelity"]], "num_features (trainablefidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.num_features"]], "num_training_parameters (trainablefidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.num_training_parameters"]], "parameter_values (trainablefidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.parameter_values"]], "training_parameters (trainablefidelityquantumkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.training_parameters"]], "trainablefidelitystatevectorkernel (qiskit_machine_learning.kernels \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel"]], "assign_training_parameters() (trainablefidelitystatevectorkernel \u09ae\u09c7\u09a5\u09a1)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.assign_training_parameters"]], "clear_cache() (trainablefidelitystatevectorkernel \u09ae\u09c7\u09a5\u09a1)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.clear_cache"]], "enforce_psd (trainablefidelitystatevectorkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.enforce_psd"]], "evaluate() (trainablefidelitystatevectorkernel \u09ae\u09c7\u09a5\u09a1)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.evaluate"]], "feature_map (trainablefidelitystatevectorkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.feature_map"]], "num_features (trainablefidelitystatevectorkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.num_features"]], "num_training_parameters (trainablefidelitystatevectorkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.num_training_parameters"]], "parameter_values (trainablefidelitystatevectorkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.parameter_values"]], "training_parameters (trainablefidelitystatevectorkernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.training_parameters"]], "trainablekernel (qiskit_machine_learning.kernels \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[38, "qiskit_machine_learning.kernels.TrainableKernel"]], "assign_training_parameters() (trainablekernel \u09ae\u09c7\u09a5\u09a1)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.assign_training_parameters"]], "enforce_psd (trainablekernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.enforce_psd"]], "evaluate() (trainablekernel \u09ae\u09c7\u09a5\u09a1)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.evaluate"]], "feature_map (trainablekernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.feature_map"]], "num_features (trainablekernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.num_features"]], "num_training_parameters (trainablekernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.num_training_parameters"]], "parameter_values (trainablekernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.parameter_values"]], "training_parameters (trainablekernel \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.training_parameters"]], "quantumkerneltrainer (qiskit_machine_learning.kernels.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer"]], "fit() (quantumkerneltrainer \u09ae\u09c7\u09a5\u09a1)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.fit"]], "initial_point (quantumkerneltrainer \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.initial_point"]], "loss (quantumkerneltrainer \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.loss"]], "optimizer (quantumkerneltrainer \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.optimizer"]], "quantum_kernel (quantumkerneltrainer \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.quantum_kernel"]], "quantumkerneltrainerresult (qiskit_machine_learning.kernels.algorithms \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult"]], "combine() (quantumkerneltrainerresult \u09ae\u09c7\u09a5\u09a1)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.combine"]], "optimal_circuit (quantumkerneltrainerresult \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_circuit"]], "optimal_parameters (quantumkerneltrainerresult \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_parameters"]], "optimal_point (quantumkerneltrainerresult \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_point"]], "optimal_value (quantumkerneltrainerresult \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_value"]], "optimizer_evals (quantumkerneltrainerresult \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimizer_evals"]], "optimizer_result (quantumkerneltrainerresult \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimizer_result"]], "optimizer_time (quantumkerneltrainerresult \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimizer_time"]], "quantum_kernel (quantumkerneltrainerresult \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.quantum_kernel"]], "effectivedimension (qiskit_machine_learning.neural_networks \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension"]], "get_effective_dimension() (effectivedimension \u09ae\u09c7\u09a5\u09a1)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.get_effective_dimension"]], "get_fisher_information() (effectivedimension \u09ae\u09c7\u09a5\u09a1)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.get_fisher_information"]], "get_normalized_fisher() (effectivedimension \u09ae\u09c7\u09a5\u09a1)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.get_normalized_fisher"]], "input_samples (effectivedimension \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.input_samples"]], "run_monte_carlo() (effectivedimension \u09ae\u09c7\u09a5\u09a1)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.run_monte_carlo"]], "weight_samples (effectivedimension \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.weight_samples"]], "estimatorqnn (qiskit_machine_learning.neural_networks \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN"]], "backward() (estimatorqnn \u09ae\u09c7\u09a5\u09a1)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.backward"]], "circuit (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.circuit"]], "estimator (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.estimator"]], "forward() (estimatorqnn \u09ae\u09c7\u09a5\u09a1)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.forward"]], "gradient (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.gradient"]], "input_gradients (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.input_gradients"]], "input_params (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.input_params"]], "num_inputs (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.num_inputs"]], "num_weights (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.num_weights"]], "observables (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.observables"]], "output_shape (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.output_shape"]], "sparse (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.sparse"]], "weight_params (estimatorqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.weight_params"]], "localeffectivedimension (qiskit_machine_learning.neural_networks \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension"]], "get_effective_dimension() (localeffectivedimension \u09ae\u09c7\u09a5\u09a1)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.get_effective_dimension"]], "get_fisher_information() (localeffectivedimension \u09ae\u09c7\u09a5\u09a1)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.get_fisher_information"]], "get_normalized_fisher() (localeffectivedimension \u09ae\u09c7\u09a5\u09a1)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.get_normalized_fisher"]], "input_samples (localeffectivedimension \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.input_samples"]], "run_monte_carlo() (localeffectivedimension \u09ae\u09c7\u09a5\u09a1)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.run_monte_carlo"]], "weight_samples (localeffectivedimension \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.weight_samples"]], "neuralnetwork (qiskit_machine_learning.neural_networks \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork"]], "backward() (neuralnetwork \u09ae\u09c7\u09a5\u09a1)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.backward"]], "forward() (neuralnetwork \u09ae\u09c7\u09a5\u09a1)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.forward"]], "input_gradients (neuralnetwork \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.input_gradients"]], "num_inputs (neuralnetwork \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.num_inputs"]], "num_weights (neuralnetwork \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.num_weights"]], "output_shape (neuralnetwork \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.output_shape"]], "sparse (neuralnetwork \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.sparse"]], "samplerqnn (qiskit_machine_learning.neural_networks \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN"]], "backward() (samplerqnn \u09ae\u09c7\u09a5\u09a1)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.backward"]], "circuit (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.circuit"]], "forward() (samplerqnn \u09ae\u09c7\u09a5\u09a1)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.forward"]], "gradient (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.gradient"]], "input_gradients (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.input_gradients"]], "input_params (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.input_params"]], "interpret (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.interpret"]], "num_inputs (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.num_inputs"]], "num_weights (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.num_weights"]], "output_shape (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.output_shape"]], "sampler (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.sampler"]], "set_interpret() (samplerqnn \u09ae\u09c7\u09a5\u09a1)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.set_interpret"]], "sparse (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.sparse"]], "weight_params (samplerqnn \u098f\u09cd\u09af\u099f\u09cd\u09b0\u09bf\u09ac\u09bf\u0989\u099f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.weight_params"]], "crossentropyloss (qiskit_machine_learning.utils.loss_functions \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[46, "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss"]], "evaluate() (crossentropyloss \u09ae\u09c7\u09a5\u09a1)": [[46, "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.evaluate"]], "gradient() (crossentropyloss \u09ae\u09c7\u09a5\u09a1)": [[46, "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.gradient"]], "kernelloss (qiskit_machine_learning.utils.loss_functions \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[47, "qiskit_machine_learning.utils.loss_functions.KernelLoss"]], "evaluate() (kernelloss \u09ae\u09c7\u09a5\u09a1)": [[47, "qiskit_machine_learning.utils.loss_functions.KernelLoss.evaluate"]], "l1loss (qiskit_machine_learning.utils.loss_functions \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[48, "qiskit_machine_learning.utils.loss_functions.L1Loss"]], "evaluate() (l1loss \u09ae\u09c7\u09a5\u09a1)": [[48, "qiskit_machine_learning.utils.loss_functions.L1Loss.evaluate"]], "gradient() (l1loss \u09ae\u09c7\u09a5\u09a1)": [[48, "qiskit_machine_learning.utils.loss_functions.L1Loss.gradient"]], "l2loss (qiskit_machine_learning.utils.loss_functions \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[49, "qiskit_machine_learning.utils.loss_functions.L2Loss"]], "evaluate() (l2loss \u09ae\u09c7\u09a5\u09a1)": [[49, "qiskit_machine_learning.utils.loss_functions.L2Loss.evaluate"]], "gradient() (l2loss \u09ae\u09c7\u09a5\u09a1)": [[49, "qiskit_machine_learning.utils.loss_functions.L2Loss.gradient"]], "loss (qiskit_machine_learning.utils.loss_functions \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[50, "qiskit_machine_learning.utils.loss_functions.Loss"]], "evaluate() (loss \u09ae\u09c7\u09a5\u09a1)": [[50, "qiskit_machine_learning.utils.loss_functions.Loss.evaluate"]], "gradient() (loss \u09ae\u09c7\u09a5\u09a1)": [[50, "qiskit_machine_learning.utils.loss_functions.Loss.gradient"]], "svcloss (qiskit_machine_learning.utils.loss_functions \u0995\u09cd\u09b2\u09be\u09b8\u09c7)": [[51, "qiskit_machine_learning.utils.loss_functions.SVCLoss"]], "evaluate() (svcloss \u09ae\u09c7\u09a5\u09a1)": [[51, "qiskit_machine_learning.utils.loss_functions.SVCLoss.evaluate"]]}})