Search.setIndex({"docnames": ["apidocs/qiskit_machine_learning", "apidocs/qiskit_machine_learning.algorithms", "apidocs/qiskit_machine_learning.circuit.library", "apidocs/qiskit_machine_learning.connectors", "apidocs/qiskit_machine_learning.datasets", "apidocs/qiskit_machine_learning.kernels", "apidocs/qiskit_machine_learning.kernels.algorithms", "apidocs/qiskit_machine_learning.neural_networks", "apidocs/qiskit_machine_learning.utils", "apidocs/qiskit_machine_learning.utils.loss_functions", "getting_started", "index", "migration/01_migration_guide_0.5", "migration/index", "release_notes", "stubs/qiskit_machine_learning.QiskitMachineLearningError", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC", "stubs/qiskit_machine_learning.algorithms.QSVC", "stubs/qiskit_machine_learning.algorithms.QSVR", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin", "stubs/qiskit_machine_learning.algorithms.TrainableModel", "stubs/qiskit_machine_learning.algorithms.VQC", "stubs/qiskit_machine_learning.algorithms.VQR", "stubs/qiskit_machine_learning.circuit.library.QNNCircuit", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector", "stubs/qiskit_machine_learning.connectors.TorchConnector", "stubs/qiskit_machine_learning.datasets.ad_hoc_data", "stubs/qiskit_machine_learning.kernels.BaseKernel", "stubs/qiskit_machine_learning.kernels.FidelityQuantumKernel", "stubs/qiskit_machine_learning.kernels.FidelityStatevectorKernel", "stubs/qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel", "stubs/qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel", "stubs/qiskit_machine_learning.kernels.TrainableKernel", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.EstimatorQNN", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork", "stubs/qiskit_machine_learning.neural_networks.SamplerQNN", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss", "stubs/qiskit_machine_learning.utils.loss_functions.Loss", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss", "tutorials/01_neural_networks", "tutorials/02_neural_network_classifier_and_regressor", "tutorials/02a_training_a_quantum_model_on_a_real_dataset", "tutorials/03_quantum_kernel", "tutorials/04_torch_qgan", "tutorials/05_torch_connector", "tutorials/07_pegasos_qsvc", "tutorials/08_quantum_kernel_trainer", "tutorials/09_saving_and_loading_models", "tutorials/10_effective_dimension", "tutorials/11_quantum_convolutional_neural_networks", "tutorials/12_quantum_autoencoder", "tutorials/index"], "filenames": ["apidocs/qiskit_machine_learning.rst", "apidocs/qiskit_machine_learning.algorithms.rst", "apidocs/qiskit_machine_learning.circuit.library.rst", "apidocs/qiskit_machine_learning.connectors.rst", "apidocs/qiskit_machine_learning.datasets.rst", "apidocs/qiskit_machine_learning.kernels.rst", "apidocs/qiskit_machine_learning.kernels.algorithms.rst", "apidocs/qiskit_machine_learning.neural_networks.rst", "apidocs/qiskit_machine_learning.utils.rst", "apidocs/qiskit_machine_learning.utils.loss_functions.rst", "getting_started.rst", "index.rst", "migration/01_migration_guide_0.5.rst", "migration/index.rst", "release_notes.rst", "stubs/qiskit_machine_learning.QiskitMachineLearningError.rst", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.rst", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.rst", "stubs/qiskit_machine_learning.algorithms.QSVC.rst", "stubs/qiskit_machine_learning.algorithms.QSVR.rst", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.rst", "stubs/qiskit_machine_learning.algorithms.VQC.rst", "stubs/qiskit_machine_learning.algorithms.VQR.rst", "stubs/qiskit_machine_learning.circuit.library.QNNCircuit.rst", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.rst", "stubs/qiskit_machine_learning.datasets.ad_hoc_data.rst", "stubs/qiskit_machine_learning.kernels.BaseKernel.rst", "stubs/qiskit_machine_learning.kernels.FidelityQuantumKernel.rst", "stubs/qiskit_machine_learning.kernels.FidelityStatevectorKernel.rst", "stubs/qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.rst", "stubs/qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.rst", "stubs/qiskit_machine_learning.kernels.TrainableKernel.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.rst", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.rst", "stubs/qiskit_machine_learning.neural_networks.SamplerQNN.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss.rst", "tutorials/01_neural_networks.ipynb", "tutorials/02_neural_network_classifier_and_regressor.ipynb", "tutorials/02a_training_a_quantum_model_on_a_real_dataset.ipynb", "tutorials/03_quantum_kernel.ipynb", "tutorials/04_torch_qgan.ipynb", "tutorials/05_torch_connector.ipynb", "tutorials/07_pegasos_qsvc.ipynb", "tutorials/08_quantum_kernel_trainer.ipynb", "tutorials/09_saving_and_loading_models.ipynb", "tutorials/10_effective_dimension.ipynb", "tutorials/11_quantum_convolutional_neural_networks.ipynb", "tutorials/12_quantum_autoencoder.ipynb", "tutorials/index.rst"], "titles": ["Qiskit Machine Learning API Reference", "Quantum machine learning algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.algorithms</span></code>)", "Circuit library for machine learning applications (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.circuit.library</span></code>)", "Connectors (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.connectors</span></code>)", "Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.datasets</span></code>)", "Quantum kernels (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.kernels</span></code>)", "Quantum Kernel Algorithms", "Quantum neural networks (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.neural_networks</span></code>)", "Utility functions and classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils</span></code>)", "Loss Functions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils.loss_functions</span></code>)", "Ba\u015flarken", "Qiskit Makine \u00d6\u011frenmesi genel bak\u0131\u015f", "Qiskit Makine \u00d6\u011frenmesi v0.5 Ge\u00e7i\u015f K\u0131lavuzu", "Qiskit Makine \u00d6\u011frenmesi Ge\u00e7i\u015f K\u0131lavuzu", "Release Notes", "QiskitMachineLearningError", "BinaryObjectiveFunction", "MultiClassObjectiveFunction", "NeuralNetworkClassifier", "NeuralNetworkRegressor", "ObjectiveFunction", "OneHotObjectiveFunction", "PegasosQSVC", "QSVC", "QSVR", "SerializableModelMixin", "TrainableModel", "VQC", "VQR", "QNNCircuit", "RawFeatureVector", "TorchConnector", "ad_hoc_data", "BaseKernel", "FidelityQuantumKernel", "FidelityStatevectorKernel", "TrainableFidelityQuantumKernel", "TrainableFidelityStatevectorKernel", "TrainableKernel", "QuantumKernelTrainer", "QuantumKernelTrainerResult", "EffectiveDimension", "EstimatorQNN", "LocalEffectiveDimension", "NeuralNetwork", "SamplerQNN", "CrossEntropyLoss", "KernelLoss", "L1Loss", "L2Loss", "Loss", "SVCLoss", "Kuantum Sinir A\u011flar\u0131", "Sinirsel A\u011f S\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131 ve Regres\u00f6r\u00fc", "Training a Quantum Model on a Real Dataset", "Kuantum \u00c7ekirdek Makine \u00d6\u011frenimi", "PyTorch qGAN Uygulamas\u0131", "Torch Connector and Hybrid QNNs", "Pegasos Kuantum Destek Vekt\u00f6r S\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131", "Makine \u00d6\u011frenimi Uygulamalar\u0131 i\u00e7in Kuantum \u00c7ekirdek E\u011fitimi", "Saving, Loading Qiskit Machine Learning Models and Continuous Training", "Effective Dimension of Qiskit Neural Networks", "Kuantum Evri\u015fimsel Sinir A\u011f\u0131", "The Quantum Autoencoder", "Makine \u00d6\u011frenimi E\u011fitselleri"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 64], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 58, 59, 64], "is": [0, 5, 7, 10, 11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "an": [0, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62], "ml": [0, 26, 30, 54], "framework": [0, 12], "that": [0, 5, 7, 10, 11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "comes": 0, "with": [0, 7, 9, 11, 12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 56, 58, 59, 60, 61, 62, 63], "essential": 0, "tools": [0, 12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "lik": [0, 12, 21, 22, 23, 24, 26, 27, 42, 44, 45, 53, 54, 55, 56, 60, 62, 63], "quan": [0, 2, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 51, 53, 57, 58, 60, 61], "kernels": [0, 6, 11, 12, 22, 36, 37, 39, 58, 59], "and": [0, 1, 2, 5, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 61, 63], "neural": [0, 11, 12, 14, 16, 17, 18, 19, 20, 21, 26, 27, 28, 31, 41, 42, 43, 44, 45, 53, 54, 57, 60, 63], "networks": [0, 10, 11, 12, 14, 41, 43, 44, 54, 57], "thes": [0, 7, 12, 23, 24, 28, 29, 35, 40, 42, 45, 52, 53, 54, 55, 61, 62, 63], "are": [0, 5, 11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "the": [0, 1, 5, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 60, 62], "buildingi": [0, 2, 11, 62], "blocks": [0, 2, 11, 12], "of": [0, 2, 4, 5, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60], "can": [0, 5, 7, 10, 11, 12, 14, 18, 19, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 40, 42, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "be": [0, 5, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "usedi": [0, 2, 5, 7, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63], "for": [0, 1, 4, 5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62], "trainingi": [0, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 47, 51, 52, 53, 55, 58, 61, 63], "classification": [0, 1, 5, 11, 18, 19, 22, 23, 24, 26, 27, 28, 33, 51, 52, 54, 58, 59, 61], "regression": [0, 1, 5, 11, 12, 18, 19, 23, 24, 26, 27, 28, 33, 55], "other": [0, 3, 11, 14, 23, 24, 44, 52, 53, 54, 55, 56, 60, 61, 62], "models": [0, 11, 25, 52, 53, 54, 57, 58, 61], "package": [1, 10, 12, 57, 58], "contains": [1, 12, 27, 30, 52, 53, 54, 59, 62, 63], "core": [1, 11, 12], "such": [1, 5, 11, 12, 14, 23, 24, 33, 42, 44, 45, 52, 54, 55, 56, 57, 61, 62, 63], "as": [1, 2, 5, 7, 10, 11, 12, 14, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63], "da": [1, 5, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 51, 52, 53, 55, 58, 59, 60, 61, 63], "a": [2, 4, 5, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 60, 61], "algorithms": [2, 5, 11, 12, 14, 33, 36, 37, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "from": [3, 5, 10, 11, 12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 37, 39, 40, 41, 42, 43, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "qiskit": [3, 8, 9, 10, 14, 15, 31, 35, 37, 41, 42, 43, 45, 53, 54, 55, 56, 57, 58, 62, 63], "mach": [3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 33, 36, 37, 53, 56, 57, 58, 59, 61, 62, 63], "learningi": [3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 32, 33, 35, 36, 37, 53, 56, 57, 58, 59, 61, 62, 63], "to": [3, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "frameworks": [3, 11, 54], "set": [4, 5, 11, 12, 15, 18, 22, 23, 24, 29, 31, 34, 35, 36, 37, 40, 41, 42, 43, 45, 53, 54, 55, 56, 57, 58, 62, 63], "sample": [4, 12, 18, 19, 22, 23, 24, 26, 27, 28, 32, 41, 43, 46, 48, 49, 50, 54, 56, 60, 61, 63], "suitap": 4, "problems": [4, 11, 52, 53, 54, 55], "extendap": [5, 12], "classes": [5, 11, 12, 14, 16, 17, 18, 19, 21, 23, 26, 27, 28, 29, 45, 46, 52, 54, 55, 61], "evalua": [5, 11, 22, 23, 33, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61], "kernel": [5, 11, 22, 23, 24, 30, 33, 34, 35, 36, 37, 38, 39, 40, 47, 51, 58, 62], "matrices": [5, 11, 23, 24, 55, 62], "general": [5, 33, 55, 57, 61, 62], "task": [5, 7, 33, 36, 37, 55, 57, 59], "find": [5, 10, 33, 36, 37, 52, 54, 55], "study": [5, 33, 55, 61], "patterns": [5, 33, 52, 55, 62], "in": [5, 7, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "many": [5, 11, 33, 47, 54, 55, 61], "datapoints": [5, 33, 34, 35, 36, 37, 38, 55], "better": [5, 33, 54, 55, 58, 60], "understoodu": [5, 33, 55, 61], "higher": [5, 23, 24, 33, 54, 55, 56, 61], "dimensional": [5, 18, 19, 26, 27, 33, 53, 55, 56, 57, 62], "featur": [5, 11, 12, 14, 22, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "space": [5, 22, 32, 33, 55, 58, 59, 61, 62, 63], "through": [5, 33, 51, 52, 54, 57, 62, 63], "use": [5, 7, 10, 11, 12, 18, 19, 22, 23, 24, 26, 27, 28, 33, 42, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "function": [5, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 33, 34, 35, 39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 61, 62, 63], "k": [5, 32, 33, 34, 35, 55, 56, 59, 63], "x": [5, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 45, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63], "y": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 52, 53, 54, 55, 57, 61, 62], "langle": [5, 32, 33, 34, 35, 36, 37, 55], "f": [5, 33, 36, 37, 45, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63], "rangle": [5, 32, 33, 34, 35, 36, 37, 55, 56, 63], "her": [5, 10, 12, 33, 34, 35, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63], "n": [5, 12, 22, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 63], "inputs": [5, 12, 14, 29, 33, 44, 46, 48, 49, 50, 52, 53, 55, 59], "map": [5, 11, 12, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 42, 45, 52, 53, 54, 55, 56, 57, 61, 62, 63], "dimension": [5, 22, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 47, 51, 52, 55, 57, 62, 63], "m": [5, 22, 32, 33, 34, 35, 36, 37, 38, 47, 51, 55, 62, 63], "denotes": [5, 22, 33, 53, 55], "inner": [5, 33, 34, 35, 36, 37, 38, 55], "product": [5, 33, 34, 35, 36, 37, 38, 55, 62], "usually": [5, 33, 54, 55, 57, 63], "much": [5, 33, 62, 63], "larger": [5, 22, 27, 28, 33, 54, 58, 63], "than": [5, 22, 23, 27, 28, 29, 33, 53, 54, 55, 56, 57, 58, 60, 61], "algorith": [5, 7, 11, 12, 22, 27, 33, 34, 36, 43, 52, 54, 55, 56, 57, 58], "calculates": [5, 12, 33], "matrix": [5, 12, 18, 19, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 41, 43, 47, 51, 59, 61, 62], "give": [5, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 41, 43, 45, 51, 53, 55, 56, 57, 61, 62, 63], "all": [5, 11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63], "this": [5, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "then": [5, 10, 11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 45, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "classical": [5, 7, 11, 12, 33, 55, 57, 59, 61, 63], "support": [5, 11, 12, 22, 23, 24, 33, 54, 55], "vector": [5, 11, 18, 19, 22, 23, 24, 26, 30, 33, 36, 37, 38, 41, 43, 46, 52, 53, 54, 55, 62, 63], "spectral": [5, 33], "clusteringi": [5, 33, 54], "or": [5, 7, 10, 11, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "ridge": [5, 33, 55], "qiskit_machine_learningi": [6, 12, 29, 30, 42, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "parametrizedi": [7, 11, 27, 28, 34, 35, 42, 45, 52, 56, 59, 61, 62], "which": [7, 10, 11, 12, 22, 23, 30, 34, 36, 37, 39, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "may": [7, 10, 12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 46, 47, 54, 55, 56, 59, 60, 61, 62, 63], "definedi": [7, 24, 30, 34, 35, 36, 39, 45, 51, 52, 53, 55, 56, 57, 61, 62, 63], "artificial": [7, 53, 54, 62], "circuits": [7, 11, 12, 29, 40, 42, 45, 52, 54, 59, 62, 63], "furthermor": [7, 54], "respect": [7, 22, 29, 42, 44, 45, 52, 54, 56], "discriminativ": 7, "generativ": [7, 56], "example": [7, 11, 12, 22, 23, 24, 29, 39, 42, 45, 52, 53, 54, 55, 56, 57, 58, 62], "vqc": [7, 11, 12, 54, 60], "see": [7, 12, 18, 19, 23, 24, 30, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "also": [7, 11, 12, 18, 19, 23, 26, 27, 28, 31, 35, 42, 45, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "torchconnector": [7, 10, 11, 42, 45, 52, 56, 57, 60], "allows": [7, 11, 18, 19, 23, 24, 26, 27, 28, 52, 55, 57, 62], "code": [7, 12, 14, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "writ": 7, "pytorch": [7, 10, 11, 12, 31, 52], "collection": [8, 9, 55], "providedi": [8, 9, 11, 12, 23, 24, 29, 42, 45, 52, 55, 61], "by": [8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "commo": [9, 52, 54, 55, 61, 62, 63], "classifiers": [9, 52, 53, 54, 55, 60, 61, 62], "regressors": [9, 24, 52, 53], "depends": [10, 18, 19, 26, 27, 28, 48, 49, 50, 56, 62], "on": [10, 11, 12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 34, 36, 37, 39, 42, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63], "has": [10, 11, 12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 29, 36, 37, 42, 45, 52, 54, 55, 57, 58, 60, 62, 63], "its": [10, 14, 23, 24, 29, 35, 41, 43, 52, 54, 55, 59, 63], "own": [10, 12, 54, 57, 63], "gettingi": [10, 63], "startedi": [10, 54], "detailingi": 10, "installation": 10, "options": [10, 18, 19, 23, 24, 26, 56, 59], "supportedi": [10, 22, 27, 59], "environments": [10, 54], "platforms": 10, "you": [10, 12, 14, 22, 23, 24, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "shouldu": [10, 12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 31, 35, 36, 37, 52, 54, 56, 57, 58, 60, 61, 63], "refer": [10, 12, 18, 19, 26, 27, 28, 39, 52, 54, 56, 60], "first": [10, 11, 18, 19, 26, 27, 28, 32, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "information": [10, 12, 18, 19, 23, 24, 26, 27, 28, 39, 41, 43, 52, 54, 55, 59, 61, 62, 63], "followedi": [10, 62], "focuses": [10, 55, 61], "additional": [10, 14, 23, 24, 34, 36, 38, 54, 57, 62, 63], "specifi\u00e7": [10, 36, 37, 41, 43, 52, 61, 62], "mak": [10, 62], "\u00f6\u011frenmes": 10, "ba\u011f\u0131ml\u0131": 10, "kod": 10, "ve": [10, 62], "veya": 10, "destek": 10, "progra": [10, 51, 53], "lar": 10, "\u0131n": [10, 53], "varsay\u0131la": 10, "olarak": [10, 53, 62], "kurulmad\u0131k": 10, "ya": 10, "kurulamad\u0131k": 10, "opsiyonel": 10, "birtak": 10, "fonksiyon": [10, 62], "sahip": 10, "bun": 10, "spar": [10, 23, 24, 31, 42, 44, 45, 56, 57, 60, 61], "tir": 10, "dah": 10, "faz": 10, "bilgi": 10, "i\u00e7": [10, 53, 62], "bakabilir": 10, "yerel": 10, "ba\u015flatma": 10, "simplest": [10, 54], "way": [10, 12, 36, 37, 52, 53, 54, 57, 58, 60, 61, 63], "get": [10, 12, 23, 24, 54, 55, 57, 60, 61, 63], "follow": [10, 55, 57, 60], "start": [10, 11, 12, 18, 19, 26, 27, 28, 31, 52, 53, 54, 56, 57, 60, 61, 63], "locally": 10, "gui": [10, 23, 24, 59], "your": [10, 14, 57, 61, 63], "virtual": 10, "environment": 10, "wher": [10, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "installedi": 10, "install": 10, "follows": [10, 12, 52, 55, 56, 61, 63], "pip": 10, "though": [10, 14, 61, 63], "simply": [10, 62], "it": [10, 11, 12, 14, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 36, 42, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "into": [10, 11, 12, 30, 45, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "above": [10, 12, 52, 53, 54, 56, 57, 60, 62, 63], "will": [10, 12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "automatically": [10, 11, 12, 35, 37, 52, 54, 56], "compatip": [10, 12, 18, 19, 28, 58], "version": [10, 12, 14, 24, 37, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "if": [10, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "one": [10, 11, 12, 14, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 32, 35, 36, 37, 42, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "not": [10, 12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "already": [10, 14, 62, 63], "kaynak": [10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 62], "\u00f6\u011fren": [10, 62], "i": [10, 18, 19, 26, 32, 35, 39, 42, 44, 45, 46, 48, 49, 51, 52, 53, 56, 59, 62, 63], "y\u00fcklemek": 10, "python": [10, 12, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63], "paket": 10, "diz": 10, "pypi": 10, "depos": 10, "s\u00fcr": 10, "kullanmak": [10, 62], "yer": 10, "geli\u015ftirilmek": 10, "ola": [10, 62], "en": [10, 63], "son": 10, "g\u00fcncellene": 10, "eri\u015fme": 10, "sa\u011f": 10, "bu": [10, 12, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "siz": [10, 12, 22, 35, 37, 41, 43, 54, 55, 57, 58, 59, 61, 63], "kodu": [10, 12], "s\u00fcr\u00fcm": [10, 23, 24], "verimli": 10, "bir": [10, 53, 62], "\u015fekil": 10, "incele": 10, "geni\u015fletme": 10, "imka": 10, "verecek": 10, "e": [10, 11, 12, 18, 19, 23, 24, 26, 27, 28, 34, 35, 36, 42, 44, 45, 48, 49, 52, 53, 54, 56, 61, 62, 63], "olduk": 10, "de\u011fi\u015fiklik": 10, "ye": 10, "de\u011fi\u015ftiril": 10, "\u00f6zellik": 10, "gerektirebilecek": 10, "\u00f6": 10, "y\u00fckle": 10, "talimat": 10, "bura": [10, 63], "izlemel": 10, "installingi": 10, "source": [10, 11, 12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "kurduk": 10, "geli\u015ftirme": 10, "ortam": 10, "kullanarak": [10, 62], "\u00f6\u011frenim": 10, "kurma": 10, "depo": 10, "klonlay": 10, "git": 10, "clone": 10, "https": [10, 51, 57, 58, 62, 63], "githup": [10, 14], "com": [10, 62], "community": [10, 14], "klonlamak": 10, "adl\u0131": 10, "klas\u00f6r": 10, "olu\u015fturur": 10, "cd": 10, "e\u011fer": 10, "test": [10, 18, 19, 22, 23, 24, 26, 27, 28, 54, 55, 58, 60, 61, 62, 63], "tiftikle": 10, "kontrol": 10, "yapmak": 10, "istiyor": 10, "geli\u015ftiri\u00e7": 10, "gereksinim": 10, "y\u00fckley": 10, "r": [10, 18, 19, 22, 23, 24, 26, 27, 28, 53, 54, 55, 57, 58, 59, 60, 62, 63], "requirements": 10, "dev": 10, "txt": [10, 12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "d\u00fczenlenebilir": 10, "modu": 10, "yani": 10, "proje": 10, "yap\u0131la": 10, "uygulanmas": 10, "yeni": 10, "y\u00fcklenmes": 10, "gerekmedik": 10, "anlam": 10, "geliyor": 10, "p": [10, 30, 54, 62, 63], "\u015fun": 10, "yapabilir": 10, "either": [10, 12, 18, 19, 26, 29, 52, 60, 62, 63], "usingi": [10, 11, 14, 18, 19, 23, 26, 27, 28, 35, 36, 37, 42, 45, 46, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63], "command\u0131": 10, "torch": [10, 31, 56, 60], "when": [10, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 39, 42, 45, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "facilitates": 10, "computedi": [10, 11, 18, 19, 22, 23, 26, 27, 28, 30, 41, 42, 43, 44, 45, 46, 48, 49, 50, 56, 61], "beingi": [10, 12, 14, 18, 19, 26, 27, 28, 57, 61, 62, 63], "enap": [10, 52, 56], "usage": [10, 12], "arrays": [10, 23, 24, 35, 60], "tensors": [10, 57], "div": 10, "tutorials": [10, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "out": [10, 12, 27, 28, 52, 54, 57, 63], "about": [10, 52, 59, 61], "introduces": [11, 12, 23, 24, 56, 57], "fundamental": [11, 12, 55], "computational": [11, 12, 52, 62], "different": [11, 23, 45, 52, 53, 54, 55, 57, 61, 62, 63], "applications": [11, 52], "includingi": [11, 18, 19, 22, 23, 24, 25, 26, 27, 28, 52, 63], "hand": [11, 55, 61, 62], "design": [11, 12, 63], "very": [11, 12, 23, 54, 55, 60], "easy": 11, "users": [11, 12, 36, 37], "rapidly": [11, 59], "prototype": 11, "model": [11, 18, 19, 22, 23, 24, 25, 26, 27, 28, 31, 35, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 58, 61, 62, 63], "without": [11, 54, 57], "deep": [11, 23, 24, 52, 54, 56, 63], "computingi": [11, 12, 20, 47, 48, 49, 50, 52], "knowledge": 11, "flexip": [11, 12, 54], "easily": [11, 54, 55, 62], "extendi": [11, 12, 52], "cuttingi": 11, "edge": [11, 55], "research": 11, "provides": [11, 12, 20, 23, 24, 25, 36, 39, 42, 45, 51, 52, 62], "fidelityquantumkernel": [11, 12, 22, 23, 24, 36, 55, 58], "class": [11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61], "makes": [11, 12, 57, 62], "basestatefidelity": [11, 34, 36], "introducedi": [11, 12, 52, 61], "directly": [11, 12, 42, 44, 45, 52, 55, 56, 57, 59, 61], "compute": [11, 12, 23, 34, 35, 36, 37, 41, 42, 43, 44, 45, 56, 57, 63], "datasets": [11, 12, 23, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "passedi": [11, 12, 22, 23, 24, 27, 28, 29, 34, 39, 41, 42, 43, 45, 52, 53, 59], "classifier": [11, 18, 22, 23, 24, 27, 53, 54, 55, 58, 60, 61, 62], "qsvc": [11, 12, 58, 59], "regressor": [11, 19, 24, 28, 53, 60], "qsvr": [11, 12], "quickly": [11, 12], "solvingi": [11, 51], "existingi": [11, 12, 23, 24], "basedi": [11, 12, 30, 34, 36, 39, 42, 45, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63], "establishedi": 11, "defines": [11, 12, 26, 34, 36], "generi\u00e7": [11, 24, 52, 56], "interfa\u00e7": [11, 12, 18, 19, 26, 33, 34, 35, 52], "implementedi": [11, 30, 44], "two": [11, 12, 14, 18, 19, 22, 26, 27, 28, 29, 33, 34, 35, 36, 37, 42, 45, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "implementations": [11, 12, 52], "readily": 11, "estimatorqn": [11, 28, 61, 62], "samplerqn": [11, 27, 56, 63], "leverages": [11, 12, 55], "baseestimator": [11, 12, 28, 42, 52], "primitiv": [11, 12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 34, 36, 42, 45, 52, 53, 54, 55, 60], "comp": [11, 12, 40, 61, 63], "mechanical": [11, 52], "observables": [11, 12, 42, 62], "constructedi": [11, 42, 45, 53, 56, 57], "s": [11, 12, 18, 19, 23, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "circuit": [11, 12, 14, 27, 28, 29, 30, 33, 34, 35, 36, 37, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "library": [11, 12, 14, 29, 30, 42, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "qnn": [11, 14, 27, 28, 29, 41, 42, 43, 45, 52, 53, 56, 60, 62, 63], "output": [11, 16, 17, 18, 19, 21, 26, 27, 30, 31, 41, 42, 43, 44, 45, 48, 49, 50, 52, 53, 54, 56, 57, 59, 61, 62, 63], "expectedi": [11, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 46, 48, 49, 50, 52, 53, 54, 58], "value": [11, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 34, 36, 40, 41, 42, 43, 45, 47, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63], "observap": [11, 12, 28, 42, 52, 54, 62], "another": [11, 45, 54, 55, 57, 58, 60, 62, 63], "basesamp": [11, 12, 27, 45, 52], "network": [11, 12, 16, 17, 18, 19, 20, 21, 26, 27, 28, 31, 41, 42, 43, 44, 45, 52, 53, 54, 57, 60, 61, 62, 63], "translates": [11, 45, 55], "quasi": [11, 12, 45, 53, 56], "probabilities": [11, 12, 18, 23, 45, 52, 56, 57, 63], "bitstrings": [11, 12, 27, 53, 61], "estimatedi": [11, 22, 45, 58], "desiredi": [11, 57, 59], "translation": 11, "step": [11, 12, 45, 54, 55, 56, 58, 59, 60, 61, 62, 63], "interpret": [11, 12, 18, 45, 53, 57, 61, 63], "bitstringi": [11, 45, 52, 53], "particu": [11, 45, 57, 60, 61, 62, 63], "context": [11, 14, 45, 53, 55], "g": [11, 18, 19, 23, 24, 26, 27, 28, 34, 36, 45, 53, 54, 56, 57, 60], "translatingi": 11, "inclu": [11, 57, 63], "functionality": 11, "them": [11, 12, 52, 53, 54, 55, 56, 57, 60, 61], "input": [11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 39, 41, 42, 43, 44, 45, 55, 56, 57, 59, 60, 61, 62, 63], "well": [11, 12, 14, 18, 19, 23, 24, 26, 27, 28, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "correspondingi": [11, 12, 18, 19, 26, 27, 29, 34, 36, 45, 52, 53, 56, 57, 60, 61, 62], "gradients": [11, 12, 16, 17, 20, 21, 30, 41, 42, 43, 44, 45, 56, 57, 61], "important": [11, 52, 60], "efficient": [11, 56, 63], "train": [11, 12, 22, 36, 38, 39, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "variety": 11, "neuralnetworkclassifier": [11, 12, 27, 53, 61, 62], "neuralnetworkregressor": [11, 12, 28, 53], "both": [11, 12, 29, 54, 56, 61, 62, 63], "take": [11, 12, 35, 37, 40, 42, 45, 47, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "allow": [11, 55], "convenie": [11, 12, 54, 55, 62], "variational": [11, 12, 27, 28, 52, 53, 54, 56, 60], "vqr": [11, 12], "just": [11, 53, 55, 57], "ansatz": [11, 12, 27, 28, 29, 42, 45, 52, 53, 54, 57, 60, 61, 62], "construct": [11, 12, 32, 33, 34, 35, 36, 37, 38, 52, 53, 54, 55, 56, 57, 60, 61], "underlyingi": [11, 18, 19, 26, 27, 28, 31, 39, 42, 45, 53, 56, 60], "addition": [11, 12, 32, 35, 52, 63], "integra": [11, 52], "our": [11, 12, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63], "ope": [11, 52, 62, 63], "thanks": 11, "gradient": [11, 12, 16, 17, 20, 21, 22, 30, 31, 39, 41, 42, 43, 45, 46, 48, 49, 50, 52, 54, 57, 58], "includes": [11, 22, 63], "automati\u00e7": [11, 57], "differentiation": [11, 57], "overall": [11, 12, 14, 54, 62, 63], "duringi": [11, 18, 19, 26, 27, 28, 31, 47, 52, 56, 57, 58, 59, 61, 63], "backpropagation": [11, 52, 57], "account": [11, 47], "too": [11, 53, 55, 61], "connectors": [11, 56, 57], "packages": [11, 62], "future": [11, 12, 62], "ba\u015f": [11, 62], "getting_startedi": 11, "html": [11, 57], "_": [11, 54, 56, 60, 63], "ge\u00e7i\u015f": 11, "k\u0131lavuz": 11, "e\u011fitim": 11, "e\u011fit": [12, 53, 62], "4": [12, 29, 30, 32, 42, 45, 53, 58, 59], "ten": 12, "ge\u00e7irme": 12, "s\u00fcre\u00e7": [12, 62], "rehberlik": 12, "edecek": 12, "main": [12, 55, 61], "focus": 12, "relea": 12, "migration": 12, "base": [12, 26, 47, 50, 52], "extendedi": 12, "i\u0307\u00e7erik": 12, "capability": [12, 62], "computers": 12, "sets": [12, 41, 43, 52, 58, 61, 62], "apart": [12, 56], "their": [12, 18, 19, 23, 24, 26, 27, 28, 42, 52, 54], "ability": [12, 36, 38, 60, 61, 62, 63], "genera": [12, 53, 56, 57, 58, 60], "non": [12, 18, 19, 26, 55, 61], "probability": [12, 18, 19, 23, 26, 35, 37, 52, 53, 56, 57, 63], "distributions": [12, 53, 55], "at": [12, 23, 27, 28, 29, 31, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "outputs": [12, 41, 42, 43, 52, 61], "nativ": 12, "operations": [12, 54, 62], "do": [12, 14, 42, 45, 46, 48, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63], "distribution": [12, 18, 19, 26, 35, 37, 41, 43, 54, 55, 56, 61], "estima": 12, "quantities": [12, 47], "consequently": 12, "samplingi": [12, 41, 43, 56], "estimatingi": 12, "form": [12, 23, 24, 54, 55, 62, 63], "development": [12, 14, 57], "thus": [12, 22, 30, 43, 54, 56, 58, 61, 62, 63], "was": [12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 54, 55, 59, 60, 61, 62], "announcedi": 12, "basi\u00e7": [12, 18, 19, 52, 59], "wer": [12, 14, 55, 57, 60, 63], "sampler": [12, 27, 34, 36, 45, 52, 53, 54, 55, 56, 60], "estimator": [12, 22, 23, 24, 28, 42, 52], "respectively": [12, 14, 42, 44, 45, 52, 54, 62, 63], "implement": [12, 56, 62, 63], "estimates": 12, "expectation": [12, 42, 52, 62], "values": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 34, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 63], "terra": 12, "interfaces": [12, 58], "refere": [12, 18, 19, 26, 27, 28, 34, 35, 36, 42, 45, 52, 54, 55, 56, 61, 63], "statevector": [12, 35, 37, 52, 54, 56, 63], "does": [12, 30, 52, 54, 57, 60, 63], "requir": [12, 22, 23, 52, 63], "backendi": 12, "simulator": [12, 52, 54, 57, 60], "relies": 12, "quantum_info": [12, 35, 37, 52, 62, 63], "provider": 12, "backends": 12, "requires": [12, 32, 56, 57, 61], "insta": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 36, 39, 42, 45, 52, 53, 54, 55, 59, 60, 61], "more": [12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 29, 39, 45, 52, 53, 54, 56, 57, 59, 60, 61, 63], "foundu": [12, 18, 27, 34, 36, 51, 54, 55, 59, 61, 62], "documentation": [12, 18, 19, 26, 27, 28, 52, 57, 59], "worth": 12, "mentioningi": 12, "aer": [12, 52], "they": [12, 23, 27, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "same": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 39, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "runt": [12, 54], "ibm": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "devices": [12, 63], "focusedi": 12, "cloudu": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 52, 57, 60, 62], "actual": [12, 52, 56, 62], "hardware": [12, 52, 56, 57, 60], "alongu": [12, 29, 40, 55, 62], "some": [12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 52, 54, 56, 57, 58, 60, 61, 62, 63], "highly": 12, "useful": [12, 61], "qml": [12, 52], "functions": [12, 39, 47, 52, 57], "calculate": [12, 52, 55, 57, 61, 63], "each": [12, 18, 19, 22, 23, 24, 26, 27, 28, 41, 43, 46, 48, 49, 50, 52, 53, 54, 58, 59, 60, 61, 62, 63], "ther": [12, 18, 19, 22, 26, 33, 34, 35, 36, 37, 53, 54, 55, 58, 61, 63], "fidelity": [12, 34, 35, 36, 37, 55, 58, 63], "closeness": 12, "pairs": [12, 59, 62], "states": [12, 34, 35, 36, 37, 54, 55, 56, 62, 63], "currently": [12, 63], "only": [12, 18, 19, 23, 24, 26, 29, 30, 31, 32, 35, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "availap": [12, 39, 52, 54, 57, 58, 60, 61, 62, 63], "uncompute": [12, 35], "methodu": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61], "similar": [12, 52, 53, 54, 62], "share": [12, 61], "signatures": [12, 22], "so": [12, 23, 24, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "calledi": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 34, 35, 37, 53, 54, 56, 60, 61, 63], "high": [12, 54, 55, 59, 63], "level": [12, 54, 61], "despi": [12, 53, 57], "consistedi": 12, "single": [12, 18, 27, 28, 41, 42, 43, 44, 45, 54, 57, 61], "quantumkernel": [12, 39], "did": 12, "everythingi": 12, "olu\u015fturula": 12, "devre": 12, "executedi": 12, "evaluatedi": [12, 31, 34, 36, 56, 59], "overlap": [12, 34, 35, 55], "between": [12, 29, 34, 36, 52, 53, 54, 55, 56, 59, 61, 63], "parameters": [12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63], "kept": 12, "track": [12, 18, 19, 26, 27, 28], "assignedi": [12, 23, 24, 36, 37, 38], "beca": 12, "sophisticatedi": [12, 54], "inflexip": 12, "addingi": 12, "couldu": [12, 53, 54, 62], "tricky": 12, "address": 12, "issues": 12, "goals": 12, "migra": 12, "leverag\u0131": [12, 55, 57, 61], "now": [12, 14, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "plug": [12, 55], "calculations": [12, 61], "extract": [12, 55, 63], "trainability": [12, 61], "dedicatedi": 12, "introdu\u00e7": [12, 34, 36, 54, 58, 61, 63], "shown": [12, 41, 43, 52, 55, 58, 60, 61, 63], "next": [12, 18, 19, 26, 27, 28, 53, 54, 55, 56, 59, 60, 61, 62, 63], "diagra": [12, 54], "expos": 12, "except": [12, 24, 54], "quantum_insta": 12, "parameter": [12, 14, 22, 23, 24, 29, 30, 36, 37, 38, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "have": [12, 14, 22, 23, 24, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "direct": [12, 54, 58], "replacement": [12, 58], "instead\u0131": [12, 23, 24, 42, 45, 53, 55, 61, 62], "must": [12, 22, 29, 31, 32, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "handlingi": [12, 44], "selection": [12, 61], "previously": [12, 14, 52, 55, 57, 60, 61, 62], "done": [12, 62, 63], "care": 12, "via": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 35, 38, 39, 42, 45], "hierarchy": 12, "abstract": [12, 20, 26, 33, 38, 44, 46, 47, 48, 49, 50, 51, 52], "basekernel": [12, 22, 23, 24, 34, 35, 38], "concre": 12, "inherit": [12, 35, 37, 52], "addedi": [12, 35], "differe": [12, 55, 56, 60, 61], "takes": [12, 42, 45, 52, 54, 55, 56, 57, 60], "overlaps": 12, "trainablekernel": [12, 36, 37, 39, 47, 51, 59], "generaliz": [12, 61], "trainap": [12, 29, 36, 37, 39, 42, 44, 45, 47, 51, 52, 54, 56, 59], "trainablefidelityquantumkernel": [12, 39, 59], "requiredi": [12, 23, 27, 28, 29, 33, 34, 35, 36, 37, 38, 52, 54, 55, 56, 60, 61, 62, 63], "trainer": [12, 39, 40], "quantumkerneltrainer": [12, 59], "accepts": [12, 52], "extends": [12, 18, 19, 23, 24], "pendingi": 12, "deprecatedi": [12, 14], "subsequently": 12, "removedi": [12, 14], "after": [12, 29, 35, 54, 57, 60, 61, 62, 63], "updatedi": [12, 23, 24, 40, 42, 45, 63], "work": [12, 22, 31, 54, 60, 61], "qsvm": 12, "trainedi": [12, 18, 19, 26, 27, 28, 39, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63], "fixingi": [12, 56, 63], "randomization": 12, "utils": [12, 23, 24, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "import": [12, 29, 30, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "algorithm_globals": [12, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "random_seedi": [12, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "123456": [12, 56], "simple": [12, 23, 24, 52, 53, 54, 60, 62], "scikit": [12, 18, 19, 23, 24, 26, 51, 53, 54, 55, 58, 60, 61], "learn": [12, 18, 19, 23, 24, 26, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62], "sklearn": [12, 22, 23, 24, 53, 54, 55, 58, 59, 60, 61, 62], "make_blobs": [12, 58], "features": [12, 14, 22, 23, 24, 33, 34, 35, 36, 37, 38, 42, 44, 45, 52, 53, 55, 58, 60, 62, 63], "labels": [12, 22, 23, 24, 27, 32, 39, 47, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62], "n_samples": [12, 22, 23, 24, 53, 57, 58, 61], "20": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "centers": [12, 58], "2": [12, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 42, 45, 49, 53, 58, 59], "center_box": 12, "cluster_stdi": 12, "random_state": [12, 24, 53, 54, 58, 60, 62], "we": [12, 14, 32, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "creatingi": [12, 56, 61, 62], "quantuminsta": 12, "case": [12, 14, 18, 19, 22, 26, 27, 28, 29, 42, 44, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63], "wrap": [12, 56], "basicaer": [12, 58], "sv_qi": 12, "get_backendi": 12, "statevector_simulator": 12, "seed_simulator": 12, "seed_transpi": 12, "zzfeaturemap": [12, 27, 28, 29, 32, 33, 34, 35, 36, 37, 42, 45, 53, 54, 55, 57, 59, 62], "feature_map": [12, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 42, 45, 53, 54, 55, 57, 58, 59, 61, 62], "previous_kernel": 12, "finally": [12, 58, 60, 61], "fit": [12, 18, 19, 22, 23, 24, 26, 27, 28, 39, 53, 54, 55, 56, 58, 60, 61, 62, 63], "svm": [12, 22, 23, 24, 51, 54, 55, 58, 59], "quantum_kernel": [12, 22, 23, 24, 39, 40, 47, 51, 55, 58, 59], "score": [12, 18, 19, 22, 23, 24, 26, 27, 28, 53, 54, 55, 58, 60, 61, 62], "95": 12, "optional": [12, 27, 28, 29, 42, 45, 52, 57, 61], "none": [12, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 52, 53, 54, 57, 59, 60], "but": [12, 18, 19, 26, 27, 28, 42, 45, 52, 53, 54, 55, 56, 57, 60, 61], "manually": [12, 54, 56, 60, 61], "illustrativ": [12, 54], "purposes": [12, 54, 55, 56, 58, 60, 61], "pass": [12, 23, 24, 31, 41, 42, 43, 44, 45, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "qiskitruntimeservi\u00e7": 12, "services": [12, 54], "state_fidelities": [12, 55], "computeuncompu": [12, 34, 36, 55], "new_kernel": 12, "befor": [12, 18, 22, 27, 31, 41, 43, 52, 54, 55, 61, 62, 63], "changes": [12, 14, 29, 61], "dramati\u00e7": 12, "detailedi": [12, 57], "below": [12, 23, 24, 55, 62, 63], "replacements": 12, "pre": [12, 22, 52, 57, 58, 62, 63], "twolayerqn": 12, "exposes": [12, 52], "few": [12, 54, 63], "differences": 12, "keeps": 12, "name": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 53, 57, 60, 62], "no": [12, 14, 22, 23, 24, 35, 39, 45, 52, 53, 54, 58], "longer": [12, 14, 35], "opflow": 12, "expects": [12, 53], "optionally": 12, "custo": [12, 14, 45, 54, 55, 57, 59, 61], "option": [12, 18, 52, 54, 55, 56], "been": [12, 14, 18, 19, 22, 26, 27, 28, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "t": [12, 14, 22, 23, 24, 27, 28, 30, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "exposedi": [12, 54], "might": [12, 14, 55, 61], "correspondu": [12, 23, 36, 37, 42, 56, 62], "lower": [12, 55, 59, 61], "accept": 12, "changedi": [12, 57], "ll": [12, 52, 54, 57, 60, 62, 63], "show": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "how": [12, 18, 19, 23, 24, 26, 27, 28, 34, 36, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "re": [12, 57, 60, 63], "generatedi": [12, 47, 53, 54, 55, 56, 57, 60], "still": [12, 53, 54, 62], "quantumcircuit": [12, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 42, 45, 52, 53, 56, 57, 59, 61, 62, 63], "realamplitudes": [12, 27, 28, 29, 42, 45, 53, 54, 57, 60, 61, 63], "num_inputs": [12, 42, 44, 45, 52, 53, 57, 61], "reps": [12, 53, 54, 55, 56, 57, 58, 61, 63], "compose": [12, 42, 45, 56, 57, 59, 62, 63], "inpla\u00e7": [12, 42, 45, 56, 57, 62, 63], "true": [12, 18, 19, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 42, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "needi": [12, 23, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "def": [12, 45, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63], "usual": [12, 54, 55, 56, 61], "parity": [12, 45, 52, 53, 57, 61], "maps": [12, 14, 45, 52, 53, 54, 55, 61, 62], "return": [12, 15, 18, 19, 22, 23, 24, 26, 27, 28, 30, 31, 32, 39, 40, 45, 53, 54, 56, 57, 59, 60, 61, 62, 63], "b": [12, 52, 53, 54, 55, 58, 59, 60, 61, 63], "format": [12, 32, 52, 53, 57, 61], "count": [12, 45, 52, 53, 57, 61, 63], "fix": [12, 36, 37, 38, 54, 56, 60, 61], "initial": [12, 18, 19, 26, 27, 28, 31, 39, 54, 55, 57, 60, 63], "point": [12, 18, 19, 26, 27, 28, 39, 40, 52, 54, 58, 59, 60, 62, 63], "results": [12, 23, 39, 42, 45, 52, 53, 54, 55, 57, 59, 62, 63], "initial_point": [12, 18, 19, 26, 27, 28, 39, 54, 59, 60, 61, 62, 63], "rando": [12, 22, 31, 32, 52, 53, 54, 57, 60, 61, 62, 63], "num_parameters": [12, 56, 60, 63], "createdi": [12, 23, 29, 34, 36, 52, 54, 55, 56, 58, 60, 61, 62], "neural_networks": [12, 42, 44, 45, 52, 53, 56, 57, 61, 62, 63], "circuit_qn": 12, "input_params": [12, 39, 42, 45, 52, 56, 57, 62, 63], "weight_params": [12, 42, 45, 52, 56, 57, 62, 63], "output_shape": [12, 18, 19, 26, 42, 44, 45, 52, 53, 57, 61, 63], "aimingi": 12, "goodu": [12, 36, 37, 53, 54, 57, 61], "number": [12, 18, 22, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "iterations": [12, 53, 54, 57, 59, 60, 62, 63], "small": [12, 23, 54, 55, 56, 61], "redu\u00e7": [12, 53, 54, 55, 62, 63], "execution": [12, 56], "optimizers": [12, 30, 39, 52, 53, 54, 59, 60, 61, 62, 63], "cobyla": [12, 53, 54, 60, 61, 62, 63], "neural_network": [12, 16, 17, 18, 19, 20, 21, 26, 27, 28, 31, 42, 44, 45, 53, 60, 61], "loss": [12, 16, 17, 18, 19, 20, 21, 26, 27, 28, 39, 46, 47, 48, 49, 51, 52, 53, 59, 62, 63], "cross_entropy": [12, 18, 19, 26, 27, 53], "one_hot": [12, 18, 32, 55, 59], "optimizer": [12, 18, 19, 26, 27, 28, 39, 40, 53, 54, 56, 60, 61, 62, 63], "maxiter": [12, 53, 54, 59, 60, 61, 62, 63], "40": [12, 52, 54, 57, 60, 61, 63], "6": [12, 14, 29, 42, 45, 53, 54, 55, 57, 58, 59, 60, 61], "sampler_qn": [12, 52, 53], "constructingi": [12, 29, 52], "dependingi": 12, "what": [12, 52, 54, 55, 56, 61, 62], "constructs": [12, 27, 54], "generatingi": [12, 56, 62], "numpy": [12, 18, 19, 26, 27, 28, 30, 36, 37, 38, 39, 41, 42, 43, 44, 45, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "np": [12, 18, 19, 23, 24, 26, 27, 28, 30, 31, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "num_samples": [12, 53, 57, 60, 61], "eps": [12, 53, 57], "lb": [12, 53, 57], "ub": [12, 53, 57], "pi": [12, 32, 53, 55, 57, 58, 59, 62], "rand": 12, "sin": [12, 53, 57], "ry": [12, 39, 52, 53, 57, 59, 62], "weight": [12, 23, 31, 41, 42, 43, 44, 45, 52, 61], "paulisumop": 12, "statefn": 12, "from_list": [12, 52, 62], "z": [12, 28, 42, 52, 62], "operator": [12, 62], "is_measurement": 12, "opflow_qn": 12, "due": [12, 22, 58, 62, 63], "nature": [12, 22, 32, 35, 58, 61], "converges": [12, 59, 62], "l_bfgs_b": [12, 53, 54], "9681198723451012": 12, "creates": [12, 56], "otimes": [12, 28, 32, 42, 52, 62, 63], "qubit": [12, 27, 28, 30, 39, 42, 45, 55, 56, 59, 62, 63], "specifiedi": [12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 39, 51, 54, 60], "estimator_qn": [12, 52, 53, 61], "default": [12, 14, 18, 19, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 52, 53, 54, 55, 57, 58, 59, 60, 61], "components": [12, 54, 55], "mentionedi": [12, 53, 54, 60], "explicitly": [12, 42, 45, 52, 53, 55, 57, 59], "learners": 12, "fully": [12, 32, 34, 36, 62], "discriminativenetwork": 12, "generativenetwork": 12, "numpydiscriminator": 12, "pytorchdiscriminator": 12, "quantumgenerator": 12, "qgan": 12, "plea": [12, 18, 19, 23, 24, 26, 27, 28, 52, 53, 54, 56, 57, 58, 60], "tutorial": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "buildi": [12, 56, 62, 63], "client": 12, "programs": 12, "embedi": [12, 57], "algorithmi\u00e7": [12, 52], "facilita": [12, 56], "scripts": 12, "runtimes": 12, "jupyter": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "qiskit_version_tap": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "qiskit_copyright": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "informationqiskit": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "softwareversionqiskit": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "terra0": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "25": [12, 52, 53, 54, 55, 57, 59, 60, 62], "0qiskit": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61], "aer0": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "13": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "learning0": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "0system": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "informationpytho": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "version3": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "8": [12, 42, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "13python": [12, 56, 59, 60, 63], "compilerclang\u0131": [12, 52, 53, 56, 59, 60, 61, 63], "12": [12, 32, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "builddefault": [12, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63], "oct": [12, 54, 56, 58, 59, 60, 63], "19": [12, 53, 54, 55, 56, 57, 59, 60, 61, 63], "2022": [12, 52, 54, 56, 57, 58, 59, 60, 63], "17": [12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63], "54": [12, 54, 56, 59, 60, 63], "22osdarwincpus10memory": [12, 56, 59, 60, 63], "gb": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "64": [12, 52, 54, 56, 57, 58, 59, 60, 63], "0thu": [12, 63], "sep": [12, 62], "14": [12, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63], "57": [12, 52, 57], "31": [12, 52, 53, 54, 57, 58], "2023": [12, 52, 53, 55, 56, 59, 60, 61, 62], "ist": [12, 59, 60], "part": [12, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "copy": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "copyright": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "2017": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "licensedi": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "under": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "apache": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "lice": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "mayobtain": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "fil": [12, 18, 19, 22, 23, 24, 25, 26, 27, 28, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "root": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "directory": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "tree": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "http": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "www": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "org": [12, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "licenses": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "any": [12, 14, 18, 19, 22, 23, 24, 25, 26, 27, 28, 40, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "modifications": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "derivativ": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "works": [12, 23, 24, 32, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "retain": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "thiscopyright": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "noti\u00e7": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "modifiedi": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "files": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "carry": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "indicatingthat": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "alteredi": [12, 39, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "originals": [12, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "issue": 14, "bindingi": 14, "order": [14, 23, 56, 57, 61, 62, 63], "weights": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 41, 42, 43, 44, 45, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63], "end": [14, 32, 54, 56], "up": [14, 18, 19, 26, 45, 53, 54, 55, 57, 60, 63], "incorrect": 14, "params": [14, 23, 24, 47, 51, 52, 62], "boundu": [14, 30, 36, 37, 42, 51, 59], "wouldu": [14, 18, 24, 52, 62], "right": [14, 32, 48, 52, 55, 56], "ansatzes": [14, 54], "most": [14, 18, 27, 54, 57, 61], "ofte": [14, 42, 45, 54], "names": [14, 23, 24], "led": 14, "however": [14, 22, 52, 53, 57, 58, 59, 62, 63], "etc": [14, 17, 52], "always": [14, 24, 27, 54], "unexpectedi": 14, "behavior": [14, 39], "sequences": 14, "suppliedi": [14, 29], "matters": 14, "migratedi": 14, "organization": 14, "further": [14, 23, 51, 55, 56, 60, 62, 63], "emphasiz": 14, "drive": 14, "project": [14, 33, 34, 35, 36, 37, 38], "reflect": [14, 33, 34, 35, 36, 37], "change": [14, 23, 24, 45, 52, 54, 62], "becau": [14, 24, 42, 45, 52, 54, 55, 56, 57, 61, 62, 63], "onboardingi": 14, "owners": 14, "maintainers": 14, "decidedi": [14, 52, 54], "remov": 14, "regardless": 14, "deprecation": 14, "ensures": [14, 29], "new": [14, 29, 45, 52, 54, 55, 56, 57, 59, 60, 61, 63], "members": 14, "team": 14, "large": [14, 22, 56, 58, 60, 61, 62, 63], "bulk": 14, "legacy": 14, "maintain": 14, "mean": [14, 18, 19, 22, 23, 24, 26, 27, 28, 35, 37, 53, 54, 56, 57], "things": [14, 52], "user": [14, 18, 19, 23, 24, 26, 27, 28, 39, 47, 51, 60, 61], "nothingi": 14, "rely": [14, 52, 54, 63], "otherwis": [14, 18, 19, 23, 24, 26, 29, 31, 35, 37, 60], "make": [14, 53, 54, 55, 56, 57, 63], "sure": [14, 57], "workflow": [14, 55, 57], "doesn": 14, "cannot": [14, 29, 52, 62, 63], "want": [14, 52, 53, 54, 56, 60, 61], "continue": [14, 60, 62, 63], "pin": 14, "aroundu": [14, 52, 54], "application": [14, 52, 55, 56, 57, 59], "projects": 14, "read\u0131": [14, 23, 24, 42, 45], "blog": 14, "post": [14, 45, 52], "exception": [15, 27], "messag\u0131": 15, "errors": 15, "returnedi": [15, 23, 24, 31, 39, 45, 54], "module": [15, 31, 52, 56, 57], "error": [15, 22, 23, 24, 28, 31, 48, 49, 51, 53, 57, 61], "add_note": 15, "note": [15, 23, 24, 31, 42, 45, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63], "add": [15, 36, 37, 53, 54, 55, 56, 58, 62], "with_traceback": 15, "tb": 15, "self": [15, 18, 19, 22, 23, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 56, 57, 59], "__traceback__": 15, "bases": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "objectivefunction": [16, 17, 21], "objectiv": [16, 17, 18, 19, 20, 21, 26, 27, 28, 53, 54, 57, 60, 61, 62, 63], "binary": [16, 18, 19, 26, 51, 52, 53, 56, 57, 59, 61], "representation": [16, 17, 18, 19, 21, 26, 27, 28, 58, 60, 63], "parametre": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "ndarray": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "target": [16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 39, 46, 48, 49, 50, 53, 54, 56, 57, 62], "neuralnetwork": [16, 17, 18, 19, 20, 21, 26, 31, 41, 42, 43, 45, 52, 53, 57], "methods": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54], "computes": [16, 17, 20, 21, 41, 43, 46, 48, 49], "array": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 59, 60, 61, 62, 63], "d\u00f6n\u00fc\u015f": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "t\u00fcr": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "float": [16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 39, 42, 44, 45, 47, 51, 56], "multiclass": 17, "squared_error": [18, 19, 26, 28, 53], "fal": [18, 19, 22, 23, 24, 26, 27, 28, 32, 35, 42, 44, 45, 55, 56, 57, 58, 59, 60, 61, 63], "warm_start": [18, 19, 26, 27, 28, 60], "callback": [18, 19, 26, 27, 28, 53, 54, 60, 61, 62], "trainablemodel": [18, 19], "classifiermix": [18, 22], "implements": [18, 19, 22, 56, 58], "details": [18, 19, 23, 26, 27, 28, 45, 51, 56, 60, 61, 62], "multi": [18, 19, 22, 23, 26, 27, 53], "assumedi": [18, 19, 26], "result": [18, 19, 26, 31, 40, 41, 42, 43, 44, 45, 52, 53, 55, 56, 61, 62], "entries": [18, 19, 26, 36, 37], "negativ": [18, 19, 24, 26, 52], "sum": [18, 19, 24, 26, 53, 56, 57, 60, 63], "hot": [18, 19, 21, 26, 27, 32, 46, 53, 60], "encodingi": [18, 19, 21, 26, 27, 46, 54, 58, 62, 63], "resultingi": [18, 19, 26, 27, 28, 45, 52, 57, 61], "consideredi": [18, 19, 26], "appliedi": [18, 19, 26, 58, 60, 62], "whole": [18, 19, 26, 60, 62], "entry": [18, 19, 26, 52, 59], "individual": [18, 19, 26], "index": [18, 19, 26, 52, 63], "weightedi": [18, 19, 26, 51], "str": [18, 19, 22, 23, 24, 25, 26, 27, 28, 34, 36, 39, 52, 53], "l2": [18, 19, 26, 49], "string": [18, 19, 26, 27, 39, 59, 63], "absolute_error": [18, 19, 26], "l1": [18, 19, 26, 48], "implementingi": [18, 19, 26, 63], "bool": [18, 19, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45], "determines": [18, 35, 37, 42, 44, 45, 62, 63], "interpretedi": [18, 27, 42, 44, 45, 52, 53], "encodedi": [18, 27, 53, 60, 62, 63], "crossentropy": 18, "predictions": [18, 47, 53, 54, 55], "occurre": [18, 56], "prediction": [18, 19, 24, 26, 27, 28], "frequency": 18, "absolute": [18, 48], "squaredi": [18, 28, 49, 53, 57], "categorical": [18, 27, 53], "enco": [18, 54, 62, 63], "integer": [18, 27, 29, 41, 43, 45, 52], "minimizer": [18, 19, 26, 27, 28, 39], "callable": [18, 19, 22, 26, 27, 28, 39, 45], "protocol": [18, 19, 26, 27, 28, 39], "defaults": [18, 19, 26, 27, 28, 29, 35, 37, 39], "slsqp": [18, 19, 26, 27, 28], "previous": [18, 19, 26, 27, 28, 53, 54, 55, 57, 60, 63], "returns": [18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 52, 53, 56, 58, 60], "access": [18, 19, 26, 27, 28, 52, 57, 61], "intermedia": [18, 19, 26, 27, 28, 62], "iteration": [18, 19, 26, 27, 28, 53, 54, 56, 60, 61, 62, 63], "invokes": [18, 19, 26, 27, 28], "passes": [18, 19, 20, 26, 27, 28, 41, 43, 52, 61, 62, 63], "current": [18, 19, 26, 27, 28, 32, 53, 54, 55], "optimizedi": [18, 19, 26, 27, 28, 35, 39, 40, 54], "optimization": [18, 19, 26, 27, 28, 40, 54, 56, 57, 58, 59, 60], "process": [18, 19, 26, 27, 28, 52, 53, 54, 55, 58, 61, 62, 63], "goingi": [18, 19, 26, 27, 28, 54, 56, 61], "hareke": [18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 39, 40, 42, 44, 45, 46, 48, 49, 50], "ge\u00e7irir": [18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 39, 40, 42, 44, 45, 46, 48, 49, 50], "qiskitmachinelearningerror": [18, 19, 22, 26, 27, 28, 29, 31, 42, 44, 45, 46, 48, 49, 50], "unknown": [18, 19, 26, 39, 63], "invalidi": [18, 19, 26, 27, 28, 42, 44, 45], "attributes": [18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54], "fit_result": [18, 19, 26, 27, 28], "object": [18, 19, 20, 23, 24, 25, 26, 27, 28, 35, 39, 40, 41, 42, 45, 47, 51, 54, 59], "procedur": [18, 19, 26, 27, 28, 32, 58, 63], "optimizerresult": [18, 19, 26, 27, 28], "num_classes": [18, 27], "recent": [18, 27], "warm": [18, 19, 26, 27, 28], "flag": [18, 19, 22, 26, 27, 28, 52], "queriedi": [18, 19, 26, 27, 28], "callingi": [18, 19, 24, 26, 27, 28, 55, 61], "incompatip": [18, 19, 22, 26, 27, 28], "classmethodu": [18, 19, 22, 23, 24, 25, 26, 27, 28], "load\u0131": [18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 52, 54, 56, 57, 60, 62, 63], "file_na": [18, 19, 22, 23, 24, 25, 26, 27, 28], "loads": [18, 19, 22, 23, 24, 25, 26, 27, 28], "loadedi": [18, 19, 22, 23, 24, 25, 26, 27, 28, 54], "whose": [18, 19, 22, 23, 24, 25, 26, 27, 28, 63], "warningi": [18, 19, 22, 23, 24, 25, 26, 27, 28, 30], "raisedi": [18, 19, 22, 23, 24, 25, 26, 27, 28, 31], "nevertheless": [18, 19, 22, 23, 24, 25, 26, 27, 28], "validi": [18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 54, 56], "path": [18, 19, 22, 23, 24, 25, 26, 27, 28], "typeerror": [18, 19, 22, 23, 24, 25, 26, 27, 28, 40], "predict": [18, 19, 22, 23, 24, 26, 27, 28, 46, 48, 49, 50, 53, 54, 55, 58, 59, 60, 62], "needs": [18, 19, 23, 26, 27, 28, 52, 62], "predictedi": [18, 19, 22, 23, 24, 26, 27, 28, 45, 46, 48, 49, 50, 53, 57, 58, 60], "save": [18, 19, 22, 23, 24, 25, 26, 27, 28, 57, 60], "saves": [18, 19, 22, 23, 24, 25, 26, 27, 28], "internally": [18, 19, 22, 23, 24, 25, 26, 27, 28], "serializedi": [18, 19, 22, 23, 24, 25, 26, 27, 28], "dill": [18, 19, 22, 23, 24, 25, 26, 27, 28], "savedi": [18, 19, 22, 23, 24, 25, 26, 27, 28, 57, 60, 62, 63], "referencedi": [18, 19, 22, 23, 24, 25, 26, 27, 28, 54], "internal": [18, 19, 22, 23, 24, 25, 26, 27, 28, 47], "objects": [18, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 59], "means": [18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 34, 36, 53, 54, 63], "infere": [18, 19, 22, 23, 24, 25, 26, 27, 28, 57, 60], "eve": [18, 19, 22, 23, 24, 25, 26, 27, 28, 34, 36, 54, 62, 63], "sample_weight": [18, 19, 22, 23, 24, 26, 27, 28], "samples": [18, 19, 22, 23, 24, 26, 27, 28, 32, 34, 35, 36, 37, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61], "accuracy": [18, 19, 22, 23, 26, 27, 28, 55, 57, 59, 61, 62], "coefficient": [18, 19, 24, 26, 27, 28], "determination": [18, 19, 24, 26, 27, 28], "regressormix": 19, "forward\u0131": [20, 31, 41, 42, 43, 44, 45, 53, 56, 57, 61, 63], "backward\u0131": [20, 41, 42, 43, 44, 45, 56, 57, 61], "c": [22, 23, 24, 51, 53, 58, 59, 62, 63], "num_steps": [22, 58], "1000": [22, 58], "precomputedi": [22, 23, 24], "seedi": [22, 52, 54, 55, 56, 57, 60, 61, 63], "serializablemodelmix": [22, 23, 24, 26], "pegasos": [22, 55], "developedi": 22, "decision_function": [22, 23], "followingi": [22, 41, 42, 43, 45, 52, 56, 57, 59, 61, 62, 63], "svc": [22, 23, 51, 54], "implementation": [22, 27, 28, 32, 34, 35, 36, 42, 45, 54, 55, 56, 58, 61, 63], "adaptedi": 22, "pegasos_qsv\u00e7": [22, 58], "sample_train": [22, 23, 24], "label_train": [22, 23, 24], "sample_test": [22, 23, 24], "references": [22, 32, 35, 41, 43, 54], "shalev": [22, 58], "shwartz": [22, 58], "et": [22, 41, 43, 54, 56, 58, 62], "al": [22, 41, 43, 53, 54, 56, 58, 61, 62], "primal": [22, 58], "sub": [22, 23, 24, 58], "solver": [22, 58], "positiv": [22, 29, 33, 34, 35, 36, 37, 38, 58], "regularization": [22, 58, 61], "strength": [22, 58], "inversely": [22, 58], "proportional": [22, 23, 58], "smaller": [22, 58, 63], "indu\u00e7": [22, 58], "generally": [22, 58], "helps": [22, 54, 58], "preventingi": [22, 58], "overfittingi": [22, 54, 58, 61], "computation": [22, 42, 45, 52, 58, 61], "steps": [22, 52, 54, 56, 58, 59, 60, 61, 63], "beco": [22, 55, 58], "trivial": [22, 58, 61], "improv": [22, 58], "performa": [22, 54, 57, 58, 60], "drastically": [22, 58], "linearly": [22, 54, 55, 58], "separap": [22, 54, 55, 58], "chose": [22, 31, 55, 56, 57, 58, 60, 62, 63], "separation": [22, 32, 53, 55, 58], "perfect": [22, 58], "prevent": [22, 58], "int": [22, 27, 28, 29, 30, 32, 35, 37, 41, 43, 44, 45, 56, 63], "early": [22, 58], "stoppingi": [22, 58], "criterion": [22, 58], "iterates": [22, 58], "over": [22, 39, 51, 58, 61, 63], "boolean": 22, "indicatingi": 22, "whether": [22, 31, 32, 35, 37, 42, 44, 45, 59, 62], "generator": [22, 61], "valueerror": [22, 28, 32, 34, 39], "type": [22, 28, 35, 37, 42, 45, 54, 63], "fittedi": [22, 23, 24, 53, 57, 58], "unfittedi": 22, "decision": [22, 23, 55], "shape": [22, 23, 24, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 60, 63], "m_samples": 22, "n_features": [22, 23, 24, 53, 58, 61], "calculatedi": [22, 33, 34, 35, 36, 37, 38, 61], "elements": [22, 34, 36, 48, 49, 54], "wrong": [22, 54], "accordingi": [22, 23, 24, 32, 58, 61], "contain": [22, 52, 62, 63], "unique": 22, "passingi": [22, 31, 55, 59, 61, 63], "raises": [22, 27], "dimensions": [22, 30, 41, 43, 55, 56, 61, 62, 63], "notimplementederror": 22, "perform": [22, 23, 24, 52, 54, 55, 57, 59, 61, 62, 63], "label": [22, 23, 27, 55, 56, 58, 59, 60, 61, 62, 63], "subset": [22, 23, 57], "harsh": [22, 23], "metri\u00e7": [22, 23, 56, 61], "si": [22, 23, 30, 39, 55, 56, 59, 62, 63], "correctly": [22, 23], "n_outputs": [22, 23, 24], "w": [22, 23, 24, 35, 54, 55, 56, 58, 59, 60], "kwargs": [23, 24, 31, 38, 51], "shows": [23, 24, 52, 53, 57, 60, 61], "inherits": [23, 24], "qkernel": [23, 24, 58], "args": [23, 24, 31, 51, 59], "variap": [23, 24], "length": [23, 24, 47, 51, 52, 54, 59, 62, 63], "argument": [23, 24, 40, 59], "list": [23, 24, 41, 42, 43, 44, 45, 52, 59, 62], "constructor": [23, 24, 42, 45, 51, 52, 55, 58, 61], "arbitrary": [23, 24, 51], "keywordu": [23, 24, 51, 52], "arguments": [23, 24, 29, 51, 52, 55], "coef_": [23, 24], "linear": [23, 24, 55, 56, 57], "n_classes": [23, 24, 53], "n_support_": [23, 24], "vectors": [23, 24, 32, 39], "proba_": 23, "learnedi": [23, 52, 55, 62], "platt": 23, "scalingi": [23, 52], "probb_": 23, "unused_para": [23, 24], "nu": 23, "decision_function_shap": 23, "ovr": 23, "ovo": 23, "dista": [23, 54, 56], "separatingi": 23, "hyperpla": 23, "exact": [23, 35, 37, 56], "distances": 23, "divi": [23, 63], "norm": [23, 57], "question": 23, "monotoni\u00e7": 23, "transformation": [23, 30, 54, 60], "real": [23, 24, 52, 56, 57, 60, 63], "numbers": [23, 24, 61, 63], "per": [23, 24, 54, 56, 62], "rescal": [23, 24], "force": [23, 24], "put": [23, 24, 55], "emphasis": [23, 24], "points": [23, 24, 32, 53, 54, 55, 57, 60], "orderedi": [23, 24], "contiguous": [23, 24], "float64": [23, 24], "scipy": [23, 24, 56], "csr_matrix": [23, 24], "copiedi": [23, 24], "de": [23, 24, 53, 57, 60], "get_metadata_routingi": [23, 24], "metada": [23, 24], "routingi": [23, 24], "check": [23, 24, 52, 54, 57], "mechanism": [23, 24, 54], "metadatarequest": [23, 24], "encapsulatingi": [23, 24], "get_params": [23, 24], "containedi": [23, 24, 62], "subobjects": [23, 24], "estimators": [23, 24, 26], "mappedi": [23, 24, 52, 55, 63], "dict": [23, 24], "n_samples_test": [23, 24], "n_samples_train": [23, 24], "y_pred": [23, 24, 59], "predict_log_prop": 23, "log": [23, 46, 56, 57], "possip": [23, 24, 34, 36, 53, 57, 61, 62, 63], "outcomes": [23, 53, 61, 63], "attribu": [23, 32, 35, 54], "columns": [23, 54, 60], "sortedi": 23, "appear": [23, 54], "classes_": 23, "cross": [23, 46, 56, 57], "validation": 23, "slightly": [23, 54], "those": [23, 27, 53, 54, 57], "obtainedi": [23, 54, 56, 58, 60, 61, 62, 63], "produce": [23, 61], "meaningless": 23, "predict_prop": 23, "set_fit_request": [23, 24], "unchangedi": [23, 24], "request": [23, 24], "relevant": [23, 24, 61, 63], "enable_metadata_routingi": [23, 24], "set_configi": [23, 24], "requestedi": [23, 24], "ignoredi": [23, 24, 42, 45], "meta": [23, 24], "rai": [23, 24], "alias": [23, 24], "original": [23, 24, 55, 56, 63], "metadata_routingi": [23, 24], "retains": [23, 24], "others": [23, 24, 54, 62], "3": [23, 24, 29, 30, 32, 42, 45, 53, 58, 59], "gel": [23, 24], "insi": [23, 24, 54, 56], "pipel": [23, 24], "effect": [23, 24, 55, 61, 62, 63], "set_params": [23, 24], "nestedi": [23, 24], "latter": [23, 24, 54, 55], "component": [23, 24], "__": [23, 24, 63], "update": [23, 24, 29, 53, 54], "set_score_request": [23, 24], "svr": 24, "class_weight_": 24, "inlier": 24, "outlier": 24, "frac": [24, 62, 63], "u": [24, 35, 62, 63], "v": [24, 32, 35, 54, 57, 58], "residual": 24, "squares": 24, "y_true": [24, 59], "total": [24, 60, 61, 63], "best": [24, 54, 55, 56], "arbitrarily": 24, "wor": [24, 54], "constant": 24, "predicts": [24, 62], "disregardingi": [24, 62], "n_samples_fittedi": 24, "fittingi": [24, 51], "uses": [24, 27, 56, 57, 60, 61, 63], "multioutput": 24, "uniform_averag\u0131": 24, "23": [24, 52, 53, 54, 55, 56, 57, 60, 63], "keep": [24, 52, 55, 57, 61], "consistent": [24, 29], "r2_score": 24, "influences": 24, "multioutputregressor": 24, "convenient": [25, 27, 28], "savingi": [25, 57], "loadingi": [25, 52, 54, 57], "num_qubits": [27, 28, 29, 30, 42, 45, 52, 53, 54, 56, 57, 58, 61, 62, 63], "measuredi": [27, 28, 45, 52, 53, 56, 61, 63], "instantia": [27, 59], "various": [27, 63], "formats": [27, 45], "plain": 27, "transformedi": [27, 55], "qubits": [27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 52, 53, 54, 56, 58, 61, 62, 63], "derivedi": [27, 28, 29, 45], "neither": [27, 28], "adjustedi": [27, 28, 29, 62], "proble": [27, 28, 52, 53, 54, 55, 61, 62], "zfeaturemap": [27, 28, 29, 58, 61, 62], "least": [27, 28, 29], "baseoperator": [28, 42], "num": [28, 42, 53, 63], "_qubits": [28, 42], "blueprintcircuit": [29, 30], "blueprint": 29, "wraps": 29, "simplify": [29, 42, 45, 53, 61, 62], "composition": [29, 42, 45, 53, 61], "potential": 29, "mismatch": [29, 33, 34, 35, 36, 37], "three": [29, 52, 53, 54, 55, 62, 63], "resolvedi": 29, "properties": [29, 40, 42, 45, 54], "construction": 29, "incorpora": 29, "configuration": [29, 63], "considers": [29, 53], "latest": 29, "property": [29, 40, 53, 60], "times": [29, 54, 56, 57, 62, 63], "qnn_qc": [29, 42, 45], "print": [29, 30, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "prints": [29, 30], "q_0": [29, 30, 59], "q_1": [29, 30, 59], "\u03b8": [29, 51, 54, 59, 62], "5": [29, 42, 45, 51, 53, 57, 58, 59, 60], "input_parameters": [29, 42, 45], "parameterview": 29, "parametervectorelement": [29, 59], "weight_parameters": [29, 42, 45], "although": [29, 54], "determ": [29, 41, 43, 62, 63], "overridi": 29, "long": [29, 53, 54, 57, 62, 63], "respectiv": [29, 52], "supports": 29, "updatingi": 29, "sizes": [29, 41, 43, 52, 61], "determinedi": [29, 35], "composedi": [29, 42, 45, 59], "num_input_parameters": 29, "num_weight_parameters": 29, "feature_dimension": [30, 42, 45, 54, 55, 58, 61], "raw": 30, "acts": [30, 62, 63], "parameterizedi": [30, 33, 34, 35, 36, 37, 42, 45, 51, 53, 54, 56, 57, 63], "initialization": [30, 31, 52, 57], "statevectors": [30, 35, 63], "log2": [30, 56], "placeholder": 30, "instruction": 30, "synthesizedi": 30, "amplitudes": [30, 63], "apply": [30, 32, 52, 54, 55, 57, 60, 62, 63], "therefor": [30, 52, 61, 62, 63], "initializ": [30, 57, 59], "call": [30, 54, 55, 56, 59, 60, 61, 62, 63], "examples": [30, 52, 53, 55, 62, 63], "draw": [30, 52, 53, 54, 56, 57, 61, 62, 63], "text": [30, 46, 48, 49, 56, 62, 63], "parameterizedinitializ": 30, "ordered_parameters": 30, "state": [30, 35, 52, 54, 56, 57, 59, 60, 63], "sqrt": [30, 56, 63], "assign_parameters": [30, 63], "70711": 30, "inferredi": [30, 52], "n_qubits": 30, "feature_": 30, "nn": [31, 56, 57], "connects": 31, "connectedi": [31, 62], "remember": [31, 52, 57], "input_gradients": [31, 42, 44, 45, 52, 57], "computations": [31, 52], "properly": 31, "initial_weights": [31, 56, 57], "tensor": [31, 56, 57, 62], "uniformly": [31, 32, 57], "connector": [31, 60], "settingi": [31, 52, 62, 63], "configuredi": 31, "input_da": [31, 42, 44, 45], "training_siz": [32, 55, 59], "test_siz": [32, 55, 59, 62], "gap": [32, 55, 59], "plot_da": [32, 55, 59], "include_sample_total": [32, 55, 59], "generates": [32, 45, 60], "toy": [32, 61], "dataset": [32, 33, 34, 35, 36, 37, 41, 43, 47, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63], "separatedi": [32, 55], "outlinedi": 32, "distributedi": 32, "vec": [32, 55], "phi": [32, 34, 35, 55, 56, 62], "u_": 32, "h": [32, 52, 55, 56, 63], "exp": [32, 62], "left": [32, 48, 55, 56, 58, 59, 60, 62], "sum_": [32, 46, 48, 49, 51, 56], "subseteq": 32, "phi_s": 32, "prod_": 32, "z_i": 32, "begi": [32, 39, 56, 62, 63], "cases": [32, 52, 54, 55, 61], "phi_": [32, 36, 37], "j": [32, 35, 51, 56, 62, 63], "x_i": [32, 51], "x_j": [32, 51, 56], "rule": [32, 54, 57, 60], "dagger": [32, 35, 63], "prod_i": 32, "delta": 32, "mathrm": 32, "su": [32, 62], "unitary": [32, 62], "havl\u00ed\u010dek": [32, 35], "c\u00f3rcoles": [32, 35], "ad": [32, 55, 59, 62], "temme": [32, 35], "harrow": [32, 35], "aw": 32, "kandal": [32, 35], "chow": [32, 35], "jm": 32, "gambet": [32, 35], "supervisedi": [32, 35, 55], "enhancedi": [32, 35, 55], "spaces": [32, 35, 55], "2019": [32, 35, 56, 62], "mar": 32, "567": [32, 35], "7747": [32, 35], "209": [32, 35], "arxiv": [32, 35, 51], "1804": [32, 35], "11326": 32, "testingi": [32, 55, 57, 58], "plot": [32, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "matplotlip": [32, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "uniform": [32, 41, 43, 56, 61, 62, 63], "grid": [32, 54, 56, 58], "tuple": [32, 42, 44, 45, 52], "enforce_psdi": [33, 34, 35, 36, 37, 38], "abc": [33, 38, 44, 47, 50], "definition": [33, 38, 41, 43, 57], "dot": [33, 63], "try": [33, 34, 35, 36, 37, 54, 63], "adjust": [33, 34, 35, 36, 37, 62, 63], "closest": [33, 34, 35, 36, 37, 38], "semidefini": [33, 34, 35, 36, 37, 38], "num_features": [33, 34, 35, 36, 37, 38, 54, 60], "x_vec": [33, 34, 35, 36, 37, 38, 55], "y_vec": [33, 34, 35, 36, 37, 38, 55], "1d": [33, 34, 35, 36, 37, 38, 60], "2d": [33, 34, 35, 36, 37, 38, 56], "nxd": [33, 34, 35, 36, 37, 38], "d": [33, 34, 35, 36, 37, 38, 39, 53, 61, 62], "mxd": [33, 34, 35, 36, 37, 38], "nxm": [33, 34, 35, 36, 37, 38], "evaluate_duplicates": [34, 36], "off_diagonal": [34, 36], "top": [34, 36], "strategy": [34, 36], "duplica": [34, 36], "diagonal": [34, 36], "ones": [34, 36, 56, 63], "noi": [34, 35, 36, 56, 62, 63], "rest": [34, 36, 61], "identical": [34, 36, 55, 63], "inferringi": [34, 36], "element": [34, 36, 42, 44, 45], "unsupportedi": 34, "statevector_type": [35, 37], "cache_siz": [35, 37], "auto_clear_cache": [35, 37], "shots": [35, 37, 56], "limitedi": [35, 43], "classically": [35, 62], "simulatedi": 35, "producedi": 35, "subclasses": 35, "storedi": 35, "cache": [35, 37], "avoidi": [35, 62], "repeatedi": 35, "evaluation": [35, 51, 52, 54, 63], "clearedi": [35, 37], "clear_cache": [35, 37], "unless": 35, "shot": 35, "emulation": 35, "drawn": [35, 37], "binomial": [35, 37], "equal": [35, 37, 53, 58, 59, 62], "assumes": 35, "measuringi": [35, 52, 62, 63], "preparingi": 35, "se": 35, "defini": 35, "condition": 35, "enforcedi": 35, "212": 35, "11326v2": 35, "quant": 35, "ph": 35, "sv": [35, 37], "instantiatedi": [35, 37, 52, 55, 58], "maxim": [35, 37, 54, 58, 59], "unboundedi": [35, 37], "retainedi": [35, 37], "clear": [35, 37, 54, 57], "training_parameters": [36, 37, 38, 39, 59], "findingi": [36, 37, 61], "big": [36, 37, 56], "challenge": [36, 37], "choo": [36, 37, 54, 56, 60], "tune": [36, 37, 54, 63], "theta": [36, 37, 56, 62, 63], "k_": [36, 37, 51, 55], "parametervector": [36, 37, 38, 39, 52, 59, 62], "seque": [36, 37, 38, 39, 42, 45, 47, 51], "iterap": [36, 37], "containingi": [36, 37, 47, 51, 59, 62, 63], "gates": [36, 37, 52, 54, 56, 62, 63], "tunedi": [36, 37, 62], "intendi": [36, 37], "optimal": [36, 37, 40, 51, 54, 59, 62, 63], "fieldi": [36, 37, 54], "num_training_parameters": [36, 37, 38], "parameter_values": [36, 37, 38, 47, 51], "numerical": [36, 37, 38, 54, 57], "assign_training_parameters": [36, 37, 38], "fidelitystatevectorkernel": 37, "specifyingi": [38, 42, 45, 54], "super": [38, 56, 57], "utility": [39, 55, 56], "crea": [39, 42, 45, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "qc": [39, 42, 45, 53, 56, 57, 61, 62, 63], "x_par": 39, "training_params": [39, 59], "\u03b8_par": 39, "rotation": [39, 58, 59], "layer": [39, 52, 57, 59, 63], "para": [39, 40], "enumera": [39, 57], "rz": [39, 62], "quant_kernel": [39, 59], "loss_fun\u00e7": [39, 57], "qk_trainer": 39, "qkt_results": 39, "x_train": [39, 57, 59], "y_train": [39, 59], "optimized_kernel": [39, 59], "kernelloss": [39, 51, 59], "svc_loss": [39, 59], "svcloss": [39, 59], "exhibit": 39, "analytical": 39, "recommendedi": 39, "spsa": [39, 59], "minimizingi": [39, 51, 63], "quantumkerneltrainerresult": [39, 59], "variationalresult": 40, "optimal_circuit": [40, 59], "retriev": 40, "minim": [40, 58], "eigensta": 40, "optimal_parameters": [40, 59], "dictionary": [40, 54, 59], "optimal_point": [40, 59], "optimal_value": [40, 59], "optimizer_evals": [40, 59], "evaluations": [40, 53, 59, 61], "optimizer_result": [40, 59], "optimizer_t": [40, 59], "exists": 40, "receiver": 40, "weight_samples": [41, 43, 61], "input_samples": [41, 43, 61], "global": [41, 43, 55], "effectiv": [41, 43, 54], "abbas": [41, 43, 61], "power": [41, 43, 57, 61], "qnns": [41, 43], "num_weights": [41, 42, 43, 44, 45, 52, 53, 57, 61], "fisher": [41, 43, 54, 61], "num_input_samples": [41, 43, 61], "num_weight_samples": [41, 43, 61], "qnn_input_siz": [41, 43], "indica": [41, 43, 57], "randomly": [41, 43, 54, 57, 61], "normal": [41, 43, 56, 61], "get_effective_dimension": [41, 43, 61], "dataset_siz": [41, 43, 61], "num_da": [41, 43], "effective_": [41, 43], "get_fisher_information": [41, 43], "model_outputs": [41, 43], "averag\u0131": [41, 43], "jacobian": [41, 43], "every": [41, 43, 62], "output_siz": [41, 43], "get_normalized_fisher": [41, 43], "normalized_fisher": [41, 43], "normalizedi": [41, 43, 54, 55, 61], "extracts": [41, 43], "trace": [41, 43, 61], "fisher_tra\u00e7": [41, 43], "normalizingi": [41, 43], "run_monte_carlo": [41, 43], "monte": [41, 43, 61], "carlo": [41, 43, 61], "grads": [41, 43], "designatedi": [42, 45], "qui": [42, 45, 53, 54, 56, 61, 63], "combinedi": [42, 45], "built": [42, 45, 54, 62], "qnncircuit": [42, 45, 53, 61], "once": [42, 45, 52, 53, 54, 55, 56, 60], "baseestimatorgradient": 42, "represent": [42, 54, 56, 59, 62], "paramshiftestimatorgradient": 42, "proper": [42, 45], "representingi": 42, "sca": [42, 44, 45], "cast": [42, 44, 45], "num_input": [42, 44, 45], "sparsearray": [42, 44, 45], "effectivedimension": [43, 61], "local": [43, 52, 60, 63], "providingi": [44, 55], "batchedi": 44, "processingi": [45, 52, 62], "mappingi": [45, 53, 54, 55, 56, 57, 61, 63], "match": [45, 46, 48, 49, 50], "bin": 45, "basesamplergradient": 45, "unsignedi": 45, "integers": [45, 62], "indices": 45, "potentially": [45, 56], "identity": [45, 63], "interpretation": 45, "paramshiftsamplergradient": 45, "implicitly": [45, 55], "set_interpret": 45, "entropy": [46, 56, 57], "n_": [46, 48, 49], "target_i": [46, 48, 49], "predict_i": [46, 48, 49], "evaluatingi": [46, 47, 48, 49, 50, 51], "individually": [46, 48, 49, 50], "shapes": [46, 48, 49, 50, 52], "assume": 46, "softmax": [46, 57], "unlik": 47, "labeledi": [47, 51, 54, 57, 59, 60], "assign": [47, 51, 53, 62, 63], "truth": [47, 51, 53], "tasks": [51, 55, 56, 57], "x_": [51, 53, 56, 57], "y_": [51, 53, 57], "a_i": 51, "a_j": [51, 62], "k_\u03b8": 51, "lagrange": 51, "multipliers": 51, "standard\u0131": [51, 54, 57, 58], "quadrati\u00e7": 51, "hyper": [51, 58], "soft": 51, "marg\u0131": [51, 58, 59], "penalty": 51, "equivalent": [51, 63], "maximizingi": [51, 63], "alignment": [51, 59], "turn": [51, 63], "yields": [51, 58], "smallest": 51, "upper": [51, 55, 58, 59, 60], "generalization": [51, 61, 62], "parameterization": [51, 58, 61], "abs": [51, 63], "2105": 51, "03406": 51, "sayfa": [52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "docs": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "01_neural_networks": 52, "ipynb": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "olu\u015fturul": [52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "notebook": [52, 55, 62], "demonstrates": [52, 57], "integratedi": 52, "workflows": 52, "structuredi": [52, 55, 56], "introduction": [52, 55, 56, 61], "conclusion": 52, "inspiredi": 52, "huma": 52, "brain": 52, "recogniz": [52, 62], "solve": [52, 55, 57], "complex": [52, 53, 56, 57], "series": [52, 54, 55, 61, 62], "interconnectedi": 52, "nodes": [52, 55, 63], "neurons": 52, "organizedi": 52, "layeredi": 52, "structure": [52, 54, 59, 63], "applyingi": [52, 60, 61, 62, 63], "strategies": 52, "motivation": 52, "behindi": [52, 55], "notions": [52, 61], "improvedi": 52, "schemes": [52, 56], "princip": [52, 55], "combiningi": [52, 62], "lie": 52, "intersection": 52, "fields": [52, 59], "viewedi": [52, 55], "perspectives": 52, "perspectiv": 52, "again": [52, 53, 54, 55, 60, 63], "hidi": 52, "manner": [52, 57, 62], "counterparts": [52, 54], "later": [52, 55, 57, 61, 63], "figur": [52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63], "pluggedi": [52, 55], "seen": [52, 54, 62, 63], "complementary": 52, "necessarily": 52, "strict": 52, "definitions": 52, "concepts": 52, "neuro": 52, "constitutes": 52, "meant": 52, "agnosti\u00e7": 52, "units": 52, "setup": [52, 54, 55, 57], "dependi": [52, 63], "neededi": [52, 63], "primitives": [52, 54, 55, 56, 60], "subclass": [52, 62], "simulations": 52, "stateless": 52, "capabilities": [52, 63], "pushedi": 52, "nor": 52, "store": [52, 53, 56, 57, 60, 61, 63], "let": [52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "look": [52, 53, 54, 60, 63], "ensur": [52, 54, 55, 58, 61], "don": [52, 54, 55, 56, 57], "runs": 52, "qiskit_algorithms": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "42": [52, 53, 57, 58, 60, 61, 63], "lists": 52, "action": [52, 61], "represents": [52, 56, 61], "26": [52, 53, 57, 63], "params1": 52, "input1": 52, "weight1": 52, "qc1": 52, "rx": 52, "mpl": [52, 53, 54, 56, 57, 61, 62, 63], "27": [52, 53, 57], "sparsepauliop": [52, 62], "observable1": 52, "together": [52, 61], "treatedi": [52, 55], "whil": [52, 54, 55, 57, 59, 61, 62, 63], "secondu": [52, 55, 56, 57, 60, 62], "performingi": [52, 62], "simulation": [52, 61], "us": [52, 54, 55, 62, 63], "resources": [52, 54], "simulators": [52, 60], "instances": [52, 54, 55, 60], "28": [52, 53], "lt": [52, 53, 54, 57, 59, 60], "0x7fd668ca0e80": 52, "gt": [52, 53, 54, 57, 59, 60], "sections": [52, 63], "consumes": 52, "specify": 52, "mind": [52, 61], "scale": [52, 53, 54, 56, 60], "exponentially": 52, "independently": 52, "four": [52, 54, 62], "parametriz": 52, "29": [52, 53, 59], "inputs2": 52, "weights2": 52, "ite": [52, 56, 57], "qc2": 52, "cx": [52, 56, 62], "39": [52, 53, 54, 59], "similarly": [52, 53], "instantiatingi": 52, "choosingi": 52, "relyingi": 52, "30": [52, 53, 57, 59, 60], "0x7fd659264880": 52, "settings": [52, 59], "sake": [52, 53, 54, 57], "estimator_qnn_input": 52, "estimator_qnn_weights": 52, "32": [52, 53, 61, 63], "ninput": 52, "nweights": 52, "77395605": 52, "43887844": 52, "33": [52, 53, 54, 57, 58, 62], "sampler_qnn_input": 52, "sampler_qnn_weights": 52, "34": [52, 53, 54], "85859792": 52, "69736803": 52, "09417735": 52, "97562235": 52, "7611397": 52, "78606431": 52, "num_observables": 52, "35": [52, 53], "estimator_qnn_forward\u0131": 52, "nshape": 52, "2970094": 52, "36": [52, 53, 55], "sampler_qnn_forward\u0131": 52, "01826527": 52, "25735654": 52, "5267981": 52, "19758009": 52, "batch_siz": [52, 57], "37": 52, "estimator_qnn_forward_batchedi": 52, "38": [52, 57], "sampler_qnn_forward_batchedi": 52, "advantage": [52, 57, 61], "weight_gradients": 52, "instantiation": 52, "integration": [52, 57], "estimator_qnn_input_grad\u0131": 52, "estimator_qnn_weight_grad\u0131": 52, "63272767": 52, "sampler_qnn_input_grad\u0131": 52, "sampler_qnn_weight_grad\u0131": 52, "00606238": 52, "1124595": 52, "06856156": 52, "09809236": 52, "21167414": 52, "09069775": 52, "22549618": 52, "48846674": 52, "32499215": 52, "32262178": 52, "27073021": 52, "12183491": 52, "41": [52, 55], "3038852": 52, "43": [52, 53, 54, 61], "05844702": 52, "10621091": 52, "38798796": 52, "19544083": 52, "34561132": 52, "09459601": 52, "01607038": 52, "20705573": 52, "architectures": [52, 57], "44": 52, "observable2": 52, "estimator_qnn2": 52, "45": 52, "estimator_qnn_forward2": 52, "estimator_qnn_input_grad2": 52, "estimator_qnn_weight_grad2": 52, "estimatorqnn1": 52, "estimatorqnn2": 52, "explainedi": [52, 54, 57, 61, 63], "section": [52, 53, 54, 55, 56, 57, 60, 62, 63], "modify": 52, "fixedi": [52, 61, 63], "46": 52, "lamp": [52, 53, 57, 62], "sampler_qnn2": 52, "47": 52, "sampler_qnn_forward2": 52, "sampler_qnn_input_grad2": 52, "sampler_qnn_weight_grad2": 52, "samplerqnn1": 52, "samplerqnn2": 52, "namely": [52, 54, 55], "theoretical": 52, "backgroundu": [52, 54, 62, 63], "key": [52, 54, 61], "encourag\u0131": [52, 57], "play": 52, "lengths": 52, "influe": 52, "48": [52, 63], "22": [52, 53, 54, 55, 57, 58, 60, 61, 63], "3qiskit": 52, "9": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "15python": 52, "buildmain": [52, 55], "nov": [52, 57, 63], "24": [52, 53, 54, 57, 60, 61], "08": [52, 59, 61], "02osdarwincpus8memory": 52, "0mon": [52, 56, 59, 60], "jan": [52, 55], "11": [52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "49": [52, 58], "cet": [52, 55], "02_neural_network_classifier_and_regressor": 53, "nas\u0131l": 53, "kullan\u0131ld\u0131k": 53, "g\u00f6steriyor": 53, "iki": 53, "giri\u015f": 53, "belirli": 53, "ba\u011fla": 53, "kulla": 53, "ik": 53, "dur": 53, "kolayl\u0131k": 53, "ama\u00e7": 53, "\u00f6nce": 53, "yap\u0131land\u0131r\u0131l": 53, "\u00e7e\u015fitle": 53, "sa\u011fl\u0131yor": 53, "varitional": 53, "\u00f6\u011freti\u00e7": 53, "a\u015fa\u011f\u0131": 53, "gip": 53, "yap\u0131land\u0131r\u0131l\u0131r": 53, "pyplot": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "plt": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "ipytho": [53, 54, 56, 60, 61, 62, 63], "display": [53, 54, 56, 59, 60, 61, 62, 63], "clear_output": [53, 54, 56, 60, 61, 62, 63], "takip": 53, "algoritma": [53, 62], "g\u00f6stermek": 53, "basit": 53, "ver": [53, 57, 62], "haz\u0131rl\u0131yor": 53, "y01": [53, 57], "axis": [53, 57, 60], "y_one_hot": 53, "zeros": [53, 56, 62, 63], "range": [53, 54, 56, 57, 59, 60, 61, 62, 63], "y_target": [53, 57], "zip": [53, 57, 62, 63], "bo": [53, 57], "el": [53, 57], "go": [53, 57, 60], "color": [53, 55, 56, 57, 60], "black": [53, 57, 60], "23521988": 53, "callback_graph": [53, 54, 60, 61, 62], "appendi": [53, 54, 56, 57, 59, 60, 61, 62, 63], "versus": [53, 54, 60], "graph": [53, 55], "whatever": [53, 54], "gets": 53, "draws": [53, 60, 61], "liv": [53, 60, 61], "obj_func_eval": [53, 54, 61, 62], "wait": [53, 54, 56, 60, 61, 62, 63], "objective_func_vals": [53, 54, 61, 62, 63], "tit": [53, 54, 55, 57, 58, 59, 60, 61, 62, 63], "against": [53, 54, 60, 61, 62, 63], "xlabel": [53, 54, 57, 60, 61, 62, 63], "ylabel": [53, 54, 57, 60, 61, 62, 63], "len": [53, 54, 56, 57, 59, 60, 61, 62, 63], "estimator_classifier": [53, 61], "60": [53, 57], "empty": [53, 60, 61, 63], "rcparams": [53, 54, 59, 60, 61, 62, 63], "figsiz": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "y_predict": [53, 57, 62], "red": [53, 57], "wrongly": [53, 57], "classifiedi": [53, 56, 57, 60], "y_p": [53, 57], "scatter": [53, 55, 57, 58, 59, 60], "200": [53, 57, 60, 62], "facecolors": [53, 55, 57, 58, 59, 60], "edgecolors": [53, 55, 57, 58, 59, 60], "linewidths": [53, 57, 60], "explor": [53, 54], "10": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "99142399e": 53, "01": [53, 55, 56], "02869770e": 53, "00": [53, 55, 63], "32131512e": 53, "04": 53, "47046684e": 53, "13636802e": 53, "56831727e": 53, "17902158e": 53, "08678332e": 53, "bit": [53, 54, 57, 58, 63], "strings": [53, 63], "choi": [53, 54, 57, 59, 62], "customizedi": 53, "corresponds": [53, 61, 63], "sampler_classifier": 53, "15": [53, 54, 55, 56, 57, 58, 60, 61, 62, 63], "16": [53, 54, 55, 56, 57, 60, 61, 62, 63], "less": [53, 63], "67198565": 53, "46045402": 53, "93462862": 53, "95266092": 53, "special": 53, "variant": 53, "applies": 53, "extensions": 53, "crossentropyloss": [53, 57], "18": [53, 54, 55, 56, 57, 60, 61, 63], "classify": [53, 55, 57, 62], "tackle": [53, 54], "interestingi": [53, 54], "cour": [53, 54], "short": [53, 60], "prepar": [53, 56, 60], "tiny": 53, "employ": [53, 55, 56, 60], "make_classification": [53, 61], "ni\u00e7": [53, 56], "redundant": 53, "combinations": 53, "kind": 53, "centroidi": 53, "slight": 53, "increa": [53, 54, 63], "ea": [53, 62], "21": [53, 54, 55, 57, 60, 61], "preprocessingi": [53, 54, 58, 60, 61], "minmaxsca": [53, 54, 58, 60, 61], "n_redundant": [53, 61], "n_clusters_per_class": [53, 61], "class_sep": [53, 61], "fit_transform": [53, 54, 55, 58, 60, 61], "looks": [53, 54, 55, 56, 60, 62, 63], "collections": [53, 60], "pathcollection": [53, 60], "0x7fd5e072c250": 53, "transform": [53, 54, 55, 57, 60], "y_cat": 53, "dtype": [53, 56], "minimal": 53, "low": 53, "observe": [53, 55, 61], "progress": [53, 56], "had": [53, 54, 55], "achievedi": [53, 54, 57], "compare": [53, 54, 56, 61, 63], "groundu": 53, "k\u00fcmes": 53, "linspa\u00e7": [53, 56, 57, 60], "50": [53, 54, 56, 57, 59, 61, 62], "reshap": [53, 55, 56, 57, 58, 60, 62, 63], "restrict": [53, 62], "exceeds": 53, "scope": 53, "param_x": [53, 57], "fm": [53, 57, 59, 63], "param_y": [53, 57], "vf": [53, 57], "regression_estimator_qn": 53, "9769994291935522": 53, "l": [53, 56, 57, 62, 63], "obtain": [53, 54, 61, 62], "queryingi": 53, "58870599": 53, "l2loss": 53, "min": [53, 54, 55, 60, 62, 63], "targets": [53, 57], "9769955693935385": 53, "ignis0": [53, 54, 57, 58, 61], "ibmq": [53, 55, 61], "provider0": [53, 55, 61], "2qiskit0": [53, 61], "8python": [53, 61], "apr": [53, 61], "2021": [53, 61, 62], "59": [53, 61, 63], "45osdarwincpus8memory": [53, 61], "0tue": [53, 61], "jun": [53, 60, 61], "cest": [53, 61], "page": [54, 63], "02a_training_a_quantum_model_on_a_real_dataset": 54, "demonstra": [54, 59, 62, 63], "featuredi": 54, "complexity": [54, 58, 61], "consideringi": [54, 55], "lif": 54, "pick": [54, 61, 63], "known": [54, 55, 63], "albeit": 54, "relatively": [54, 57], "iris": 54, "flower": 54, "wikipedia": [54, 63], "scientists": 54, "briefly": [54, 61], "refresh": 54, "memories": 54, "compariso": 54, "counterpart": [54, 63], "solvedi": 54, "conclude": [54, 62], "load_iris": 54, "iris_da": 54, "description": 54, "descr": 54, "_iris_dataset": 54, "plants": 54, "characteristics": 54, "150": [54, 63], "numeri\u00e7": 54, "predictiv": 54, "sepal": 54, "cm": [54, 55, 56, 59], "width": 54, "petal": 54, "setos": 54, "versicolour": 54, "virginica": 54, "summary": 54, "statistics": 54, "max": [54, 55, 60, 62, 63], "sd": 54, "correlation": 54, "84": [54, 56], "83": 54, "7826": 54, "05": [54, 55, 56, 58, 59, 60, 63], "4194": 54, "76": 54, "9490": 54, "9565": 54, "missingi": 54, "creator": 54, "donor": 54, "michael": 54, "marshall": 54, "plu": 54, "io": 54, "arc": 54, "nas": 54, "gov": 54, "date": 54, "july": 54, "1988": 54, "famous": [54, 57], "database": 54, "sir": 54, "paper": [54, 55, 58, 61], "uci": 54, "repository": 54, "perhaps": 54, "pattern": [54, 55, 56, 62], "recognition": [54, 62, 63], "literatur": 54, "classi\u00e7": 54, "frequently": 54, "day": 54, "du": 54, "amp": 54, "hart": 54, "refers": [54, 56], "plant": 54, "topi\u00e7": 54, "multip": [54, 57, 60], "measurements": [54, 62, 63], "taxonomi\u00e7": 54, "annual": 54, "eugenics": 54, "ii": 54, "179": 54, "188": 54, "1936": 54, "contributions": 54, "mathematical": 54, "john": 54, "wiley": 54, "ny": 54, "1950": 54, "o": [54, 55, 56, 58, 59, 60], "1973": 54, "sce": 54, "q327": 54, "d83": 54, "sons": 54, "isbn": 54, "471": 54, "22361": 54, "218": 54, "dasarathy": 54, "1980": 54, "nosingi": 54, "neighborhoodu": 54, "system": [54, 62, 63], "partially": 54, "iee": 54, "transactions": 54, "intellige": 54, "vol": 54, "pami": 54, "67": 54, "71": 54, "1972": 54, "reducedi": [54, 63], "nearest": [54, 55, 59], "neighbor": 54, "theory": [54, 62], "431": 54, "433": 54, "mlc": 54, "proceedings": 54, "cheesema": 54, "autoclass": 54, "conceptual": [54, 61], "finds": 54, "observations": 54, "perfectly": [54, 55], "balancedi": 54, "ranges": [54, 61], "transformingi": 54, "helpful": 54, "statedi": 54, "table": 54, "lead\u0131": [54, 62, 63], "think": 54, "cope": 54, "examinedi": 54, "firstly": 54, "normaliz": [54, 56], "squeez": [54, 56, 57], "onto": [54, 63], "interval": [54, 57], "normalization": [54, 61], "technique": [54, 55, 59], "leads": 54, "stability": 54, "converge": [54, 57, 60], "exactly": [54, 63], "pair": [54, 61, 62], "wis": 54, "pandas": 54, "pd": 54, "seaborn": 54, "sns": 54, "df": 54, "dataframe": 54, "feature_names": 54, "pairplot": 54, "hue": 54, "palet": 54, "tab10": 54, "axisgridi": 54, "pairgridi": 54, "0x1c92dbc4188": 54, "plots": [54, 56], "sometimes": 54, "intertwinedi": 54, "especially": [54, 60], "regardingi": 54, "handles": 54, "split": [54, 58, 60, 62, 63], "parts": [54, 60], "former": [54, 55, 62], "verify": [54, 60], "unseen": [54, 60, 61], "ask": 54, "boringi": 54, "job": 54, "reproducip": 54, "model_selection": [54, 58, 60, 62], "train_test_split": [54, 58, 60, 62], "123": 54, "train_features": [54, 55, 58, 60], "test_features": [54, 55, 58, 60], "train_labels": [54, 55, 58, 60, 62, 63], "test_labels": [54, 55, 58, 60, 62, 63], "train_siz": [54, 58, 60], "simplicity": [54, 57], "tweak": 54, "suppress": [54, 56], "printingi": 54, "performs": [54, 60, 61], "analyze": [54, 61], "scores": 54, "train_score_c4": 54, "test_score_c4": 54, "2f": [54, 55, 56, 63], "99": 54, "97": [54, 62], "startingi": 54, "newcomers": 54, "who": 54, "exam": 54, "comprises": 54, "central": 54, "meaningi": [54, 62], "consists": [54, 57, 63], "bits": 54, "crucial": [54, 57], "embeddingi": 54, "role": [54, 63], "operates": 54, "world": 54, "immediately": 54, "analogu": 54, "layers": [54, 62, 63], "tunable": 54, "characterizes": 54, "trial": 54, "widely": 54, "term": [54, 63], "reader": 54, "decompos": [54, 56, 62, 63], "constituent": 54, "giv": [54, 63], "flavor": 54, "fold": 54, "closely": 54, "placeholders": 54, "pay": 54, "attention": [54, 57], "repetitiv": 54, "repetitions": [54, 56], "namedi": 54, "faster": [54, 58], "free": 54, "100": [54, 55, 57, 58, 60, 62], "computer": [54, 63], "backedi": 54, "signatur": 54, "ready": [54, 56], "stands": 54, "enough": [54, 56, 61], "omit": 54, "earlier": [54, 60], "patient": [54, 56, 61, 62], "history": [54, 57], "elapsedi": [54, 56, 63], "roundu": [54, 62], "seconds": [54, 63], "303": 54, "train_score_q4": 54, "test_score_q4": 54, "85": 54, "87": 54, "specifies": 54, "gate": [54, 62, 63], "entanglement": [54, 55, 57], "adds": 54, "come": [54, 63], "bunch": 54, "expect": [54, 61], "additionally": 54, "increasedi": 54, "executions": 54, "deterministically": 54, "several": [54, 62, 63], "modern": 54, "handle": 54, "recall": 54, "move": 54, "pca": 54, "dimensionality": [54, 55, 62, 63], "reduction": [54, 57], "educational": 54, "saw": [54, 55], "decomposition": [54, 55], "n_components": [54, 55], "scatterplot": 54, "axessubplot": 54, "train_score_c2": 54, "test_score_c2": 54, "90": [54, 57], "comparedi": [54, 62], "deals": 54, "recrea": 54, "run": [54, 57, 58, 61, 62], "fewer": 54, "nicer": [54, 63], "58": 54, "train_score_q2_ra": 54, "test_score_q2_ra": 54, "63": 54, "fair": 54, "coin": 54, "toss": 54, "almost": 54, "flat": 54, "towards": 54, "increasingi": 54, "won": 54, "help": [54, 55, 61], "stay": 54, "efficientsu2": [54, 56], "74": 54, "train_score_q2_eff": 54, "test_score_q2_eff": 54, "78": 54, "80": [54, 57, 60, 61], "unsurprisingly": 54, "yet": 54, "reach": 54, "maturity": 54, "went": 54, "down": [54, 60, 63], "permit": 54, "full": [54, 60, 61, 63], "compromis": 54, "observation": 54, "hyperparameters": 54, "plays": 54, "critical": 54, "searchingi": 54, "techniques": 54, "approaches": 54, "hope": 54, "brief": 54, "leap": 54, "0qiskit0": [54, 55, 57, 58], "9python": [54, 55, 57, 58], "compilerms\u00e7": [54, 57, 58], "1916": [54, 57, 58], "amd64": [54, 57, 58], "augu": [54, 57, 58], "2020": [54, 57, 58], "11oswindowscpus4memory": [54, 57, 58], "837730407714844fri": 54, "06": 54, "gmt": [54, 56, 57, 58, 63], "daylight": [54, 58], "03_quantum_kernel": 55, "content": 55, "opera": 55, "machines": 55, "svms": 55, "commonly": [55, 62, 63], "goal": [55, 56, 61, 63], "boundaries": 55, "separa": [55, 61], "benefit": 55, "formally": 55, "hyperplanes": 55, "easier": [55, 60, 63], "words": [55, 56], "originally": [55, 57], "trick": [55, 58], "unsupervisedi": 55, "partitioningi": 55, "segregatedi": 55, "clusters": 55, "mathematically": 55, "_i": 55, "_j": 55, "fini": 55, "representedi": [55, 56], "ij": [55, 62], "idea": [55, 60], "hilbert": [55, 62, 63], "leveragedi": 55, "exploredi": 55, "introducingi": 55, "reproducibility": [55, 56, 57, 60, 61], "12345": [55, 58, 62], "illustrates": [55, 57], "hoc": [55, 59], "describedi": [55, 56, 62, 63], "subsets": 55, "ad_hoc_da": [55, 59], "adhoc_dimension": [55, 59], "adhoc_total": [55, 59], "coordinates": [55, 57], "plot_features": 55, "ax": [55, 56, 59, 62], "class_label": 55, "marker": [55, 58, 59, 60], "face": 55, "coordina": 55, "plot_dataset": [55, 60], "ylim": [55, 59], "xlim": [55, 59], "imshow": [55, 57, 59, 62, 63], "asmatrix": [55, 59], "interpolation": [55, 59], "origi": [55, 59], "cmap": [55, 56, 57, 58, 59], "rdbu": [55, 58, 59], "extent": [55, 59], "legendi": [55, 56, 58, 59, 60, 61], "bbox_to_anchor": [55, 58, 59, 60], "loc": [55, 56, 58, 59, 60], "borderaxespad\u0131": [55, 58, 59, 60], "actually": [55, 61], "subrout": 55, "adhoc_feature_map": 55, "adhoc_kernel": 55, "ways": 55, "precomputingi": 55, "adhoc_sv\u00e7": 55, "adhoc_score_callable_function": 55, "precompu": 55, "visualiz": [55, 56], "graphically": 55, "adhoc_matrix_train": 55, "adhoc_matrix_test": 55, "fig": [55, 56, 57, 59, 62, 63], "axs": 55, "subplots": [55, 56, 57, 59, 62, 63], "blues": 55, "set_tit": [55, 56, 57, 62, 63], "reds": 55, "adhoc_score_precomputed_kernel": 55, "alternativ": [55, 58, 63], "extension": [55, 60], "qsvc_score": 55, "achiev": 55, "falls": 55, "category": 55, "provi": [55, 57, 61], "adhoc_matrix": 55, "greens": 55, "mutual": 55, "know": [55, 57], "prior": 55, "cluster": 55, "spectralclusteringi": 55, "metrics": [55, 59, 61], "normalized_mutual_info_scor": 55, "adhoc_spectral": 55, "affinity": 55, "cluster_labels": 55, "fit_predict": 55, "cluster_scor": 55, "7287008798015754": 55, "approach": [55, 60, 62], "axes": [55, 57], "performedi": [55, 58, 59, 63], "simp": [55, 63], "rather": 55, "resembles": 55, "zero": [55, 63], "ultima": 55, "proceedi": [55, 61], "qpca_kernel": 55, "matrix_train": 55, "matrix_test": 55, "kernelpca": 55, "rbf": 55, "popu": [55, 57], "whereas": 55, "fails": 55, "succeeds": 55, "mostly": 55, "visualization": [55, 57, 58, 59], "becomes": 55, "tractable": 55, "logisti\u00e7": 55, "logisticregression": 55, "kernel_pca_rbf": 55, "train_features_rbf": 55, "test_features_rbf": 55, "kernel_pca_q": 55, "train_features_q": 55, "test_features_q": 55, "linear_model": 55, "logistic_regression": 55, "logistic_scor": 55, "q_ax": 55, "rbf_ax": 55, "set_ylabel": [55, 56, 59], "set_xlabel": [55, 56, 59], "projection": [55, 56], "kpca": 55, "plottingi": [55, 56, 60, 62, 63], "mesh": [55, 58], "x_min": 55, "x_max": 55, "y_min": 55, "y_max": 55, "xx": 55, "yy": 55, "meshgridi": [55, 56, 58], "arange": [55, 58, 63], "c_": 55, "ravel": [55, 58], "contourf": 55, "alpha": [55, 62], "he": [55, 56, 62], "why": [55, 57, 61, 63], "reviewedi": 55, "fundamentals": 55, "vs": 55, "investigatedi": 55, "tackledi": 55, "agglomerativ": 55, "1qiskit": [55, 56, 57, 63], "2qiskit": [55, 63], "compilergc\u00e7": [55, 62], "0python": [55, 62], "40oslinuxcpus10memory": 55, "394691467285156wed": 55, "feb": [55, 56], "04_torch_qga": 56, "adversarial": 56, "represtation": 56, "hybrid": [56, 60], "modelingi": 56, "interplay": 56, "g_": 56, "d_": 56, "alternatingi": [56, 62], "aims": [56, 63], "tries": [56, 63], "differentia": [56, 61, 62], "tellingi": 56, "final": [56, 59, 61, 62, 63], "approxima": 56, "zoufal": 56, "p_": 56, "descrip": [56, 63], "basis": 56, "aim": [56, 63], "ldots": 56, "close": [56, 62], "lucchi": 56, "woerner": 56, "pricingi": 56, "financial": 56, "derivatives": 56, "multivaria": 56, "equation": 56, "limits_": 56, "items": 56, "x_0": 56, "leq": 56, "p_j": 56, "discre": 56, "resolution": 56, "seeds": 56, "generators": [56, 57, 62], "outcome": [56, 57], "manual_seedi": [56, 57], "discretization": 56, "num_du": 56, "num_discrete_values": 56, "continuous": 56, "pdf": [56, 58], "stats": 56, "multivariate_normal": 56, "coords": 56, "rv": 56, "cov": 56, "grid_elements": 56, "transpose": 56, "til": 56, "repeat": [56, 63], "prob_da": 56, "bell": 56, "shapedi": 56, "bivaria": 56, "mesh_x": 56, "mesh_y": 56, "grid_shap": 56, "subplot_kw": [56, 62], "3d": [56, 61], "prob_gridi": 56, "surf": 56, "plot_surface": 56, "coolwarm": 56, "linewidth": 56, "antialiasedi": 56, "colorbar": 56, "shrink": 56, "aspect": [56, 62], "boldsymbol": 56, "theta_1": 56, "theta_k": 56, "r_y": 56, "r_z": 56, "rotations": 56, "notably": 56, "carefully": 56, "depth": 56, "depths": 56, "structures": 56, "able": [56, 57, 61, 62, 63], "adequately": 56, "capture": 56, "appears": 56, "definingi": [56, 63], "multinomial": 56, "10000": [56, 61], "create_generator": 56, "__init__": [56, 57, 59], "input_siz": 56, "linear_input": 56, "leaky_relu": 56, "leakyrelu": 56, "linear20": 56, "sigmoidi": 56, "sum_jp_j": 56, "y_j": 56, "binary_cross_entropy": 56, "differentiap": 56, "adversarial_loss": 56, "bce_loss": 56, "weighted_loss": 56, "total_loss": [56, 57], "mome": 56, "ada": [56, 57], "kingma": 56, "stochasti\u00e7": 56, "opt": [56, 57, 62, 63], "lr": [56, 57], "rate": 56, "b1": 56, "b2": 56, "999": 56, "generator_optimizer": 56, "betas": 56, "weight_decay": 56, "005": 56, "discriminator_optimizer": 56, "happeningi": 56, "evolution": 56, "relativ": 56, "epoch": [56, 57], "comple": 56, "begins": 56, "collectedi": 56, "across": 56, "epochs": [56, 57], "plot_training_progress": 56, "generator_loss_values": 56, "ax1": [56, 63], "ax2": [56, 63], "royalblue": 56, "discriminator_loss_values": 56, "mage": 56, "entropy_values": 56, "monitor": [56, 61], "describes": 56, "benchmark": 56, "far": 56, "away": 56, "n_epochs": 56, "num_qnn_outputs": 56, "fake": 56, "configur": 56, "real_dist": 56, "disc_value": 56, "gen_dist": 56, "zero_grad\u0131": [56, 57], "generator_loss": 56, "detach": [56, 57], "retain_graph": 56, "real_loss": 56, "fake_loss": 56, "discriminator_loss": 56, "entropy_value": 56, "sec": 56, "70": [56, 57], "86": 56, "cdf": 56, "autograd\u0131": [56, 57], "turnedi": 56, "off": [56, 60, 61], "anymore": 56, "no_grad\u0131": [56, 57], "generated_probabilities": 56, "careful": 56, "third": [56, 62], "plottedi": 56, "cdfs": 56, "pretty": [56, 58], "gen_prob_gridi": 56, "cums": 56, "add_subplot": 56, "set_zl": 56, "real_prob_gridi": 56, "ax3": 56, "channel": 56, "presents": 56, "standingi": 56, "discusses": 56, "mathscr": 56, "poly": 56, "advantageous": 56, "09": [56, 57, 62], "05_torch_connector": 57, "natural": 57, "seamlessly": 57, "incorporatedi": 57, "jointly": 57, "considerations": 57, "enablingi": 57, "novel": 57, "engi": 57, "link": 57, "typical": [57, 63], "cnn": [57, 62], "architectur": [57, 63], "necessary": [57, 61, 63], "imports": [57, 59, 60, 61], "mseloss": 57, "lbfgs": 57, "illustra": [57, 59], "select": [57, 59], "convert": [57, 58], "y01_": 57, "linkingi": 57, "straightforward\u0131": 57, "qnn1": 57, "declar": 57, "model1": 57, "01256962": 57, "06653564": 57, "04005302": 57, "03752667": 57, "06645196": 57, "06095287": 57, "02250432": 57, "04233438": 57, "3285": 57, "grad_fn": 57, "_torchnnfunctionbackward\u0131": 57, "determiningi": [57, 62, 63], "success": 57, "sgd": 57, "adagrad\u0131": 57, "bfgs": 57, "modules": 57, "losses": 57, "clarification": 57, "thumb": [57, 60], "mse": 57, "recommendation": 57, "assumption": 57, "wonderingi": 57, "reaso": [57, 63], "experiment": 57, "impact": 57, "f_loss": 57, "mode": 57, "stable": 57, "reevalua": 57, "closure": 57, "recompu": 57, "step4": 57, "535646438598633": 57, "696760177612305": 57, "039228439331055": 57, "687908172607422": 57, "267208099365234": 57, "025373458862305": 57, "154708862304688": 57, "337854385375977": 57, "082578659057617": 57, "073287963867188": 57, "21839141845703": 57, "992582321166992": 57, "929339408874512": 57, "914533615112305": 57, "907636642456055": 57, "902364730834961": 57, "902134895324707": 57, "90211009979248": 57, "902111053466797": 57, "5356": 57, "mselossbackward0": 57, "eval": 57, "sign": 57, "circles": 57, "correct": 57, "returningi": 57, "info": 57, "official": 57, "dim": 57, "qnn2": 57, "reminder": 57, "model2": 57, "0364991": 57, "0720495": 57, "06001836": 57, "09852755": 57, "choices": 57, "back": [57, 61, 62], "set_to_no": 57, "6925069093704224": 57, "6881508231163025": 57, "6516683101654053": 57, "6485998034477234": 57, "6394743919372559": 57, "7057444453239441": 57, "669085681438446": 57, "766187310218811": 57, "7188469171524048": 57, "7919709086418152": 57, "7598814964294434": 57, "7028256058692932": 57, "7486447095870972": 57, "6890242695808411": 57, "7760348916053772": 57, "7892935276031494": 57, "7556288242340088": 57, "7058126330375671": 57, "7203161716461182": 57, "7030722498893738": 57, "argmax": 57, "wave": 57, "loop": [57, 62], "analogous": 57, "little": 57, "qnn3": 57, "model3": 57, "batch": 57, "947757720947266": 57, "948650360107422": 57, "952412605285645": 57, "37905153632164": 57, "24995625019073486": 57, "2483610212802887": 57, "24835753440856934": 57, "9478": 57, "imag\u0131": [57, 62, 63], "handwrit": [57, 62, 63], "digits": [57, 62, 63], "explanation": 57, "textbook": 57, "relatedi": 57, "cat": [57, 62], "dataloader": 57, "torchvision": 57, "transforms": [57, 62], "conv2d": 57, "dropout2du": 57, "nllloss": 57, "maxpool2du": 57, "flatte": 57, "sequential": 57, "relu": 57, "functional": 57, "api": 57, "shuffle": [57, 58], "concentra": 57, "download\u0131": 57, "totensor": 57, "filter": 57, "leavingi": [57, 63], "idx": 57, "filteredi": 57, "train_loader": 57, "quick": 57, "images": [57, 62, 63], "0s": 57, "1s": 57, "n_samples_show": 57, "data_iter": 57, "iter": 57, "nrows": 57, "ncols": 57, "__next__": 57, "gray": 57, "set_xticks": 57, "set_yticks": 57, "x_test": [57, 59], "test_loader": 57, "initializingi": [57, 63], "adequa": 57, "create_qn": [57, 60], "backprop": 57, "qnn4": 57, "net": [57, 60], "conv1": 57, "kernel_siz": 57, "conv2": 57, "dropout": 57, "fc1": 57, "256": 57, "fc2": 57, "fc3": 57, "max_pool2du": 57, "view": 57, "model4": 57, "001": 57, "loss_list": 57, "batch_idx": 57, "0f": 57, "tloss": 57, "4f": [57, 61], "1630": 57, "5294": 57, "7855": 57, "9863": 57, "2257": 57, "4513": 57, "6758": 57, "8832": 57, "1006": 57, "3061": 57, "neg": 57, "likelihoodu": 57, "recommendations": [57, 60], "state_dict": [57, 60], "pt": [57, 60], "recreatingi": 57, "vi\u00e7": 57, "qnn5": 57, "model5": 57, "load_state_dict": [57, 60], "keys": 57, "matchedi": 57, "successfully": 57, "pred": 57, "eq": 57, "view_as": 57, "taccuracy": 57, "1f": 57, "3585": 57, "break": 57, "luck": 57, "837730407714844thu": [57, 58], "03": [57, 60], "07_pegasos_qsv\u00e7": 58, "benefits": 58, "home": 58, "ttic": 58, "edu": 58, "nati": 58, "publications": 58, "pegasosmpp": 58, "dual": 58, "independent": 58, "pegasosqsv\u00e7": 58, "sufficiently": 58, "compatibility": 58, "feature_range": 58, "tau": 58, "last": [58, 62, 63], "hyperparameter": 58, "trains": 58, "afterwards": 58, "pegasos_scor": 58, "predefinedi": 58, "spans": 58, "grid_step": 58, "grid_x": 58, "grid_y": 58, "coloringi": 58, "meshgrid_features": 58, "column_stack": 58, "meshgrid_colors": 58, "colors": 58, "pcolormesh": 58, "shadingi": 58, "auto": 58, "08_quantum_kernel_trainer": 59, "qka": 59, "iteratively": 59, "adapts": 59, "convergingi": 59, "preprint": 59, "covariant": 59, "group": 59, "pylab": 59, "circuit_drawer": 59, "qktcallback": 59, "wrapper": 59, "_da": 59, "x0": [59, 63], "x1": 59, "x2": 59, "x3": 59, "x4": 59, "stepsiz": 59, "acceptedi": 59, "get_callback_da": 59, "clear_callback_da": 59, "ad_ho\u00e7": 59, "py": 59, "y_test": 59, "encodes": 59, "rotational": 59, "rotate": 59, "amount": [59, 60, 62, 63], "fm0": 59, "fm1": 59, "holds": 59, "manages": 59, "selectingi": 59, "cb_qkt": 59, "spsa_opt": 59, "learning_ra": 59, "perturbation": 59, "qkt": 59, "qka_results": 59, "4745458584261386": 59, "47454586": 59, "399057680986741": 59, "trainable_fidelity_quantum_kernel": 59, "0x7f84c120feb0": 59, "labels_test": 59, "evalau": 59, "accuracy_test": 59, "balanced_accuracy_scor": 59, "evolves": 59, "reaches": 59, "measur": [59, 61, 62, 63], "similarity": 59, "font": 59, "colormaps": 59, "bwr": 59, "tight_layout": 59, "09_saving_and_loading_models": 60, "significant": 60, "investedi": 60, "res": 60, "cover": 60, "heavily": 60, "preparation": 60, "cell": 60, "onehotencoder": 60, "sampler1": 60, "sampler2": 60, "transformations": 60, "summingi": 60, "79067335": 60, "44566143": 60, "88072937": 60, "7126244": 60, "06741233": 60, "7770372": 60, "80422817": 60, "10351936": 60, "45754615": 60, "reshapedi": 60, "encoder": [60, 63], "deci": 60, "sparse_output": 60, "behaves": 60, "solidi": 60, "blue": 60, "dots": 60, "green": 60, "objective_values": 60, "minor": 60, "tweaks": 60, "objective_value": 60, "stage1_le": 60, "stage1_x": 60, "stage1_y": 60, "stage2_le": 60, "stage2_x": 60, "stage2_y": 60, "orange": 60, "purple": 60, "original_optimizer": 60, "asarray": [60, 62], "original_classifier": 60, "0x7fb74126db20": 60, "8333333333333334": 60, "vqc_classifier": 60, "loaded_classifier": 60, "alter": [60, 62], "beginningi": [60, 63], "finishedi": 60, "0x7fb7411cb760": 60, "misclassifiedi": 60, "infer": 60, "train_predicts": 60, "test_predicts": 60, "highlight": 60, "incorrectly": 60, "0x7fb6e04c2eb0": 60, "snippet": [60, 61], "pseudo": 60, "new_qnn": 60, "loaded_model": 60, "51": 60, "10_effective_dimension": 61, "localeffectivedimension": 61, "geometry": 61, "connect": 61, "expressibility": 61, "divingi": 61, "explain": [61, 63], "generalizingi": 61, "insights": 61, "assess": 61, "matter": 61, "authors": 61, "indicator": 61, "proposedi": [61, 62], "capacity": 61, "bounds": 61, "analyzedi": 61, "incorporates": 61, "expressiv": 61, "terms": [61, 62], "practical": 61, "captures": 61, "sensitiv": 61, "averagingi": 61, "dividingi": 61, "formul": 61, "sent": 61, "sampledi": 61, "global_edi": 61, "affects": 61, "5000": 61, "8000": 61, "40000": 61, "60000": 61, "100000": 61, "150000": 61, "200000": 61, "500000": 61, "1000000": 61, "global_eff_dim_0": 61, "practically": 61, "correlates": 61, "6657": 61, "7776": 61, "global_eff_dim_1": 61, "66565096": 61, "7133723": 61, "73782922": 61, "89963559": 61, "94632272": 61, "00280009": 61, "04530433": 61, "07408394": 61, "15786005": 61, "21349874": 61, "expressiveness": 61, "enforces": 61, "constraint": 61, "conceptually": 61, "sharedi": 61, "n_informativ": 61, "fashion": 61, "96": 61, "trained_weights": 61, "local_ed_trainedi": 61, "local_eff_dim_trainedi": 61, "38001027": 61, "38667693": 61, "39017714": 61, "41507888": 61, "42307677": 61, "43341398": 61, "44170977": 61, "44758111": 61, "46577231": 61, "4786767": 61, "local_ed_untrainedi": 61, "local_eff_dim_untrainedi": 61, "69803061": 61, "7130991": 61, "7203237": 61, "76321615": 61, "77452215": 61, "7877625": 61, "79746712": 61, "8039319": 61, "82236146": 61, "83435907": 61, "decrea": [61, 62], "lookingi": [61, 63], "overfits": 61, "badly": 61, "certain": [61, 62], "regulariz": 61, "inherently": 61, "reduces": [61, 62], "logi\u00e7": 61, "initializedi": 61, "likely": 61, "unnecessarily": 61, "implicit": 61, "inactiv": 61, "intuition": 61, "selectedi": 61, "happens": 61, "11_quantum_convolutional_neural_networks": 62, "throughout": [62, 63], "discuss": 62, "cong": 62, "horizontal": 62, "vertical": 62, "lines": 62, "pixelatedi": 62, "dividedi": [62, 63], "accordingly": 62, "olu\u015fturma": 62, "olu\u015fturulmas": 62, "e\u011fitme": 62, "edilmes": 62, "importingi": [62, 63], "libraries": [62, 63], "json": [62, 63], "ccnns": 62, "audio": 62, "types": 62, "dog": 62, "detect": 62, "associa": 62, "fc": 62, "detection": [62, 63], "demonstratedi": 62, "th": 62, "recognizes": 62, "plane": 62, "reducingi": [62, 63], "cost": [62, 63], "schemati\u00e7": 62, "demonstration": 62, "decreasingi": 62, "behav": 62, "until": [62, 63], "remainingi": [62, 63], "consist": [62, 63], "operators": 62, "relationships": 62, "upo": 62, "disregard\u0131": [62, 63], "stop": 62, "discussedi": 62, "adjustingi": [62, 63], "detects": 62, "gellmann": 62, "pauli": 62, "actingi": 62, "decomposedi": 62, "a_1": 62, "a_2": 62, "cdot": 62, "beta": 62, "gamma": 62, "a_3": 62, "a_4": 62, "sigma_x": 62, "sigma_y": 62, "sigma_z": 62, "evident": 62, "implies": 62, "span": 62, "tuningi": [62, 63], "difficult": 62, "overco": 62, "subspace": 62, "unitaries": 62, "neighboringi": 62, "restrictingi": 62, "solution": 62, "purpose": 62, "conv_circuit": 62, "style": 62, "cliffordu": 62, "conv_layer": 62, "odd": 62, "circu": 62, "couplingi": 62, "coupledi": 62, "barriers": [62, 63], "extractedi": 62, "param_prefix": 62, "param_index": 62, "q1": 62, "q2": 62, "barrier": [62, 63], "qc_inst": 62, "to_instruction": 62, "retainingi": [62, 63], "decreases": 62, "artificially": 62, "initially": [62, 63], "pairingi": 62, "generalizedi": 62, "ignor": 62, "remainder": [62, 63], "dynami\u00e7": 62, "involve": 62, "havingi": [62, 63], "feedback": 62, "pool_circuit": 62, "neglect": 62, "q0": 62, "pool_layer": 62, "sources": 62, "sinks": 62, "sink": 62, "neglectedi": 62, "straight": 62, "curves": 62, "relationship": 62, "consider": 62, "distinguish": 62, "placedi": 62, "anywher": 62, "alongsi": 62, "noisy": [62, 63], "pixels": [62, 63], "assigningi": 62, "pixel": 62, "generate_dataset": 62, "num_images": 62, "hor_array": 62, "ver_array": 62, "rng": 62, "random_imag\u0131": 62, "elif": 62, "vary": [62, 63], "train_images": [62, 63], "test_images": [62, 63], "246": 62, "xticks": 62, "yticks": 62, "subplots_adjust": 62, "wspace": 62, "hspace": 62, "025": 62, "k\u00fcme": 62, "g\u00f6r\u00fcn": 62, "piksel": 62, "i\u00e7erdik": 62, "miz": 62, "k\u00fcbit": 62, "kullanacak": 62, "analyzingi": 62, "obtains": 62, "greatest": 62, "eight": 62, "sonraki": 62, "veri": 62, "olu\u015fturmak": 62, "measurement": 62, "c1": 62, "p1": 62, "c2": 62, "p2": 62, "c3": 62, "p3": 62, "copyingi": 62, "e\u011fitir": 62, "ger": 62, "\u00e7a\u011f\u0131rma": 62, "fonksiyo": 62, "tan\u0131mlayacak": 62, "yinele": 62, "kay\u0131p": 62, "g\u00f6r\u00fcnt\u00fcleme": 62, "\u00e7izme": 62, "olanak": 62, "tan\u0131r": 62, "\u00f6rnek": 62, "s\u0131n\u0131fland\u0131rmak": 62, "yayg\u0131": 62, "kullan\u0131la": 62, "say\u0131sal": 62, "optimizasyo": 62, "y\u00f6nte": 62, "s\u0131n\u0131fland\u0131r\u0131\u00e7": 62, "e\u011fitmek": 62, "edici": 62, "place": [62, 63], "11_qcnn_initial_point": 62, "slowly": 62, "93": 62, "indeedi": [62, 63], "congratulations": 62, "luk": 62, "nat": 62, "phys": 62, "1273": 62, "1278": 62, "doi": 62, "1038": 62, "s41567": 62, "019": 62, "0648": 62, "va": 62, "farrokh": 62, "col": 62, "williams": 62, "physical": 62, "review": 62, "69": 62, "2004": 62, "032315": 62, "informationsoftwareversionqiskit1": 62, "dev0": 62, "737f21bqiskit_algorithms0": 62, "0qiskit_machine_learning0": 62, "7python": 62, "58oslinuxcpus2memory": 62, "792198181152344thu": 62, "dec": 62, "53": 62, "est": 62, "12_quantum_autoencoder": 63, "compress": 63, "discussion": 63, "broke": 63, "cae": 63, "efficiently": 63, "uncompress": 63, "decoder": 63, "autoencoders": 63, "bottleneck": 63, "travels": 63, "compressedi": 63, "caes": 63, "reconstructedi": 63, "denoisingi": 63, "anomaly": 63, "facial": 63, "pictorial": 63, "similarities": 63, "psi": 63, "wish": 63, "act": 63, "compresses": 63, "psi_": 63, "reconstructs": 63, "subtleties": 63, "middle": 63, "auxiliary": 63, "register": 63, "math": 63, "involvedi": 63, "skip": 63, "interestedi": 63, "subsystems": 63, "subsyste": 63, "latent": 63, "trash": 63, "ab": 63, "devi\u00e7": 63, "maximally": 63, "rho_": 63, "tr": 63, "a_": 63, "complicatedi": 63, "deeper": 63, "comparingi": 63, "optimally": 63, "keepingi": 63, "denotedi": 63, "doingi": 63, "includedi": 63, "cnot": 63, "runningi": 63, "warnings": 63, "classicalregister": 63, "quantumregister": 63, "rawfeaturevector": 63, "realamplitu": 63, "reasons": 63, "preparedi": 63, "connectivity": 63, "hard": 63, "repetition": 63, "allowingi": 63, "greater": 63, "flexibility": 63, "circ": 63, "00111": 63, "auto_encoder_circuit": 63, "num_latent": 63, "num_trash": 63, "qr": 63, "q": 63, "cr": 63, "auxiliary_qubit": 63, "cswap": 63, "reconstruct": 63, "adjoint": 63, "exclu": 63, "domain_wall": 63, "domain_wall_circuit": 63, "ae": 63, "penaliz": 63, "identity_interpret": 63, "twi\u00e7": 63, "cost_func_domain": 63, "params_values": 63, "opt_result": 63, "convergedi": 63, "resettingi": 63, "hermitian": 63, "conjugate": 63, "decodingi": 63, "test_qc": 63, "ansatz_q\u00e7": 63, "reset": 63, "inver": 63, "domain_wall_sta": 63, "output_state": 63, "conj": 63, "9832814006314854": 63, "givingi": 63, "amplitu": 63, "zero_idx": 63, "one_idx": 63, "get_dataset_digits": 63, "insert": 63, "sum_sq": 63, "wri": 63, "digit": 63, "circuitqn": 63, "cost_func_digits": 63, "12_qae_initial_point": 63, "fun": 63, "periodu": 63, "original_q\u00e7": 63, "original_sv": 63, "param_values": 63, "concatena": 63, "output_q\u00e7": 63, "output_sv": 63, "ideas": 63, "hugely": 63, "beneficial": 63, "near": 63, "systems": 63, "prone": 63, "neglectingi": 63, "chemistry": 63, "hubbard\u0131": 63, "electro": 63, "interactions": 63, "molecules": 63, "wik": 63, "romero": 63, "jonatha": 63, "olso": 63, "ala": 63, "aspur": 63, "guzik": 63, "scie": 63, "technology": 63, "045001": 63, "algoritmas": 63, "swap_test": 63}, "objects": {"": [[0, 0, 0, "-", "qiskit_machine_learning"]], "qiskit_machine_learning": [[15, 1, 1, "", "QiskitMachineLearningError"], [1, 0, 0, "-", "algorithms"], [3, 0, 0, "-", "connectors"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "kernels"], [7, 0, 0, "-", "neural_networks"], [8, 0, 0, "-", "utils"]], "qiskit_machine_learning.QiskitMachineLearningError": [[15, 2, 1, "", "add_note"], [15, 2, 1, "", "with_traceback"]], "qiskit_machine_learning.algorithms": [[16, 3, 1, "", "BinaryObjectiveFunction"], [17, 3, 1, "", "MultiClassObjectiveFunction"], [18, 3, 1, "", "NeuralNetworkClassifier"], [19, 3, 1, "", "NeuralNetworkRegressor"], [20, 3, 1, "", "ObjectiveFunction"], [21, 3, 1, "", "OneHotObjectiveFunction"], [22, 3, 1, "", "PegasosQSVC"], [23, 3, 1, "", "QSVC"], [24, 3, 1, "", "QSVR"], [25, 3, 1, "", "SerializableModelMixin"], [26, 3, 1, "", "TrainableModel"], [27, 3, 1, "", "VQC"], [28, 3, 1, "", "VQR"]], "qiskit_machine_learning.algorithms.BinaryObjectiveFunction": [[16, 2, 1, "", "gradient"], [16, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction": [[17, 2, 1, "", "gradient"], [17, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.NeuralNetworkClassifier": [[18, 4, 1, "", "callback"], [18, 2, 1, "", "fit"], [18, 4, 1, "", "fit_result"], [18, 4, 1, "", "initial_point"], [18, 2, 1, "", "load"], [18, 4, 1, "", "loss"], [18, 4, 1, "", "neural_network"], [18, 4, 1, "", "num_classes"], [18, 4, 1, "", "optimizer"], [18, 2, 1, "", "predict"], [18, 2, 1, "", "save"], [18, 2, 1, "", "score"], [18, 4, 1, "", "warm_start"], [18, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.NeuralNetworkRegressor": [[19, 4, 1, "", "callback"], [19, 2, 1, "", "fit"], [19, 4, 1, "", "fit_result"], [19, 4, 1, "", "initial_point"], [19, 2, 1, "", "load"], [19, 4, 1, "", "loss"], [19, 4, 1, "", "neural_network"], [19, 4, 1, "", "optimizer"], [19, 2, 1, "", "predict"], [19, 2, 1, "", "save"], [19, 2, 1, "", "score"], [19, 4, 1, "", "warm_start"], [19, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.ObjectiveFunction": [[20, 2, 1, "", "gradient"], [20, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.OneHotObjectiveFunction": [[21, 2, 1, "", "gradient"], [21, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.PegasosQSVC": [[22, 4, 1, "", "FITTED"], [22, 4, 1, "", "UNFITTED"], [22, 2, 1, "", "decision_function"], [22, 2, 1, "", "fit"], [22, 2, 1, "", "load"], [22, 4, 1, "", "num_steps"], [22, 4, 1, "", "precomputed"], [22, 2, 1, "", "predict"], [22, 4, 1, "", "quantum_kernel"], [22, 2, 1, "", "save"], [22, 2, 1, "", "score"]], "qiskit_machine_learning.algorithms.QSVC": [[23, 4, 1, "", "coef_"], [23, 2, 1, "", "decision_function"], [23, 2, 1, "", "fit"], [23, 2, 1, "", "get_metadata_routing"], [23, 2, 1, "", "get_params"], [23, 2, 1, "", "load"], [23, 4, 1, "", "n_support_"], [23, 2, 1, "", "predict"], [23, 2, 1, "", "predict_log_proba"], [23, 2, 1, "", "predict_proba"], [23, 4, 1, "", "probA_"], [23, 4, 1, "", "probB_"], [23, 4, 1, "", "quantum_kernel"], [23, 2, 1, "", "save"], [23, 2, 1, "", "score"], [23, 2, 1, "", "set_fit_request"], [23, 2, 1, "", "set_params"], [23, 2, 1, "", "set_score_request"], [23, 4, 1, "", "unused_param"]], "qiskit_machine_learning.algorithms.QSVR": [[24, 4, 1, "", "class_weight_"], [24, 4, 1, "", "coef_"], [24, 2, 1, "", "fit"], [24, 2, 1, "", "get_metadata_routing"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "load"], [24, 4, 1, "", "n_support_"], [24, 2, 1, "", "predict"], [24, 4, 1, "", "quantum_kernel"], [24, 2, 1, "", "save"], [24, 2, 1, "", "score"], [24, 2, 1, "", "set_fit_request"], [24, 2, 1, "", "set_params"], [24, 2, 1, "", "set_score_request"], [24, 4, 1, "", "unused_param"]], "qiskit_machine_learning.algorithms.SerializableModelMixin": [[25, 2, 1, "", "load"], [25, 2, 1, "", "save"]], "qiskit_machine_learning.algorithms.TrainableModel": [[26, 4, 1, "", "callback"], [26, 2, 1, "", "fit"], [26, 4, 1, "", "fit_result"], [26, 4, 1, "", "initial_point"], [26, 2, 1, "", "load"], [26, 4, 1, "", "loss"], [26, 4, 1, "", "neural_network"], [26, 4, 1, "", "optimizer"], [26, 2, 1, "", "predict"], [26, 2, 1, "", "save"], [26, 2, 1, "", "score"], [26, 4, 1, "", "warm_start"], [26, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.VQC": [[27, 4, 1, "", "ansatz"], [27, 4, 1, "", "callback"], [27, 4, 1, "", "circuit"], [27, 4, 1, "", "feature_map"], [27, 2, 1, "", "fit"], [27, 4, 1, "", "fit_result"], [27, 4, 1, "", "initial_point"], [27, 2, 1, "", "load"], [27, 4, 1, "", "loss"], [27, 4, 1, "", "neural_network"], [27, 4, 1, "", "num_classes"], [27, 4, 1, "", "num_qubits"], [27, 4, 1, "", "optimizer"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "save"], [27, 2, 1, "", "score"], [27, 4, 1, "", "warm_start"], [27, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.VQR": [[28, 4, 1, "", "ansatz"], [28, 4, 1, "", "callback"], [28, 4, 1, "", "feature_map"], [28, 2, 1, "", "fit"], [28, 4, 1, "", "fit_result"], [28, 4, 1, "", "initial_point"], [28, 2, 1, "", "load"], [28, 4, 1, "", "loss"], [28, 4, 1, "", "neural_network"], [28, 4, 1, "", "num_qubits"], [28, 4, 1, "", "optimizer"], [28, 2, 1, "", "predict"], [28, 2, 1, "", "save"], [28, 2, 1, "", "score"], [28, 4, 1, "", "warm_start"], [28, 4, 1, "", "weights"]], "qiskit_machine_learning.circuit": [[2, 0, 0, "-", "library"]], "qiskit_machine_learning.circuit.library": [[29, 3, 1, "", "QNNCircuit"], [30, 3, 1, "", "RawFeatureVector"]], "qiskit_machine_learning.circuit.library.QNNCircuit": [[29, 4, 1, "", "ansatz"], [29, 4, 1, "", "feature_map"], [29, 4, 1, "", "input_parameters"], [29, 4, 1, "", "num_input_parameters"], [29, 4, 1, "", "num_qubits"], [29, 4, 1, "", "num_weight_parameters"], [29, 4, 1, "", "weight_parameters"]], "qiskit_machine_learning.circuit.library.RawFeatureVector": [[30, 4, 1, "", "feature_dimension"], [30, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.connectors": [[31, 3, 1, "", "TorchConnector"]], "qiskit_machine_learning.connectors.TorchConnector": [[31, 2, 1, "", "forward"], [31, 4, 1, "", "neural_network"], [31, 4, 1, "", "sparse"], [31, 4, 1, "", "weight"]], "qiskit_machine_learning.datasets": [[32, 5, 1, "", "ad_hoc_data"]], "qiskit_machine_learning.kernels": [[33, 3, 1, "", "BaseKernel"], [34, 3, 1, "", "FidelityQuantumKernel"], [35, 3, 1, "", "FidelityStatevectorKernel"], [36, 3, 1, "", "TrainableFidelityQuantumKernel"], [37, 3, 1, "", "TrainableFidelityStatevectorKernel"], [38, 3, 1, "", "TrainableKernel"], [6, 0, 0, "-", "algorithms"]], "qiskit_machine_learning.kernels.BaseKernel": [[33, 4, 1, "", "enforce_psd"], [33, 2, 1, "", "evaluate"], [33, 4, 1, "", "feature_map"], [33, 4, 1, "", "num_features"]], "qiskit_machine_learning.kernels.FidelityQuantumKernel": [[34, 4, 1, "", "enforce_psd"], [34, 2, 1, "", "evaluate"], [34, 4, 1, "", "evaluate_duplicates"], [34, 4, 1, "", "feature_map"], [34, 4, 1, "", "fidelity"], [34, 4, 1, "", "num_features"]], "qiskit_machine_learning.kernels.FidelityStatevectorKernel": [[35, 2, 1, "", "clear_cache"], [35, 4, 1, "", "enforce_psd"], [35, 2, 1, "", "evaluate"], [35, 4, 1, "", "feature_map"], [35, 4, 1, "", "num_features"]], "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel": [[36, 2, 1, "", "assign_training_parameters"], [36, 4, 1, "", "enforce_psd"], [36, 2, 1, "", "evaluate"], [36, 4, 1, "", "evaluate_duplicates"], [36, 4, 1, "", "feature_map"], [36, 4, 1, "", "fidelity"], [36, 4, 1, "", "num_features"], [36, 4, 1, "", "num_training_parameters"], [36, 4, 1, "", "parameter_values"], [36, 4, 1, "", "training_parameters"]], "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel": [[37, 2, 1, "", "assign_training_parameters"], [37, 2, 1, "", "clear_cache"], [37, 4, 1, "", "enforce_psd"], [37, 2, 1, "", "evaluate"], [37, 4, 1, "", "feature_map"], [37, 4, 1, "", "num_features"], [37, 4, 1, "", "num_training_parameters"], [37, 4, 1, "", "parameter_values"], [37, 4, 1, "", "training_parameters"]], "qiskit_machine_learning.kernels.TrainableKernel": [[38, 2, 1, "", "assign_training_parameters"], [38, 4, 1, "", "enforce_psd"], [38, 2, 1, "", "evaluate"], [38, 4, 1, "", "feature_map"], [38, 4, 1, "", "num_features"], [38, 4, 1, "", "num_training_parameters"], [38, 4, 1, "", "parameter_values"], [38, 4, 1, "", "training_parameters"]], "qiskit_machine_learning.kernels.algorithms": [[39, 3, 1, "", "QuantumKernelTrainer"], [40, 3, 1, "", "QuantumKernelTrainerResult"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer": [[39, 2, 1, "", "fit"], [39, 4, 1, "", "initial_point"], [39, 4, 1, "", "loss"], [39, 4, 1, "", "optimizer"], [39, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult": [[40, 2, 1, "", "combine"], [40, 4, 1, "", "optimal_circuit"], [40, 4, 1, "", "optimal_parameters"], [40, 4, 1, "", "optimal_point"], [40, 4, 1, "", "optimal_value"], [40, 4, 1, "", "optimizer_evals"], [40, 4, 1, "", "optimizer_result"], [40, 4, 1, "", "optimizer_time"], [40, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.neural_networks": [[41, 3, 1, "", "EffectiveDimension"], [42, 3, 1, "", "EstimatorQNN"], [43, 3, 1, "", "LocalEffectiveDimension"], [44, 3, 1, "", "NeuralNetwork"], [45, 3, 1, "", "SamplerQNN"]], "qiskit_machine_learning.neural_networks.EffectiveDimension": [[41, 2, 1, "", "get_effective_dimension"], [41, 2, 1, "", "get_fisher_information"], [41, 2, 1, "", "get_normalized_fisher"], [41, 4, 1, "", "input_samples"], [41, 2, 1, "", "run_monte_carlo"], [41, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.EstimatorQNN": [[42, 2, 1, "", "backward"], [42, 4, 1, "", "circuit"], [42, 4, 1, "", "estimator"], [42, 2, 1, "", "forward"], [42, 4, 1, "", "gradient"], [42, 4, 1, "", "input_gradients"], [42, 4, 1, "", "input_params"], [42, 4, 1, "", "num_inputs"], [42, 4, 1, "", "num_weights"], [42, 4, 1, "", "observables"], [42, 4, 1, "", "output_shape"], [42, 4, 1, "", "sparse"], [42, 4, 1, "", "weight_params"]], "qiskit_machine_learning.neural_networks.LocalEffectiveDimension": [[43, 2, 1, "", "get_effective_dimension"], [43, 2, 1, "", "get_fisher_information"], [43, 2, 1, "", "get_normalized_fisher"], [43, 4, 1, "", "input_samples"], [43, 2, 1, "", "run_monte_carlo"], [43, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.NeuralNetwork": [[44, 2, 1, "", "backward"], [44, 2, 1, "", "forward"], [44, 4, 1, "", "input_gradients"], [44, 4, 1, "", "num_inputs"], [44, 4, 1, "", "num_weights"], [44, 4, 1, "", "output_shape"], [44, 4, 1, "", "sparse"]], "qiskit_machine_learning.neural_networks.SamplerQNN": [[45, 2, 1, "", "backward"], [45, 4, 1, "", "circuit"], [45, 2, 1, "", "forward"], [45, 4, 1, "", "gradient"], [45, 4, 1, "", "input_gradients"], [45, 4, 1, "", "input_params"], [45, 4, 1, "", "interpret"], [45, 4, 1, "", "num_inputs"], [45, 4, 1, "", "num_weights"], [45, 4, 1, "", "output_shape"], [45, 4, 1, "", "sampler"], [45, 2, 1, "", "set_interpret"], [45, 4, 1, "", "sparse"], [45, 4, 1, "", "weight_params"]], "qiskit_machine_learning.utils": [[9, 0, 0, "-", "loss_functions"]], "qiskit_machine_learning.utils.loss_functions": [[46, 3, 1, "", "CrossEntropyLoss"], [47, 3, 1, "", "KernelLoss"], [48, 3, 1, "", "L1Loss"], [49, 3, 1, "", "L2Loss"], [50, 3, 1, "", "Loss"], [51, 3, 1, "", "SVCLoss"]], "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss": [[46, 2, 1, "", "evaluate"], [46, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.KernelLoss": [[47, 2, 1, "", "evaluate"]], "qiskit_machine_learning.utils.loss_functions.L1Loss": [[48, 2, 1, "", "evaluate"], [48, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.L2Loss": [[49, 2, 1, "", "evaluate"], [49, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.Loss": [[50, 2, 1, "", "evaluate"], [50, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.SVCLoss": [[51, 2, 1, "", "evaluate"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:method", "3": "py:class", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python mod\u00fcl\u00fc"], "1": ["py", "exception", "Python \u00f6zel durum"], "2": ["py", "method", "Python y\u00f6ntemi"], "3": ["py", "class", "Python s\u0131n\u0131f\u0131"], "4": ["py", "attribute", "Python \u00f6zniteli\u011fi"], "5": ["py", "function", "Python i\u015flevi"]}, "titleterms": {"qiskit": [0, 11, 12, 13, 52, 59, 60, 61], "mach": [0, 1, 2, 52, 54, 55, 60], "learningi": [0, 1, 2, 52, 54, 55, 60], "api": 0, "refere": 0, "module": 0, "qiskit_machine_learningi": [0, 1, 2, 3, 4, 5, 7, 8, 9], "submodules": [0, 5], "quan": [1, 5, 6, 7, 12, 52, 54, 55, 56, 59, 62, 63], "algorithms": [1, 6], "base": [1, 7, 9], "classes": [1, 7, 8, 53], "objectiv": 1, "functions": [1, 8, 9, 55, 56], "classifiers": 1, "regressors": 1, "circuit": [2, 63], "library": 2, "for": [2, 55, 56, 57, 59, 63], "applications": [2, 63], "featur": [2, 59], "maps": 2, "helper": 2, "circuits": 2, "connectors": 3, "datasets": 4, "kernels": [5, 55], "kernel": [6, 12, 55, 59], "neural": [7, 52, 56, 61, 62], "networks": [7, 52, 56, 61, 62], "neural_networks": 7, "network": [7, 56], "metrics": 7, "utility": 8, "and": [8, 55, 56, 57, 59, 60, 62], "utils": [8, 9], "utilities": 8, "loss": [9, 50, 56, 57], "loss_functions": 9, "function": [9, 55, 57], "class": [9, 59], "ba\u015f": 10, "kurul": 10, "i\u0307stek": 10, "ba\u011fl\u0131": 10, "y\u00fckleme": 10, "ba\u015flama": 10, "haz\u0131r": [10, 59, 60], "m\u0131": 10, "mak": [11, 12, 13, 55, 59, 64], "\u00f6\u011frenmes": [11, 12, 13], "genel": [11, 52, 55, 56], "bak\u0131\u015f": [11, 52, 55, 56], "sonraki": 11, "ad\u0131m": 11, "v0": 12, "5": [12, 52, 54, 55, 56, 61, 62, 63], "ge\u00e7i\u015f": [12, 13], "k\u0131lavuz": [12, 13], "giri\u015f": [12, 52, 55, 56, 62], "overview": 12, "of": [12, 54, 55, 56, 61, 62, 63], "the": [12, 54, 55, 56, 57, 59, 61, 63], "primitives": 12, "new": 12, "crea": [12, 56], "a": [12, 52, 53, 54, 55, 56, 57, 59, 62, 63], "dataset": [12, 54, 55], "previous": 12, "implementation": [12, 52], "ye": 12, "kuan": [12, 52, 53, 55, 58, 59, 62], "sinir": [12, 52, 62], "ak": [12, 52, 62], "samplerqn": [12, 45, 52, 53, 57, 61], "buildingi": [12, 63], "classifier": 12, "usingi": 12, "circuitqn": 12, "estimatorqn": [12, 42, 52, 53, 57], "regressor": 12, "opflowqn": 12, "other": 12, "notable": 12, "deprecation": 12, "relea": 14, "notes": 14, "0": 14, "7": [14, 56, 62, 63], "1": [14, 52, 54, 55, 56, 57, 60, 61, 62, 63], "4": [14, 52, 54, 55, 56, 57, 60, 61, 62, 63], "bug": 14, "fixes": 14, "prelu": 14, "qiskitmachinelearningerror": 15, "binaryobjectivefunction": 16, "multiclassobjectivefunction": 17, "neuralnetworkclassifier": 18, "neuralnetworkregressor": 19, "objectivefunction": 20, "onehotobjectivefunction": 21, "pegasosqsv\u00e7": 22, "qsvc": [23, 55], "qsvr": 24, "serializablemodelmix": 25, "trainablemodel": 26, "vqc": [27, 53], "vqr": [28, 53], "qnncircuit": 29, "rawfeaturevector": 30, "torchconnector": 31, "ad_hoc_da": 32, "basekernel": 33, "fidelityquantumkernel": 34, "fidelitystatevectorkernel": 35, "trainablefidelityquantumkernel": 36, "trainablefidelitystatevectorkernel": 37, "trainablekernel": 38, "quantumkerneltrainer": 39, "quantumkerneltrainerresult": 40, "effectivedimension": 41, "localeffectivedimension": 43, "neuralnetwork": 44, "crossentropyloss": 46, "kernelloss": 47, "l1loss": 48, "l2loss": 49, "svcloss": 51, "vs": [52, 61], "classical": [52, 54, 56, 62], "2": [52, 54, 55, 56, 57, 60, 61, 62, 63], "in": 52, "how": 52, "to": 52, "instantia": 52, "qnns": [52, 57], "3": [52, 54, 55, 56, 57, 60, 61, 62, 63], "run": 52, "forward\u0131": 52, "pass": 52, "set": [52, 59, 60, 61], "up": [52, 56, 59, 61], "\u00f6rnek": 52, "non": 52, "batchedi": 52, "backward\u0131": 52, "without": 52, "input": 52, "gradients": 52, "with": [52, 53, 55, 57], "advancedi": 52, "functionality": 52, "multip": [52, 53], "observables": 52, "custo": 52, "interpret": 52, "6": [52, 56, 62, 63], "sonu\u00e7": [52, 61], "sinirsel": 53, "a\u011f": 53, "s\u0131n\u0131fland\u0131r\u0131c\u0131s": [53, 58], "ve": [53, 60, 61], "regres\u00f6r": 53, "s\u0131n\u0131fland\u0131rma": [53, 57], "classification": [53, 55, 57], "an": [53, 63], "de\u011fi\u015fimsel": 53, "gerile": [53, 57], "regresyo": [53, 57], "regression": [53, 57], "varyasyonel": 53, "il": 53, "trainingi": [54, 56, 57, 59, 60, 62], "model": [54, 55, 56, 57, 59, 60], "on": [54, 55], "real": 54, "exploratory": 54, "da": [54, 56, 57, 62], "analysis": [54, 55], "reducingi": 54, "number": 54, "features": 54, "conclusion": [54, 55, 56], "\u00e7ekirdek": [55, 59], "\u00f6\u011fren": [55, 59, 64], "methods": 55, "definingi": [55, 57], "svc": 55, "as": 55, "callable": 55, "precomputedi": 55, "matrix": 55, "evaluation": [55, 57], "models": [55, 60], "usedi": 55, "clusteringi": 55, "spectral": 55, "principal": 55, "component": 55, "compariso": 55, "pca": 55, "gaussian": 55, "pytorch": [56, 57, 60], "qgan": 56, "uygulamas": 56, "qgans": 56, "loadingi": [56, 60], "rando": 56, "distributions": 56, "representation": 56, "definitions": 56, "definition": 56, "ansatz": [56, 63], "generator": 56, "discriminator": 56, "settingi": 56, "loop": 56, "optimizers": 56, "visualization": 56, "process": [56, 59], "results": 56, "cumulativ": 56, "density": 56, "torch": 57, "connector": 57, "hybrid": 57, "i\u0307\u00e7erik": [57, 63], "part": 57, "simple": [57, 63], "optimizer": [57, 59], "b": 57, "mnist": 57, "step": 57, "loaders": 57, "train": 57, "test": [57, 59], "qnn": [57, 61], "pegasos": 58, "destek": 58, "vekt\u00f6r": 58, "uygulama": 59, "i\u00e7": 59, "e\u011fit": [59, 60, 61], "import": 59, "local": [59, 61], "external": 59, "packages": 59, "def": 59, "callback": 59, "our": [59, 62], "ver": [59, 60, 61], "map": 59, "trainer": 59, "fit": 59, "visualiz": 59, "savingi": 60, "continuous": 60, "bir": 60, "kaydedi": 60, "y\u00fckley": 60, "deva": 60, "edi": 60, "hibrit": 60, "effectiv": 61, "dimension": 61, "global": 61, "algorith": 61, "basi\u00e7": 61, "example": [61, 63], "yi": 61, "tan\u0131mlay": 61, "calculation": 61, "compute": 61, "k\u00fcmes": 61, "tan\u0131mla": 61, "i": 61, "trainedi": 61, "untrainedi": 61, "analiz": 61, "et": 61, "\u00e7iz": 61, "evri\u015fimsel": 62, "differences": 62, "between": 62, "qcnn": 62, "ccnn": 62, "convolutional": 62, "components": [62, 63], "katma": 62, "poolingi": 62, "layer": 62, "generation": 62, "modelingi": 62, "testingi": 62, "references": 62, "autoencoder": 63, "what": 63, "is": 63, "kay\u0131p": 63, "fonksiyo": 63, "se\u00e7ilmes": 63, "swap": 63, "tes": 63, "parametrizedi": 63, "domain": 63, "wall": 63, "digital": 63, "compression": 63, "8": 63, "9": 63, "kaynak": 63, "e\u011fitsel": 64}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Qiskit Machine Learning API Reference": [[0, "qiskit-machine-learning-api-reference"]], "Qiskit Machine Learning module (qiskit_machine_learning)": [[0, "qiskit-machine-learning-module-qiskit-machine-learning"]], "Submodules": [[0, "submodules"], [5, "submodules"]], "Quantum machine learning algorithms (qiskit_machine_learning.algorithms)": [[1, "quantum-machine-learning-algorithms-qiskit-machine-learning-algorithms"]], "Machine Learning Base Classes": [[1, "machine-learning-base-classes"]], "Machine Learning Objective Functions": [[1, "machine-learning-objective-functions"]], "Algorithms": [[1, "algorithms"]], "Classifiers": [[1, "classifiers"]], "Regressors": [[1, "regressors"]], "Circuit library for machine learning applications (qiskit_machine_learning.circuit.library)": [[2, "circuit-library-for-machine-learning-applications-qiskit-machine-learning-circuit-library"]], "Feature Maps": [[2, "feature-maps"]], "Helper Circuits": [[2, "helper-circuits"]], "Connectors (qiskit_machine_learning.connectors)": [[3, "connectors-qiskit-machine-learning-connectors"]], "Connectors": [[3, "connectors"]], "Datasets (qiskit_machine_learning.datasets)": [[4, "datasets-qiskit-machine-learning-datasets"]], "Datasets": [[4, "datasets"]], "Quantum kernels (qiskit_machine_learning.kernels)": [[5, "quantum-kernels-qiskit-machine-learning-kernels"]], "Quantum Kernels": [[5, "quantum-kernels"]], "Quantum Kernel Algorithms": [[6, "quantum-kernel-algorithms"]], "Quantum neural networks (qiskit_machine_learning.neural_networks)": [[7, "quantum-neural-networks-qiskit-machine-learning-neural-networks"]], "Neural Network Base Classes": [[7, "neural-network-base-classes"]], "Neural Networks": [[7, "neural-networks"]], "Neural Network Metrics": [[7, "neural-network-metrics"]], "Utility functions and classes (qiskit_machine_learning.utils)": [[8, "utility-functions-and-classes-qiskit-machine-learning-utils"]], "Utilities": [[8, "utilities"]], "Loss Functions (qiskit_machine_learning.utils.loss_functions)": [[9, "loss-functions-qiskit-machine-learning-utils-loss-functions"]], "Loss Function Base Class": [[9, "loss-function-base-class"]], "Loss Functions": [[9, "loss-functions"]], "Ba\u015flarken": [[10, "getting-started"]], "Kurulum": [[10, "installation"]], "\u0130ste\u011fe ba\u011fl\u0131 y\u00fcklemeler": [[10, "optional-installs"]], "Ba\u015flamaya haz\u0131r m\u0131s\u0131n\u0131z?\u2026": [[10, "ready-to-get-going"]], "Qiskit Makine \u00d6\u011frenmesi genel bak\u0131\u015f": [[11, "qiskit-machine-learning-overview"]], "Genel Bak\u0131\u015f": [[11, "overview"], [52, "Genel-Bak\u0131\u015f"], [55, "Genel-Bak\u0131\u015f"], [56, "Genel-Bak\u0131\u015f"]], "Sonraki Ad\u0131mlar": [[11, "next-steps"]], "Qiskit Makine \u00d6\u011frenmesi v0.5 Ge\u00e7i\u015f K\u0131lavuzu": [[12, "qiskit-machine-learning-v0-5-migration-guide"]], "Giri\u015f": [[12, "introduction"]], "Overview of the primitives": [[12, "overview-of-the-primitives"]], "New quantum kernel": [[12, "new-quantum-kernel"]], "Create a dataset": [[12, "create-a-dataset"]], "Previous implementation of quantum kernel": [[12, "previous-implementation-of-quantum-kernel"]], "New implementation of quantum kernel": [[12, "new-implementation-of-quantum-kernel"]], "Yeni kuantum sinir a\u011flar\u0131": [[12, "new-quantum-neural-networks"]], "SamplerQNN": [[12, "samplerqnn"], [45, "samplerqnn"]], "Building a classifier using CircuitQNN": [[12, "building-a-classifier-using-circuitqnn"]], "Building a classifier using SamplerQNN": [[12, "building-a-classifier-using-samplerqnn"]], "EstimatorQNN": [[12, "estimatorqnn"], [42, "estimatorqnn"]], "Building a regressor using OpflowQNN": [[12, "building-a-regressor-using-opflowqnn"]], "Building a regressor using EstimatorQNN": [[12, "building-a-regressor-using-estimatorqnn"]], "Other notable deprecation": [[12, "other-notable-deprecation"]], "Qiskit Makine \u00d6\u011frenmesi Ge\u00e7i\u015f K\u0131lavuzu": [[13, "qiskit-machine-learning-migration-guide"]], "Release Notes": [[14, "release-notes"]], "0.7.1-4": [[14, "release-notes-0-7-1-4"]], "Bug Fixes": [[14, "bug-fixes"]], "0.7.0": [[14, "release-notes-0-7-0"]], "Prelude": [[14, "prelude"]], "QiskitMachineLearningError": [[15, "qiskitmachinelearningerror"]], "BinaryObjectiveFunction": [[16, "binaryobjectivefunction"]], "MultiClassObjectiveFunction": [[17, "multiclassobjectivefunction"]], "NeuralNetworkClassifier": [[18, "neuralnetworkclassifier"]], "NeuralNetworkRegressor": [[19, "neuralnetworkregressor"]], "ObjectiveFunction": [[20, "objectivefunction"]], "OneHotObjectiveFunction": [[21, "onehotobjectivefunction"]], "PegasosQSVC": [[22, "pegasosqsvc"]], "QSVC": [[23, "qsvc"]], "QSVR": [[24, "qsvr"]], "SerializableModelMixin": [[25, "serializablemodelmixin"]], "TrainableModel": [[26, "trainablemodel"]], "VQC": [[27, "vqc"]], "VQR": [[28, "vqr"]], "QNNCircuit": [[29, "qnncircuit"]], "RawFeatureVector": [[30, "rawfeaturevector"]], "TorchConnector": [[31, "torchconnector"]], "ad_hoc_data": [[32, "ad-hoc-data"]], "BaseKernel": [[33, "basekernel"]], "FidelityQuantumKernel": [[34, "fidelityquantumkernel"]], "FidelityStatevectorKernel": [[35, "fidelitystatevectorkernel"]], "TrainableFidelityQuantumKernel": [[36, "trainablefidelityquantumkernel"]], "TrainableFidelityStatevectorKernel": [[37, "trainablefidelitystatevectorkernel"]], "TrainableKernel": [[38, "trainablekernel"]], "QuantumKernelTrainer": [[39, "quantumkerneltrainer"]], "QuantumKernelTrainerResult": [[40, "quantumkerneltrainerresult"]], "EffectiveDimension": [[41, "effectivedimension"]], "LocalEffectiveDimension": [[43, "localeffectivedimension"]], "NeuralNetwork": [[44, "neuralnetwork"]], "CrossEntropyLoss": [[46, "crossentropyloss"]], "KernelLoss": [[47, "kernelloss"]], "L1Loss": [[48, "l1loss"]], "L2Loss": [[49, "l2loss"]], "Loss": [[50, "loss"]], "SVCLoss": [[51, "svcloss"]], "Kuantum Sinir A\u011flar\u0131": [[52, "Kuantum-Sinir-A\u011flar\u0131"]], "1. Giri\u015f": [[52, "1.-Giri\u015f"], [55, "1.-Giri\u015f"], [56, "1.-Giri\u015f"], [62, "1.-Giri\u015f"]], "1.1. Quantum vs. Classical Neural Networks": [[52, "1.1.-Quantum-vs.-Classical-Neural-Networks"]], "1.2. Implementation in qiskit-machine-learning": [[52, "1.2.-Implementation-in-qiskit-machine-learning"]], "2. How to Instantiate QNNs": [[52, "2.-How-to-Instantiate-QNNs"]], "2.1. EstimatorQNN": [[52, "2.1.-EstimatorQNN"]], "2.2. SamplerQNN": [[52, "2.2.-SamplerQNN"]], "3. How to Run a Forward Pass": [[52, "3.-How-to-Run-a-Forward-Pass"]], "3.1. Set-Up": [[52, "3.1.-Set-Up"]], "3.1.1. EstimatorQNN \u00d6rne\u011fi": [[52, "3.1.1.-EstimatorQNN-\u00d6rne\u011fi"]], "3.1.2. SamplerQNN \u00d6rne\u011fi": [[52, "3.1.2.-SamplerQNN-\u00d6rne\u011fi"]], "3.2. Non-batched Forward Pass": [[52, "3.2.-Non-batched-Forward-Pass"]], "3.2.1. EstimatorQNN \u00d6rne\u011fi": [[52, "3.2.1.-EstimatorQNN-\u00d6rne\u011fi"]], "3.2.2. SamplerQNN \u00d6rne\u011fi": [[52, "3.2.2.-SamplerQNN-\u00d6rne\u011fi"]], "3.3. Batched Forward Pass": [[52, "3.3.-Batched-Forward-Pass"]], "3.3.1. EstimatorQNN \u00d6rne\u011fi": [[52, "3.3.1.-EstimatorQNN-\u00d6rne\u011fi"]], "3.3.2. SamplerQNN \u00d6rne\u011fi": [[52, "3.3.2.-SamplerQNN-\u00d6rne\u011fi"]], "4. How to Run a Backward Pass": [[52, "4.-How-to-Run-a-Backward-Pass"]], "4.1. Backward Pass without Input Gradients": [[52, "4.1.-Backward-Pass-without-Input-Gradients"]], "4.1.1. EstimatorQNN \u00d6rne\u011fi": [[52, "4.1.1.-EstimatorQNN-\u00d6rne\u011fi"]], "4.1.2. SamplerQNN \u00d6rne\u011fi": [[52, "4.1.2.-SamplerQNN-\u00d6rne\u011fi"]], "4.2. Backward Pass with Input Gradients": [[52, "4.2.-Backward-Pass-with-Input-Gradients"]], "4.2.1. EstimatorQNN \u00d6rne\u011fi": [[52, "4.2.1.-EstimatorQNN-\u00d6rne\u011fi"]], "4.2.2. SamplerQNN \u00d6rne\u011fi": [[52, "4.2.2.-SamplerQNN-\u00d6rne\u011fi"]], "5. Advanced Functionality": [[52, "5.-Advanced-Functionality"]], "5.1. EstimatorQNN with Multiple Observables": [[52, "5.1.-EstimatorQNN-with-Multiple-Observables"]], "5.2. SamplerQNN with custom interpret": [[52, "5.2.-SamplerQNN-with-custom-interpret"]], "6. Sonu\u00e7": [[52, "6.-Sonu\u00e7"]], "Sinirsel A\u011f S\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131 ve Regres\u00f6r\u00fc": [[53, "Sinirsel-A\u011f-S\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131-ve-Regres\u00f6r\u00fc"]], "S\u0131n\u0131fland\u0131rma": [[53, "S\u0131n\u0131fland\u0131rma"]], "Classification with an EstimatorQNN": [[53, "Classification-with-an-EstimatorQNN"]], "Classification with a SamplerQNN": [[53, "Classification-with-a-SamplerQNN"]], "De\u011fi\u015fimsel Kuantum S\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131 (VQC)": [[53, "De\u011fi\u015fimsel-Kuantum-S\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131-(VQC)"]], "Multiple classes with VQC": [[53, "Multiple-classes-with-VQC"]], "Gerileme (Regresyon)": [[53, "Gerileme-(Regresyon)"]], "Regression with an EstimatorQNN": [[53, "Regression-with-an-EstimatorQNN"]], "Varyasyonel Kuantum Regres\u00f6r\u00fc (VQR) ile Regresyon": [[53, "Varyasyonel-Kuantum-Regres\u00f6r\u00fc-(VQR)-ile-Regresyon"]], "Training a Quantum Model on a Real Dataset": [[54, "Training-a-Quantum-Model-on-a-Real-Dataset"]], "1. Exploratory Data Analysis": [[54, "1.-Exploratory-Data-Analysis"]], "2. Training a Classical Machine Learning Model": [[54, "2.-Training-a-Classical-Machine-Learning-Model"]], "3. Training a Quantum Machine Learning Model": [[54, "3.-Training-a-Quantum-Machine-Learning-Model"]], "4. Reducing the Number of Features": [[54, "4.-Reducing-the-Number-of-Features"]], "5. Conclusion": [[54, "5.-Conclusion"], [55, "5.-Conclusion"]], "Kuantum \u00c7ekirdek Makine \u00d6\u011frenimi": [[55, "Kuantum-\u00c7ekirdek-Makine-\u00d6\u011frenimi"]], "1.1. Kernel Methods for Machine Learning": [[55, "1.1.-Kernel-Methods-for-Machine-Learning"]], "1.2. Kernel Functions": [[55, "1.2.-Kernel-Functions"]], "1.3. Quantum Kernels": [[55, "1.3.-Quantum-Kernels"]], "2. Classification": [[55, "2.-Classification"]], "2.1. Defining the dataset": [[55, "2.1.-Defining-the-dataset"]], "2.2. Defining the quantum kernel": [[55, "2.2.-Defining-the-quantum-kernel"]], "2.3. Classification with SVC": [[55, "2.3.-Classification-with-SVC"]], "Kernel as a callable function": [[55, "Kernel-as-a-callable-function"]], "Precomputed kernel matrix": [[55, "Precomputed-kernel-matrix"]], "2.4. Classification with QSVC": [[55, "2.4.-Classification-with-QSVC"]], "2.5. Evaluation of models used for classification": [[55, "2.5.-Evaluation-of-models-used-for-classification"]], "3. Clustering": [[55, "3.-Clustering"]], "3.1. Defining the dataset": [[55, "3.1.-Defining-the-dataset"]], "3.2. Defining the Quantum Kernel": [[55, "3.2.-Defining-the-Quantum-Kernel"]], "3.3. Clustering with the Spectral Clustering Model": [[55, "3.3.-Clustering-with-the-Spectral-Clustering-Model"]], "4. Kernel Principal Component Analysis": [[55, "4.-Kernel-Principal-Component-Analysis"]], "4.1. Defining the dataset": [[55, "4.1.-Defining-the-dataset"]], "4.2. Defining the Quantum Kernel": [[55, "4.2.-Defining-the-Quantum-Kernel"]], "4.3. Comparison of Kernel PCA on gaussian and quantum kernel": [[55, "4.3.-Comparison-of-Kernel-PCA-on-gaussian-and-quantum-kernel"]], "PyTorch qGAN Uygulamas\u0131": [[56, "PyTorch-qGAN-Uygulamas\u0131"]], "1.1. qGANs for Loading Random Distributions": [[56, "1.1.-qGANs-for-Loading-Random-Distributions"]], "2. Data and Representation": [[56, "2.-Data-and-Representation"]], "3. Definitions of the Neural Networks": [[56, "3.-Definitions-of-the-Neural-Networks"]], "3.1. Definition of the quantum neural network ansatz": [[56, "3.1.-Definition-of-the-quantum-neural-network-ansatz"]], "3.2. Definition of the quantum generator": [[56, "3.2.-Definition-of-the-quantum-generator"]], "3.3. Definition of the classical discriminator": [[56, "3.3.-Definition-of-the-classical-discriminator"]], "3.4. Create a generator and a discriminator": [[56, "3.4.-Create-a-generator-and-a-discriminator"]], "4. Setting up the Training Loop": [[56, "4.-Setting-up-the-Training-Loop"]], "4.1. Definition of the loss functions": [[56, "4.1.-Definition-of-the-loss-functions"]], "4.2. Definition of the optimizers": [[56, "4.2.-Definition-of-the-optimizers"]], "4.3. Visualization of the training process": [[56, "4.3.-Visualization-of-the-training-process"]], "5. Model Training": [[56, "5.-Model-Training"]], "6. Results: Cumulative Density Functions": [[56, "6.-Results:-Cumulative-Density-Functions"]], "7. Conclusion": [[56, "7.-Conclusion"]], "Torch Connector and Hybrid QNNs": [[57, "Torch-Connector-and-Hybrid-QNNs"]], "\u0130\u00e7erik:": [[57, "\u0130\u00e7erik:"]], "Part 1: Simple Classification & Regression": [[57, "Part-1:-Simple-Classification-&-Regression"]], "1. S\u0131n\u0131fland\u0131rma": [[57, "1.-S\u0131n\u0131fland\u0131rma"]], "A. Classification with PyTorch and EstimatorQNN": [[57, "A.-Classification-with-PyTorch-and-EstimatorQNN"]], "Optimizer": [[57, "Optimizer"]], "Loss Function": [[57, "Loss-Function"]], "B. Classification with PyTorch and SamplerQNN": [[57, "B.-Classification-with-PyTorch-and-SamplerQNN"]], "2. Gerileme (Regresyon)": [[57, "2.-Gerileme-(Regresyon)"]], "A. Regression with PyTorch and EstimatorQNN": [[57, "A.-Regression-with-PyTorch-and-EstimatorQNN"]], "Part 2: MNIST Classification, Hybrid QNNs": [[57, "Part-2:-MNIST-Classification,-Hybrid-QNNs"]], "Step 1: Defining Data-loaders for train and test": [[57, "Step-1:-Defining-Data-loaders-for-train-and-test"]], "Step 2: Defining the QNN and Hybrid Model": [[57, "Step-2:-Defining-the-QNN-and-Hybrid-Model"]], "Step 3: Training": [[57, "Step-3:-Training"]], "Step 4: Evaluation": [[57, "Step-4:-Evaluation"]], "Pegasos Kuantum Destek Vekt\u00f6r S\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131": [[58, "Pegasos-Kuantum-Destek-Vekt\u00f6r-S\u0131n\u0131fland\u0131r\u0131c\u0131s\u0131"]], "Makine \u00d6\u011frenimi Uygulamalar\u0131 i\u00e7in Kuantum \u00c7ekirdek E\u011fitimi": [[59, "Makine-\u00d6\u011frenimi-Uygulamalar\u0131-i\u00e7in-Kuantum-\u00c7ekirdek-E\u011fitimi"]], "Import Local, External, and Qiskit Packages and define a callback class for our optimizer": [[59, "Import-Local,-External,-and-Qiskit-Packages-and-define-a-callback-class-for-our-optimizer"]], "Veri setini haz\u0131rla": [[59, "Veri-setini-haz\u0131rla"]], "Define the Quantum Feature Map": [[59, "Define-the-Quantum-Feature-Map"]], "Set Up the Quantum Kernel and Quantum Kernel Trainer": [[59, "Set-Up-the-Quantum-Kernel-and-Quantum-Kernel-Trainer"]], "Kuantum \u00c7ekirde\u011fini e\u011fitin": [[59, "Kuantum-\u00c7ekirde\u011fini-e\u011fitin"]], "Fit and Test the Model": [[59, "Fit-and-Test-the-Model"]], "Visualize the Kernel Training Process": [[59, "Visualize-the-Kernel-Training-Process"]], "Saving, Loading Qiskit Machine Learning Models and Continuous Training": [[60, "Saving,-Loading-Qiskit-Machine-Learning-Models-and-Continuous-Training"]], "1. Bir veri seti haz\u0131rla": [[60, "1.-Bir-veri-seti-haz\u0131rla"]], "2. Bir modeli e\u011fitin ve kaydedin": [[60, "2.-Bir-modeli-e\u011fitin-ve-kaydedin"]], "3. Bir model y\u00fckleyin ve e\u011fitime devam edin": [[60, "3.-Bir-model-y\u00fckleyin-ve-e\u011fitime-devam-edin"]], "4. PyTorch hibrit modeller": [[60, "4.-PyTorch-hibrit-modeller"]], "Effective Dimension of Qiskit Neural Networks": [[61, "Effective-Dimension-of-Qiskit-Neural-Networks"]], "1. Global vs. Local Effective Dimension": [[61, "1.-Global-vs.-Local-Effective-Dimension"]], "2. The Effective Dimension Algorithm": [[61, "2.-The-Effective-Dimension-Algorithm"]], "3. Basic Example (SamplerQNN)": [[61, "3.-Basic-Example-(SamplerQNN)"]], "3.1 QNN\u2019yi tan\u0131mlay\u0131n": [[61, "3.1-QNN'yi-tan\u0131mlay\u0131n"]], "3.2 Set up Effective Dimension calculation": [[61, "3.2-Set-up-Effective-Dimension-calculation"]], "3.3 Compute Global Effective Dimension": [[61, "3.3-Compute-Global-Effective-Dimension"]], "4. Local Effective Dimension Example": [[61, "4.-Local-Effective-Dimension-Example"]], "4.1 Veri K\u00fcmesi ve QNN\u2019yi Tan\u0131mlama": [[61, "4.1-Veri-K\u00fcmesi-ve-QNN'yi-Tan\u0131mlama"]], "4.2 QNN\u2019i e\u011fitin": [[61, "4.2-QNN'i-e\u011fitin"]], "4.3 Compute Local Effective Dimension of trained QNN": [[61, "4.3-Compute-Local-Effective-Dimension-of-trained-QNN"]], "4.4 Compute Local Effective Dimension of untrained QNN": [[61, "4.4-Compute-Local-Effective-Dimension-of-untrained-QNN"]], "4.5 Sonu\u00e7lar\u0131 analiz et ve \u00e7iz": [[61, "4.5-Sonu\u00e7lar\u0131-analiz-et-ve-\u00e7iz"]], "Kuantum Evri\u015fimsel Sinir A\u011f\u0131": [[62, "Kuantum-Evri\u015fimsel-Sinir-A\u011f\u0131"]], "1. Differences between a QCNN and CCNN": [[62, "1.-Differences-between-a-QCNN-and-CCNN"]], "1.1 Classical Convolutional Neural Networks": [[62, "1.1-Classical-Convolutional-Neural-Networks"]], "1.2 Quantum Convolutional Neural Networks": [[62, "1.2-Quantum-Convolutional-Neural-Networks"]], "2. Components of a QCNN": [[62, "2.-Components-of-a-QCNN"]], "2.1 Evri\u015fimsel Katman": [[62, "2.1-Evri\u015fimsel-Katman"]], "2.2 Pooling Layer": [[62, "2.2-Pooling-Layer"]], "3. Data Generation": [[62, "3.-Data-Generation"]], "4. Modeling our QCNN": [[62, "4.-Modeling-our-QCNN"]], "5. Training our QCNN": [[62, "5.-Training-our-QCNN"]], "6. Testing our QCNN": [[62, "6.-Testing-our-QCNN"]], "7. References": [[62, "7.-References"]], "The Quantum Autoencoder": [[63, "The-Quantum-Autoencoder"]], "\u0130\u00e7erikler": [[63, "\u0130\u00e7erikler"]], "1. What is an Autoencoder?": [[63, "1.-What-is-an-Autoencoder?"]], "2. The Quantum Autoencoder": [[63, "2.-The-Quantum-Autoencoder"]], "3. Components of a Quantum Autoencoder": [[63, "3.-Components-of-a-Quantum-Autoencoder"]], "4. Kay\u0131p Fonksiyonu Se\u00e7ilmesi": [[63, "4.-Kay\u0131p-Fonksiyonu-Se\u00e7ilmesi"]], "SWAP Testi": [[63, "SWAP-Testi"]], "5. Building the Quantum Autoencoder Ansatz": [[63, "5.-Building-the-Quantum-Autoencoder-Ansatz"]], "The Parametrized Circuit": [[63, "The-Parametrized-Circuit"]], "6. A Simple Example: The Domain Wall Autoencoder": [[63, "6.-A-Simple-Example:-The-Domain-Wall-Autoencoder"]], "7. A Quantum Autoencoder for Digital Compression": [[63, "7.-A-Quantum-Autoencoder-for-Digital-Compression"]], "8. Applications of a Quantum Autoencoder": [[63, "8.-Applications-of-a-Quantum-Autoencoder"]], "9. Kaynaklar": [[63, "9.-Kaynaklar"]], "Makine \u00d6\u011frenimi E\u011fitselleri": [[64, "machine-learning-tutorials"]]}, "indexentries": {"module": [[0, "module-qiskit_machine_learning"], [1, "module-qiskit_machine_learning.algorithms"], [2, "module-qiskit_machine_learning.circuit.library"], [3, "module-qiskit_machine_learning.connectors"], [4, "module-qiskit_machine_learning.datasets"], [5, "module-qiskit_machine_learning.kernels"], [6, "module-qiskit_machine_learning.kernels.algorithms"], [7, "module-qiskit_machine_learning.neural_networks"], [8, "module-qiskit_machine_learning.utils"], [9, "module-qiskit_machine_learning.utils.loss_functions"]], "qiskit_machine_learning": [[0, "module-qiskit_machine_learning"]], "qiskit_machine_learning.algorithms": [[1, "module-qiskit_machine_learning.algorithms"]], "qiskit_machine_learning.circuit.library": [[2, "module-qiskit_machine_learning.circuit.library"]], "qiskit_machine_learning.connectors": [[3, "module-qiskit_machine_learning.connectors"]], "qiskit_machine_learning.datasets": [[4, "module-qiskit_machine_learning.datasets"]], "qiskit_machine_learning.kernels": [[5, "module-qiskit_machine_learning.kernels"]], "qiskit_machine_learning.kernels.algorithms": [[6, "module-qiskit_machine_learning.kernels.algorithms"]], "qiskit_machine_learning.neural_networks": [[7, "module-qiskit_machine_learning.neural_networks"]], "qiskit_machine_learning.utils": [[8, "module-qiskit_machine_learning.utils"]], "qiskit_machine_learning.utils.loss_functions": [[9, "module-qiskit_machine_learning.utils.loss_functions"]], "qiskitmachinelearningerror": [[15, "qiskit_machine_learning.QiskitMachineLearningError"]], "add_note() (qiskitmachinelearningerror y\u00f6ntemi)": [[15, "qiskit_machine_learning.QiskitMachineLearningError.add_note"]], "with_traceback() (qiskitmachinelearningerror y\u00f6ntemi)": [[15, "qiskit_machine_learning.QiskitMachineLearningError.with_traceback"]], "binaryobjectivefunction (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[16, "qiskit_machine_learning.algorithms.BinaryObjectiveFunction"]], "gradient() (binaryobjectivefunction y\u00f6ntemi)": [[16, "qiskit_machine_learning.algorithms.BinaryObjectiveFunction.gradient"]], "objective() (binaryobjectivefunction y\u00f6ntemi)": [[16, "qiskit_machine_learning.algorithms.BinaryObjectiveFunction.objective"]], "multiclassobjectivefunction (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[17, "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction"]], "gradient() (multiclassobjectivefunction y\u00f6ntemi)": [[17, "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.gradient"]], "objective() (multiclassobjectivefunction y\u00f6ntemi)": [[17, "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.objective"]], "neuralnetworkclassifier (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier"]], "callback (neuralnetworkclassifier \u00f6zniteli\u011fi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.callback"]], "fit() (neuralnetworkclassifier y\u00f6ntemi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit"]], "fit_result (neuralnetworkclassifier \u00f6zniteli\u011fi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit_result"]], "initial_point (neuralnetworkclassifier \u00f6zniteli\u011fi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.initial_point"]], "load() (neuralnetworkclassifier s\u0131n\u0131f y\u00f6ntemi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.load"]], "loss (neuralnetworkclassifier \u00f6zniteli\u011fi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.loss"]], "neural_network (neuralnetworkclassifier \u00f6zniteli\u011fi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.neural_network"]], "num_classes (neuralnetworkclassifier \u00f6zniteli\u011fi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.num_classes"]], "optimizer (neuralnetworkclassifier \u00f6zniteli\u011fi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.optimizer"]], "predict() (neuralnetworkclassifier y\u00f6ntemi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.predict"]], "save() (neuralnetworkclassifier y\u00f6ntemi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.save"]], "score() (neuralnetworkclassifier y\u00f6ntemi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.score"]], "warm_start (neuralnetworkclassifier \u00f6zniteli\u011fi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.warm_start"]], "weights (neuralnetworkclassifier \u00f6zniteli\u011fi)": [[18, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.weights"]], "neuralnetworkregressor (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor"]], "callback (neuralnetworkregressor \u00f6zniteli\u011fi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.callback"]], "fit() (neuralnetworkregressor y\u00f6ntemi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit"]], "fit_result (neuralnetworkregressor \u00f6zniteli\u011fi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit_result"]], "initial_point (neuralnetworkregressor \u00f6zniteli\u011fi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.initial_point"]], "load() (neuralnetworkregressor s\u0131n\u0131f y\u00f6ntemi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.load"]], "loss (neuralnetworkregressor \u00f6zniteli\u011fi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.loss"]], "neural_network (neuralnetworkregressor \u00f6zniteli\u011fi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.neural_network"]], "optimizer (neuralnetworkregressor \u00f6zniteli\u011fi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.optimizer"]], "predict() (neuralnetworkregressor y\u00f6ntemi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.predict"]], "save() (neuralnetworkregressor y\u00f6ntemi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.save"]], "score() (neuralnetworkregressor y\u00f6ntemi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.score"]], "warm_start (neuralnetworkregressor \u00f6zniteli\u011fi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.warm_start"]], "weights (neuralnetworkregressor \u00f6zniteli\u011fi)": [[19, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.weights"]], "objectivefunction (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[20, "qiskit_machine_learning.algorithms.ObjectiveFunction"]], "gradient() (objectivefunction y\u00f6ntemi)": [[20, "qiskit_machine_learning.algorithms.ObjectiveFunction.gradient"]], "objective() (objectivefunction y\u00f6ntemi)": [[20, "qiskit_machine_learning.algorithms.ObjectiveFunction.objective"]], "onehotobjectivefunction (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[21, "qiskit_machine_learning.algorithms.OneHotObjectiveFunction"]], "gradient() (onehotobjectivefunction y\u00f6ntemi)": [[21, "qiskit_machine_learning.algorithms.OneHotObjectiveFunction.gradient"]], "objective() (onehotobjectivefunction y\u00f6ntemi)": [[21, "qiskit_machine_learning.algorithms.OneHotObjectiveFunction.objective"]], "fitted (pegasosqsvc \u00f6zniteli\u011fi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.FITTED"]], "pegasosqsvc (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC"]], "unfitted (pegasosqsvc \u00f6zniteli\u011fi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.UNFITTED"]], "decision_function() (pegasosqsvc y\u00f6ntemi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.decision_function"]], "fit() (pegasosqsvc y\u00f6ntemi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.fit"]], "load() (pegasosqsvc s\u0131n\u0131f y\u00f6ntemi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.load"]], "num_steps (pegasosqsvc \u00f6zniteli\u011fi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.num_steps"]], "precomputed (pegasosqsvc \u00f6zniteli\u011fi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.precomputed"]], "predict() (pegasosqsvc y\u00f6ntemi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.predict"]], "quantum_kernel (pegasosqsvc \u00f6zniteli\u011fi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.quantum_kernel"]], "save() (pegasosqsvc y\u00f6ntemi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.save"]], "score() (pegasosqsvc y\u00f6ntemi)": [[22, "qiskit_machine_learning.algorithms.PegasosQSVC.score"]], "qsvc (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[23, "qiskit_machine_learning.algorithms.QSVC"]], "coef_ (qsvc \u00f6zniteli\u011fi)": [[23, "qiskit_machine_learning.algorithms.QSVC.coef_"]], "decision_function() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.decision_function"]], "fit() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.fit"]], "get_metadata_routing() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.get_metadata_routing"]], "get_params() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.get_params"]], "load() (qsvc s\u0131n\u0131f y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.load"]], "n_support_ (qsvc \u00f6zniteli\u011fi)": [[23, "qiskit_machine_learning.algorithms.QSVC.n_support_"]], "predict() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.predict"]], "predict_log_proba() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.predict_log_proba"]], "predict_proba() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.predict_proba"]], "proba_ (qsvc \u00f6zniteli\u011fi)": [[23, "qiskit_machine_learning.algorithms.QSVC.probA_"]], "probb_ (qsvc \u00f6zniteli\u011fi)": [[23, "qiskit_machine_learning.algorithms.QSVC.probB_"]], "quantum_kernel (qsvc \u00f6zniteli\u011fi)": [[23, "qiskit_machine_learning.algorithms.QSVC.quantum_kernel"]], "save() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.save"]], "score() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.score"]], "set_fit_request() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.set_fit_request"]], "set_params() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.set_params"]], "set_score_request() (qsvc y\u00f6ntemi)": [[23, "qiskit_machine_learning.algorithms.QSVC.set_score_request"]], "unused_param (qsvc \u00f6zniteli\u011fi)": [[23, "qiskit_machine_learning.algorithms.QSVC.unused_param"]], "qsvr (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[24, "qiskit_machine_learning.algorithms.QSVR"]], "class_weight_ (qsvr \u00f6zniteli\u011fi)": [[24, "qiskit_machine_learning.algorithms.QSVR.class_weight_"]], "coef_ (qsvr \u00f6zniteli\u011fi)": [[24, "qiskit_machine_learning.algorithms.QSVR.coef_"]], "fit() (qsvr y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.fit"]], "get_metadata_routing() (qsvr y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.get_metadata_routing"]], "get_params() (qsvr y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.get_params"]], "load() (qsvr s\u0131n\u0131f y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.load"]], "n_support_ (qsvr \u00f6zniteli\u011fi)": [[24, "qiskit_machine_learning.algorithms.QSVR.n_support_"]], "predict() (qsvr y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.predict"]], "quantum_kernel (qsvr \u00f6zniteli\u011fi)": [[24, "qiskit_machine_learning.algorithms.QSVR.quantum_kernel"]], "save() (qsvr y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.save"]], "score() (qsvr y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.score"]], "set_fit_request() (qsvr y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.set_fit_request"]], "set_params() (qsvr y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.set_params"]], "set_score_request() (qsvr y\u00f6ntemi)": [[24, "qiskit_machine_learning.algorithms.QSVR.set_score_request"]], "unused_param (qsvr \u00f6zniteli\u011fi)": [[24, "qiskit_machine_learning.algorithms.QSVR.unused_param"]], "serializablemodelmixin (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[25, "qiskit_machine_learning.algorithms.SerializableModelMixin"]], "load() (serializablemodelmixin s\u0131n\u0131f y\u00f6ntemi)": [[25, "qiskit_machine_learning.algorithms.SerializableModelMixin.load"]], "save() (serializablemodelmixin y\u00f6ntemi)": [[25, "qiskit_machine_learning.algorithms.SerializableModelMixin.save"]], "trainablemodel (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[26, "qiskit_machine_learning.algorithms.TrainableModel"]], "callback (trainablemodel \u00f6zniteli\u011fi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.callback"]], "fit() (trainablemodel y\u00f6ntemi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.fit"]], "fit_result (trainablemodel \u00f6zniteli\u011fi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.fit_result"]], "initial_point (trainablemodel \u00f6zniteli\u011fi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.initial_point"]], "load() (trainablemodel s\u0131n\u0131f y\u00f6ntemi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.load"]], "loss (trainablemodel \u00f6zniteli\u011fi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.loss"]], "neural_network (trainablemodel \u00f6zniteli\u011fi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.neural_network"]], "optimizer (trainablemodel \u00f6zniteli\u011fi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.optimizer"]], "predict() (trainablemodel y\u00f6ntemi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.predict"]], "save() (trainablemodel y\u00f6ntemi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.save"]], "score() (trainablemodel y\u00f6ntemi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.score"]], "warm_start (trainablemodel \u00f6zniteli\u011fi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.warm_start"]], "weights (trainablemodel \u00f6zniteli\u011fi)": [[26, "qiskit_machine_learning.algorithms.TrainableModel.weights"]], "vqc (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[27, "qiskit_machine_learning.algorithms.VQC"]], "ansatz (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.ansatz"]], "callback (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.callback"]], "circuit (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.circuit"]], "feature_map (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.feature_map"]], "fit() (vqc y\u00f6ntemi)": [[27, "qiskit_machine_learning.algorithms.VQC.fit"]], "fit_result (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.fit_result"]], "initial_point (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.initial_point"]], "load() (vqc s\u0131n\u0131f y\u00f6ntemi)": [[27, "qiskit_machine_learning.algorithms.VQC.load"]], "loss (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.loss"]], "neural_network (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.neural_network"]], "num_classes (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.num_classes"]], "num_qubits (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.num_qubits"]], "optimizer (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.optimizer"]], "predict() (vqc y\u00f6ntemi)": [[27, "qiskit_machine_learning.algorithms.VQC.predict"]], "save() (vqc y\u00f6ntemi)": [[27, "qiskit_machine_learning.algorithms.VQC.save"]], "score() (vqc y\u00f6ntemi)": [[27, "qiskit_machine_learning.algorithms.VQC.score"]], "warm_start (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.warm_start"]], "weights (vqc \u00f6zniteli\u011fi)": [[27, "qiskit_machine_learning.algorithms.VQC.weights"]], "vqr (qiskit_machine_learning.algorithms i\u00e7indeki s\u0131n\u0131f)": [[28, "qiskit_machine_learning.algorithms.VQR"]], "ansatz (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.ansatz"]], "callback (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.callback"]], "feature_map (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.feature_map"]], "fit() (vqr y\u00f6ntemi)": [[28, "qiskit_machine_learning.algorithms.VQR.fit"]], "fit_result (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.fit_result"]], "initial_point (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.initial_point"]], "load() (vqr s\u0131n\u0131f y\u00f6ntemi)": [[28, "qiskit_machine_learning.algorithms.VQR.load"]], "loss (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.loss"]], "neural_network (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.neural_network"]], "num_qubits (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.num_qubits"]], "optimizer (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.optimizer"]], "predict() (vqr y\u00f6ntemi)": [[28, "qiskit_machine_learning.algorithms.VQR.predict"]], "save() (vqr y\u00f6ntemi)": [[28, "qiskit_machine_learning.algorithms.VQR.save"]], "score() (vqr y\u00f6ntemi)": [[28, "qiskit_machine_learning.algorithms.VQR.score"]], "warm_start (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.warm_start"]], "weights (vqr \u00f6zniteli\u011fi)": [[28, "qiskit_machine_learning.algorithms.VQR.weights"]], "qnncircuit (qiskit_machine_learning.circuit.library i\u00e7indeki s\u0131n\u0131f)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit"]], "ansatz (qnncircuit \u00f6zniteli\u011fi)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.ansatz"]], "feature_map (qnncircuit \u00f6zniteli\u011fi)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.feature_map"]], "input_parameters (qnncircuit \u00f6zniteli\u011fi)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.input_parameters"]], "num_input_parameters (qnncircuit \u00f6zniteli\u011fi)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.num_input_parameters"]], "num_qubits (qnncircuit \u00f6zniteli\u011fi)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.num_qubits"]], "num_weight_parameters (qnncircuit \u00f6zniteli\u011fi)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.num_weight_parameters"]], "weight_parameters (qnncircuit \u00f6zniteli\u011fi)": [[29, "qiskit_machine_learning.circuit.library.QNNCircuit.weight_parameters"]], "rawfeaturevector (qiskit_machine_learning.circuit.library i\u00e7indeki s\u0131n\u0131f)": [[30, "qiskit_machine_learning.circuit.library.RawFeatureVector"]], "feature_dimension (rawfeaturevector \u00f6zniteli\u011fi)": [[30, "qiskit_machine_learning.circuit.library.RawFeatureVector.feature_dimension"]], "num_qubits (rawfeaturevector \u00f6zniteli\u011fi)": [[30, "qiskit_machine_learning.circuit.library.RawFeatureVector.num_qubits"]], "torchconnector (qiskit_machine_learning.connectors i\u00e7indeki s\u0131n\u0131f)": [[31, "qiskit_machine_learning.connectors.TorchConnector"]], "forward() (torchconnector y\u00f6ntemi)": [[31, "qiskit_machine_learning.connectors.TorchConnector.forward"]], "neural_network (torchconnector \u00f6zniteli\u011fi)": [[31, "qiskit_machine_learning.connectors.TorchConnector.neural_network"]], "sparse (torchconnector \u00f6zniteli\u011fi)": [[31, "qiskit_machine_learning.connectors.TorchConnector.sparse"]], "weight (torchconnector \u00f6zniteli\u011fi)": [[31, "qiskit_machine_learning.connectors.TorchConnector.weight"]], "ad_hoc_data() (qiskit_machine_learning.datasets mod\u00fcl\u00fc i\u00e7inde)": [[32, "qiskit_machine_learning.datasets.ad_hoc_data"]], "basekernel (qiskit_machine_learning.kernels i\u00e7indeki s\u0131n\u0131f)": [[33, "qiskit_machine_learning.kernels.BaseKernel"]], "enforce_psd (basekernel \u00f6zniteli\u011fi)": [[33, "qiskit_machine_learning.kernels.BaseKernel.enforce_psd"]], "evaluate() (basekernel y\u00f6ntemi)": [[33, "qiskit_machine_learning.kernels.BaseKernel.evaluate"]], "feature_map (basekernel \u00f6zniteli\u011fi)": [[33, "qiskit_machine_learning.kernels.BaseKernel.feature_map"]], "num_features (basekernel \u00f6zniteli\u011fi)": [[33, "qiskit_machine_learning.kernels.BaseKernel.num_features"]], "fidelityquantumkernel (qiskit_machine_learning.kernels i\u00e7indeki s\u0131n\u0131f)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel"]], "enforce_psd (fidelityquantumkernel \u00f6zniteli\u011fi)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.enforce_psd"]], "evaluate() (fidelityquantumkernel y\u00f6ntemi)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.evaluate"]], "evaluate_duplicates (fidelityquantumkernel \u00f6zniteli\u011fi)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.evaluate_duplicates"]], "feature_map (fidelityquantumkernel \u00f6zniteli\u011fi)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.feature_map"]], "fidelity (fidelityquantumkernel \u00f6zniteli\u011fi)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.fidelity"]], "num_features (fidelityquantumkernel \u00f6zniteli\u011fi)": [[34, "qiskit_machine_learning.kernels.FidelityQuantumKernel.num_features"]], "fidelitystatevectorkernel (qiskit_machine_learning.kernels i\u00e7indeki s\u0131n\u0131f)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel"]], "clear_cache() (fidelitystatevectorkernel y\u00f6ntemi)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.clear_cache"]], "enforce_psd (fidelitystatevectorkernel \u00f6zniteli\u011fi)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.enforce_psd"]], "evaluate() (fidelitystatevectorkernel y\u00f6ntemi)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.evaluate"]], "feature_map (fidelitystatevectorkernel \u00f6zniteli\u011fi)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.feature_map"]], "num_features (fidelitystatevectorkernel \u00f6zniteli\u011fi)": [[35, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.num_features"]], "trainablefidelityquantumkernel (qiskit_machine_learning.kernels i\u00e7indeki s\u0131n\u0131f)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel"]], "assign_training_parameters() (trainablefidelityquantumkernel y\u00f6ntemi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.assign_training_parameters"]], "enforce_psd (trainablefidelityquantumkernel \u00f6zniteli\u011fi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.enforce_psd"]], "evaluate() (trainablefidelityquantumkernel y\u00f6ntemi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.evaluate"]], "evaluate_duplicates (trainablefidelityquantumkernel \u00f6zniteli\u011fi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.evaluate_duplicates"]], "feature_map (trainablefidelityquantumkernel \u00f6zniteli\u011fi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.feature_map"]], "fidelity (trainablefidelityquantumkernel \u00f6zniteli\u011fi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.fidelity"]], "num_features (trainablefidelityquantumkernel \u00f6zniteli\u011fi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.num_features"]], "num_training_parameters (trainablefidelityquantumkernel \u00f6zniteli\u011fi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.num_training_parameters"]], "parameter_values (trainablefidelityquantumkernel \u00f6zniteli\u011fi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.parameter_values"]], "training_parameters (trainablefidelityquantumkernel \u00f6zniteli\u011fi)": [[36, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.training_parameters"]], "trainablefidelitystatevectorkernel (qiskit_machine_learning.kernels i\u00e7indeki s\u0131n\u0131f)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel"]], "assign_training_parameters() (trainablefidelitystatevectorkernel y\u00f6ntemi)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.assign_training_parameters"]], "clear_cache() (trainablefidelitystatevectorkernel y\u00f6ntemi)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.clear_cache"]], "enforce_psd (trainablefidelitystatevectorkernel \u00f6zniteli\u011fi)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.enforce_psd"]], "evaluate() (trainablefidelitystatevectorkernel y\u00f6ntemi)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.evaluate"]], "feature_map (trainablefidelitystatevectorkernel \u00f6zniteli\u011fi)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.feature_map"]], "num_features (trainablefidelitystatevectorkernel \u00f6zniteli\u011fi)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.num_features"]], "num_training_parameters (trainablefidelitystatevectorkernel \u00f6zniteli\u011fi)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.num_training_parameters"]], "parameter_values (trainablefidelitystatevectorkernel \u00f6zniteli\u011fi)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.parameter_values"]], "training_parameters (trainablefidelitystatevectorkernel \u00f6zniteli\u011fi)": [[37, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.training_parameters"]], "trainablekernel (qiskit_machine_learning.kernels i\u00e7indeki s\u0131n\u0131f)": [[38, "qiskit_machine_learning.kernels.TrainableKernel"]], "assign_training_parameters() (trainablekernel y\u00f6ntemi)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.assign_training_parameters"]], "enforce_psd (trainablekernel \u00f6zniteli\u011fi)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.enforce_psd"]], "evaluate() (trainablekernel y\u00f6ntemi)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.evaluate"]], "feature_map (trainablekernel \u00f6zniteli\u011fi)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.feature_map"]], "num_features (trainablekernel \u00f6zniteli\u011fi)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.num_features"]], "num_training_parameters (trainablekernel \u00f6zniteli\u011fi)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.num_training_parameters"]], "parameter_values (trainablekernel \u00f6zniteli\u011fi)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.parameter_values"]], "training_parameters (trainablekernel \u00f6zniteli\u011fi)": [[38, "qiskit_machine_learning.kernels.TrainableKernel.training_parameters"]], "quantumkerneltrainer (qiskit_machine_learning.kernels.algorithms i\u00e7indeki s\u0131n\u0131f)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer"]], "fit() (quantumkerneltrainer y\u00f6ntemi)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.fit"]], "initial_point (quantumkerneltrainer \u00f6zniteli\u011fi)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.initial_point"]], "loss (quantumkerneltrainer \u00f6zniteli\u011fi)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.loss"]], "optimizer (quantumkerneltrainer \u00f6zniteli\u011fi)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.optimizer"]], "quantum_kernel (quantumkerneltrainer \u00f6zniteli\u011fi)": [[39, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.quantum_kernel"]], "quantumkerneltrainerresult (qiskit_machine_learning.kernels.algorithms i\u00e7indeki s\u0131n\u0131f)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult"]], "combine() (quantumkerneltrainerresult y\u00f6ntemi)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.combine"]], "optimal_circuit (quantumkerneltrainerresult \u00f6zniteli\u011fi)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_circuit"]], "optimal_parameters (quantumkerneltrainerresult \u00f6zniteli\u011fi)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_parameters"]], "optimal_point (quantumkerneltrainerresult \u00f6zniteli\u011fi)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_point"]], "optimal_value (quantumkerneltrainerresult \u00f6zniteli\u011fi)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_value"]], "optimizer_evals (quantumkerneltrainerresult \u00f6zniteli\u011fi)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimizer_evals"]], "optimizer_result (quantumkerneltrainerresult \u00f6zniteli\u011fi)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimizer_result"]], "optimizer_time (quantumkerneltrainerresult \u00f6zniteli\u011fi)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimizer_time"]], "quantum_kernel (quantumkerneltrainerresult \u00f6zniteli\u011fi)": [[40, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.quantum_kernel"]], "effectivedimension (qiskit_machine_learning.neural_networks i\u00e7indeki s\u0131n\u0131f)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension"]], "get_effective_dimension() (effectivedimension y\u00f6ntemi)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.get_effective_dimension"]], "get_fisher_information() (effectivedimension y\u00f6ntemi)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.get_fisher_information"]], "get_normalized_fisher() (effectivedimension y\u00f6ntemi)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.get_normalized_fisher"]], "input_samples (effectivedimension \u00f6zniteli\u011fi)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.input_samples"]], "run_monte_carlo() (effectivedimension y\u00f6ntemi)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.run_monte_carlo"]], "weight_samples (effectivedimension \u00f6zniteli\u011fi)": [[41, "qiskit_machine_learning.neural_networks.EffectiveDimension.weight_samples"]], "estimatorqnn (qiskit_machine_learning.neural_networks i\u00e7indeki s\u0131n\u0131f)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN"]], "backward() (estimatorqnn y\u00f6ntemi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.backward"]], "circuit (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.circuit"]], "estimator (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.estimator"]], "forward() (estimatorqnn y\u00f6ntemi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.forward"]], "gradient (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.gradient"]], "input_gradients (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.input_gradients"]], "input_params (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.input_params"]], "num_inputs (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.num_inputs"]], "num_weights (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.num_weights"]], "observables (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.observables"]], "output_shape (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.output_shape"]], "sparse (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.sparse"]], "weight_params (estimatorqnn \u00f6zniteli\u011fi)": [[42, "qiskit_machine_learning.neural_networks.EstimatorQNN.weight_params"]], "localeffectivedimension (qiskit_machine_learning.neural_networks i\u00e7indeki s\u0131n\u0131f)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension"]], "get_effective_dimension() (localeffectivedimension y\u00f6ntemi)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.get_effective_dimension"]], "get_fisher_information() (localeffectivedimension y\u00f6ntemi)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.get_fisher_information"]], "get_normalized_fisher() (localeffectivedimension y\u00f6ntemi)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.get_normalized_fisher"]], "input_samples (localeffectivedimension \u00f6zniteli\u011fi)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.input_samples"]], "run_monte_carlo() (localeffectivedimension y\u00f6ntemi)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.run_monte_carlo"]], "weight_samples (localeffectivedimension \u00f6zniteli\u011fi)": [[43, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.weight_samples"]], "neuralnetwork (qiskit_machine_learning.neural_networks i\u00e7indeki s\u0131n\u0131f)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork"]], "backward() (neuralnetwork y\u00f6ntemi)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.backward"]], "forward() (neuralnetwork y\u00f6ntemi)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.forward"]], "input_gradients (neuralnetwork \u00f6zniteli\u011fi)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.input_gradients"]], "num_inputs (neuralnetwork \u00f6zniteli\u011fi)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.num_inputs"]], "num_weights (neuralnetwork \u00f6zniteli\u011fi)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.num_weights"]], "output_shape (neuralnetwork \u00f6zniteli\u011fi)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.output_shape"]], "sparse (neuralnetwork \u00f6zniteli\u011fi)": [[44, "qiskit_machine_learning.neural_networks.NeuralNetwork.sparse"]], "samplerqnn (qiskit_machine_learning.neural_networks i\u00e7indeki s\u0131n\u0131f)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN"]], "backward() (samplerqnn y\u00f6ntemi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.backward"]], "circuit (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.circuit"]], "forward() (samplerqnn y\u00f6ntemi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.forward"]], "gradient (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.gradient"]], "input_gradients (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.input_gradients"]], "input_params (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.input_params"]], "interpret (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.interpret"]], "num_inputs (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.num_inputs"]], "num_weights (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.num_weights"]], "output_shape (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.output_shape"]], "sampler (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.sampler"]], "set_interpret() (samplerqnn y\u00f6ntemi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.set_interpret"]], "sparse (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.sparse"]], "weight_params (samplerqnn \u00f6zniteli\u011fi)": [[45, "qiskit_machine_learning.neural_networks.SamplerQNN.weight_params"]], "crossentropyloss (qiskit_machine_learning.utils.loss_functions i\u00e7indeki s\u0131n\u0131f)": [[46, "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss"]], "evaluate() (crossentropyloss y\u00f6ntemi)": [[46, "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.evaluate"]], "gradient() (crossentropyloss y\u00f6ntemi)": [[46, "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.gradient"]], "kernelloss (qiskit_machine_learning.utils.loss_functions i\u00e7indeki s\u0131n\u0131f)": [[47, "qiskit_machine_learning.utils.loss_functions.KernelLoss"]], "evaluate() (kernelloss y\u00f6ntemi)": [[47, "qiskit_machine_learning.utils.loss_functions.KernelLoss.evaluate"]], "l1loss (qiskit_machine_learning.utils.loss_functions i\u00e7indeki s\u0131n\u0131f)": [[48, "qiskit_machine_learning.utils.loss_functions.L1Loss"]], "evaluate() (l1loss y\u00f6ntemi)": [[48, "qiskit_machine_learning.utils.loss_functions.L1Loss.evaluate"]], "gradient() (l1loss y\u00f6ntemi)": [[48, "qiskit_machine_learning.utils.loss_functions.L1Loss.gradient"]], "l2loss (qiskit_machine_learning.utils.loss_functions i\u00e7indeki s\u0131n\u0131f)": [[49, "qiskit_machine_learning.utils.loss_functions.L2Loss"]], "evaluate() (l2loss y\u00f6ntemi)": [[49, "qiskit_machine_learning.utils.loss_functions.L2Loss.evaluate"]], "gradient() (l2loss y\u00f6ntemi)": [[49, "qiskit_machine_learning.utils.loss_functions.L2Loss.gradient"]], "loss (qiskit_machine_learning.utils.loss_functions i\u00e7indeki s\u0131n\u0131f)": [[50, "qiskit_machine_learning.utils.loss_functions.Loss"]], "evaluate() (loss y\u00f6ntemi)": [[50, "qiskit_machine_learning.utils.loss_functions.Loss.evaluate"]], "gradient() (loss y\u00f6ntemi)": [[50, "qiskit_machine_learning.utils.loss_functions.Loss.gradient"]], "svcloss (qiskit_machine_learning.utils.loss_functions i\u00e7indeki s\u0131n\u0131f)": [[51, "qiskit_machine_learning.utils.loss_functions.SVCLoss"]], "evaluate() (svcloss y\u00f6ntemi)": [[51, "qiskit_machine_learning.utils.loss_functions.SVCLoss.evaluate"]]}})