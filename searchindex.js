Search.setIndex({"alltitles": {"0.2.0": [[18, "release-notes-0-2-0"]], "0.3.0": [[18, "release-notes-0-3-0"]], "0.4.0": [[18, "release-notes-0-4-0"]], "0.5.0": [[18, "release-notes-0-5-0"]], "0.6.0": [[18, "release-notes-0-6-0"]], "0.7.0": [[18, "release-notes-0-7-0"]], "0.8.0": [[18, "release-notes-0-8-0"]], "0.8.2": [[18, "release-notes-0-8-2"]], "0.8.3": [[18, "release-notes-0-8-3"]], "1. Classification": [[106, "1.-Classification"]], "1. Differences between a QCNN and CCNN": [[111, "1.-Differences-between-a-QCNN-and-CCNN"]], "1. Exploratory Data Analysis": [[103, "1.-Exploratory-Data-Analysis"]], "1. Global vs. Local Effective Dimension": [[110, "1.-Global-vs.-Local-Effective-Dimension"]], "1. Introduction": [[101, "1.-Introduction"], [104, "1.-Introduction"], [105, "1.-Introduction"], [111, "1.-Introduction"], [113, "1.-Introduction"]], "1. Prepare a dataset": [[109, "1.-Prepare-a-dataset"]], "1. What is an Autoencoder?": [[112, "1.-What-is-an-Autoencoder?"]], "1.1 Classical Convolutional Neural Networks": [[111, "1.1-Classical-Convolutional-Neural-Networks"]], "1.1. Kernel Methods for Machine Learning": [[104, "1.1.-Kernel-Methods-for-Machine-Learning"]], "1.1. Quantum vs. Classical Bayesian Inference": [[113, "1.1.-Quantum-vs.-Classical-Bayesian-Inference"]], "1.1. Quantum vs. Classical Neural Networks": [[101, "1.1.-Quantum-vs.-Classical-Neural-Networks"]], "1.1. qGANs for Loading Random Distributions": [[105, "1.1.-qGANs-for-Loading-Random-Distributions"]], "1.2 Quantum Convolutional Neural Networks": [[111, "1.2-Quantum-Convolutional-Neural-Networks"]], "1.2. Implementation in qiskit-machine-learning": [[101, "1.2.-Implementation-in-qiskit-machine-learning"], [113, "1.2.-Implementation-in-qiskit-machine-learning"]], "1.2. Kernel Functions": [[104, "1.2.-Kernel-Functions"]], "1.3. Quantum Kernels": [[104, "1.3.-Quantum-Kernels"]], "2. Classification": [[104, "2.-Classification"]], "2. Components of a QCNN": [[111, "2.-Components-of-a-QCNN"]], "2. Data and Representation": [[105, "2.-Data-and-Representation"]], "2. How to Instantiate QBI": [[113, "2.-How-to-Instantiate-QBI"]], "2. How to Instantiate QNNs": [[101, "2.-How-to-Instantiate-QNNs"]], "2. Regression": [[106, "2.-Regression"]], "2. The Effective Dimension Algorithm": [[110, "2.-The-Effective-Dimension-Algorithm"]], "2. The Quantum Autoencoder": [[112, "2.-The-Quantum-Autoencoder"]], "2. Train a model and save it": [[109, "2.-Train-a-model-and-save-it"]], "2. Training a Classical Machine Learning Model": [[103, "2.-Training-a-Classical-Machine-Learning-Model"]], "2.1 Convolutional Layer": [[111, "2.1-Convolutional-Layer"]], "2.1. Create Rotations for the Bayesian Networks": [[113, "2.1.-Create-Rotations-for-the-Bayesian-Networks"]], "2.1. Defining the dataset": [[104, "2.1.-Defining-the-dataset"]], "2.1. EstimatorQNN": [[101, "2.1.-EstimatorQNN"]], "2.1.1. Two Node Bayesian Network Example": [[113, "2.1.1.-Two-Node-Bayesian-Network-Example"]], "2.1.2. Burglary Alarm Example": [[113, "2.1.2.-Burglary-Alarm-Example"]], "2.2 Pooling Layer": [[111, "2.2-Pooling-Layer"]], "2.2. Create a Quantum Circuit for the Bayesian Networks": [[113, "2.2.-Create-a-Quantum-Circuit-for-the-Bayesian-Networks"]], "2.2. Defining the quantum kernel": [[104, "2.2.-Defining-the-quantum-kernel"]], "2.2. SamplerQNN": [[101, "2.2.-SamplerQNN"]], "2.2.1 Two Node Bayesian Network Example": [[113, "2.2.1-Two-Node-Bayesian-Network-Example"]], "2.2.2. Burglary Alarm Example": [[113, "2.2.2.-Burglary-Alarm-Example"]], "2.3. Classification with SVC": [[104, "2.3.-Classification-with-SVC"]], "2.4. Classification with QSVC": [[104, "2.4.-Classification-with-QSVC"]], "2.5. Evaluation of models used for classification": [[104, "2.5.-Evaluation-of-models-used-for-classification"]], "3. Basic Example (SamplerQNN)": [[110, "3.-Basic-Example-(SamplerQNN)"]], "3. Clustering": [[104, "3.-Clustering"]], "3. Components of a Quantum Autoencoder": [[112, "3.-Components-of-a-Quantum-Autoencoder"]], "3. Data Generation": [[111, "3.-Data-Generation"]], "3. Definitions of the Neural Networks": [[105, "3.-Definitions-of-the-Neural-Networks"]], "3. How to Run Rejection Sampling": [[113, "3.-How-to-Run-Rejection-Sampling"]], "3. How to Run a Forward Pass": [[101, "3.-How-to-Run-a-Forward-Pass"]], "3. Load a model and continue training": [[109, "3.-Load-a-model-and-continue-training"]], "3. Training a Quantum Machine Learning Model": [[103, "3.-Training-a-Quantum-Machine-Learning-Model"]], "3.1 Define QNN": [[110, "3.1-Define-QNN"]], "3.1. Defining the dataset": [[104, "3.1.-Defining-the-dataset"]], "3.1. Definition of the quantum neural network ansatz": [[105, "3.1.-Definition-of-the-quantum-neural-network-ansatz"]], "3.1. Set up": [[113, "3.1.-Set-up"]], "3.1. Set-Up": [[101, "3.1.-Set-Up"]], "3.1.1 Two Node Bayesian Network Example": [[113, "3.1.1-Two-Node-Bayesian-Network-Example"]], "3.1.1. EstimatorQNN Example": [[101, "3.1.1.-EstimatorQNN-Example"]], "3.1.2. Burglary Alarm Example": [[113, "3.1.2.-Burglary-Alarm-Example"]], "3.1.2. SamplerQNN Example": [[101, "3.1.2.-SamplerQNN-Example"]], "3.2 Set up Effective Dimension calculation": [[110, "3.2-Set-up-Effective-Dimension-calculation"]], "3.2. Defining the Quantum Kernel": [[104, "3.2.-Defining-the-Quantum-Kernel"]], "3.2. Definition of the quantum generator": [[105, "3.2.-Definition-of-the-quantum-generator"]], "3.2. Non-batched Forward Pass": [[101, "3.2.-Non-batched-Forward-Pass"]], "3.2.1. EstimatorQNN Example": [[101, "3.2.1.-EstimatorQNN-Example"]], "3.2.2. SamplerQNN Example": [[101, "3.2.2.-SamplerQNN-Example"]], "3.3 Compute Global Effective Dimension": [[110, "3.3-Compute-Global-Effective-Dimension"]], "3.3. Batched Forward Pass": [[101, "3.3.-Batched-Forward-Pass"]], "3.3. Clustering with the Spectral Clustering Model": [[104, "3.3.-Clustering-with-the-Spectral-Clustering-Model"]], "3.3. Definition of the classical discriminator": [[105, "3.3.-Definition-of-the-classical-discriminator"]], "3.3.1. EstimatorQNN Example": [[101, "3.3.1.-EstimatorQNN-Example"]], "3.3.2. SamplerQNN Example": [[101, "3.3.2.-SamplerQNN-Example"]], "3.4. Create a generator and a discriminator": [[105, "3.4.-Create-a-generator-and-a-discriminator"]], "4. Choosing a Loss Function": [[112, "4.-Choosing-a-Loss-Function"]], "4. How to Run a Backward Pass": [[101, "4.-How-to-Run-a-Backward-Pass"]], "4. How to Run an Inference": [[113, "4.-How-to-Run-an-Inference"]], "4. Kernel Principal Component Analysis": [[104, "4.-Kernel-Principal-Component-Analysis"]], "4. Local Effective Dimension Example": [[110, "4.-Local-Effective-Dimension-Example"]], "4. Modeling our QCNN": [[111, "4.-Modeling-our-QCNN"]], "4. PyTorch hybrid models": [[109, "4.-PyTorch-hybrid-models"]], "4. Reducing the Number of Features": [[103, "4.-Reducing-the-Number-of-Features"]], "4. Setting up the Training Loop": [[105, "4.-Setting-up-the-Training-Loop"]], "4.1 Define Dataset and QNN": [[110, "4.1-Define-Dataset-and-QNN"]], "4.1 Set Up": [[113, "4.1-Set-Up"]], "4.1. Backward Pass without Input Gradients": [[101, "4.1.-Backward-Pass-without-Input-Gradients"]], "4.1. Defining the dataset": [[104, "4.1.-Defining-the-dataset"]], "4.1. Definition of the loss functions": [[105, "4.1.-Definition-of-the-loss-functions"]], "4.1. Two Node Bayesian Network Example": [[113, "4.1.-Two-Node-Bayesian-Network-Example"]], "4.1.1. EstimatorQNN Example": [[101, "4.1.1.-EstimatorQNN-Example"]], "4.1.2. SamplerQNN Example": [[101, "4.1.2.-SamplerQNN-Example"]], "4.2 Train QNN": [[110, "4.2-Train-QNN"]], "4.2. Backward Pass with Input Gradients": [[101, "4.2.-Backward-Pass-with-Input-Gradients"]], "4.2. Burglary Alarm Example": [[113, "4.2.-Burglary-Alarm-Example"]], "4.2. Defining the Quantum Kernel": [[104, "4.2.-Defining-the-Quantum-Kernel"]], "4.2. Definition of the optimizers": [[105, "4.2.-Definition-of-the-optimizers"]], "4.2.1. EstimatorQNN Example": [[101, "4.2.1.-EstimatorQNN-Example"]], "4.2.2. SamplerQNN Example": [[101, "4.2.2.-SamplerQNN-Example"]], "4.3 Compute Local Effective Dimension of trained QNN": [[110, "4.3-Compute-Local-Effective-Dimension-of-trained-QNN"]], "4.3. Comparison of Kernel PCA on gaussian and quantum kernel": [[104, "4.3.-Comparison-of-Kernel-PCA-on-gaussian-and-quantum-kernel"]], "4.3. Visualization of the training process": [[105, "4.3.-Visualization-of-the-training-process"]], "4.4 Compute Local Effective Dimension of untrained QNN": [[110, "4.4-Compute-Local-Effective-Dimension-of-untrained-QNN"]], "4.5 Plot and analyze results": [[110, "4.5-Plot-and-analyze-results"]], "5. Advanced Functionality": [[101, "5.-Advanced-Functionality"]], "5. Building the Quantum Autoencoder Ansatz": [[112, "5.-Building-the-Quantum-Autoencoder-Ansatz"]], "5. Conclusion": [[103, "5.-Conclusion"], [104, "5.-Conclusion"]], "5. Model Training": [[105, "5.-Model-Training"]], "5. Training our QCNN": [[111, "5.-Training-our-QCNN"]], "5.1. EstimatorQNN with Multiple Observables": [[101, "5.1.-EstimatorQNN-with-Multiple-Observables"]], "5.2. SamplerQNN with custom interpret": [[101, "5.2.-SamplerQNN-with-custom-interpret"]], "6. A Simple Example: The Domain Wall Autoencoder": [[112, "6.-A-Simple-Example:-The-Domain-Wall-Autoencoder"]], "6. Conclusion": [[101, "6.-Conclusion"]], "6. Results: Cumulative Density Functions": [[105, "6.-Results:-Cumulative-Density-Functions"]], "6. Testing our QCNN": [[111, "6.-Testing-our-QCNN"]], "7. A Quantum Autoencoder for Digital Compression": [[112, "7.-A-Quantum-Autoencoder-for-Digital-Compression"]], "7. Conclusion": [[105, "7.-Conclusion"]], "7. References": [[111, "7.-References"]], "8. Applications of a Quantum Autoencoder": [[112, "8.-Applications-of-a-Quantum-Autoencoder"]], "9. References": [[112, "9.-References"]], "A. Classification with PyTorch and EstimatorQNN": [[106, "A.-Classification-with-PyTorch-and-EstimatorQNN"]], "A. Regression with PyTorch and EstimatorQNN": [[106, "A.-Regression-with-PyTorch-and-EstimatorQNN"]], "ADAM": [[61, null]], "AQGD": [[62, null]], "Algorithms": [[1, "algorithms"]], "Algorithms from qiskit_algorithms": [[16, "algorithms-from-qiskit-algorithms"]], "AskData": [[63, null]], "B. Classification with PyTorch and SamplerQNN": [[106, "B.-Classification-with-PyTorch-and-SamplerQNN"]], "Base Classes": [[5, "base-classes"]], "BaseEstimatorGradient": [[38, null]], "BaseKernel": [[48, null]], "BaseSamplerGradient": [[39, null]], "BaseStateFidelity": [[92, null]], "BinaryObjectiveFunction": [[20, null]], "Bug Fixes": [[18, "bug-fixes"], [18, "release-notes-0-8-2-bug-fixes"], [18, "release-notes-0-8-0-bug-fixes"], [18, "release-notes-0-7-0-bug-fixes"], [18, "release-notes-0-6-0-bug-fixes"], [18, "release-notes-0-5-0-bug-fixes"], [18, "release-notes-0-4-0-bug-fixes"], [18, "release-notes-0-3-0-bug-fixes"], [18, "release-notes-0-2-0-bug-fixes"]], "Building a classifier using CircuitQNN": [[15, "building-a-classifier-using-circuitqnn"]], "Building a classifier using SamplerQNN": [[15, "building-a-classifier-using-samplerqnn"]], "Building a regressor using EstimatorQNN": [[15, "building-a-regressor-using-estimatorqnn"]], "Building a regressor using OpflowQNN": [[15, "building-a-regressor-using-opflowqnn"]], "CG": [[64, null]], "COBYLA": [[65, null]], "CRS": [[66, null]], "Circuit library for machine learning applications (qiskit_machine_learning.circuit.library)": [[2, null]], "Classification": [[102, "Classification"]], "Classification with a SamplerQNN": [[102, "Classification-with-a-SamplerQNN"]], "Classification with an EstimatorQNN": [[102, "Classification-with-an-EstimatorQNN"]], "Classifiers": [[1, "classifiers"]], "ComputeUncompute": [[93, null]], "Connectors": [[3, "connectors"]], "Connectors (qiskit_machine_learning.connectors)": [[3, null]], "Content:": [[106, "Content:"]], "Contents": [[112, "Contents"]], "Create a dataset": [[15, "create-a-dataset"]], "CrossEntropyLoss": [[95, null]], "DIRECT_L": [[67, null]], "DIRECT_L_RAND": [[68, null]], "Datasets": [[4, "datasets"]], "Datasets (qiskit_machine_learning.datasets)": [[4, null]], "Define the Quantum Feature Map": [[108, "Define-the-Quantum-Feature-Map"]], "Deprecation Notes": [[18, "deprecation-notes"], [18, "release-notes-0-5-0-deprecation-notes"], [18, "release-notes-0-4-0-deprecation-notes"], [18, "release-notes-0-3-0-deprecation-notes"], [18, "release-notes-0-2-0-deprecation-notes"]], "ESCH": [[69, null]], "Effective Dimension of Qiskit Neural Networks": [[110, null]], "EffectiveDimension": [[56, null]], "EstimatorGradientResult": [[40, null]], "EstimatorQNN": [[15, "estimatorqnn"], [57, null]], "Feature maps": [[2, "feature-maps"]], "FidelityQuantumKernel": [[49, null]], "FidelityStatevectorKernel": [[50, null]], "Fit and Test the Model": [[108, "Fit-and-Test-the-Model"]], "GSLS": [[70, null]], "Getting started": [[13, null]], "Global optimizers": [[9, "global-optimizers"]], "GradientDescent": [[71, null]], "GradientDescentState": [[72, null]], "Gradients (qiskit_machine_learning.gradients)": [[5, null]], "Helper circuits": [[2, "helper-circuits"]], "ISRES": [[73, null]], "Import Local, External, and Qiskit Packages and define a callback class for our optimizer": [[108, "Import-Local,-External,-and-Qiskit-Packages-and-define-a-callback-class-for-our-optimizer"]], "Inference": [[1, "inference"]], "Installation": [[13, "installation"]], "Integration with PyTorch": [[14, "integration-with-pytorch"]], "Introduction": [[15, "introduction"], [16, "introduction"]], "Kernel as a callable function": [[104, "Kernel-as-a-callable-function"]], "Kernel-based methods": [[14, "kernel-based-methods"]], "KernelLoss": [[96, null]], "Known Issues": [[18, "known-issues"]], "L1Loss": [[97, null]], "L2Loss": [[98, null]], "L_BFGS_B": [[74, null]], "LinCombEstimatorGradient": [[41, null]], "LinCombSamplerGradient": [[42, null]], "Linear combination of unitaries": [[5, "linear-combination-of-unitaries"]], "Local optimizers": [[9, "local-optimizers"]], "LocalEffectiveDimension": [[58, null]], "Loss": [[99, null]], "Loss Function": [[106, "Loss-Function"]], "Loss Function Base Class": [[12, "loss-function-base-class"]], "Loss Functions": [[12, "loss-functions"]], "Loss Functions (qiskit_machine_learning.utils.loss_functions)": [[12, null]], "Machine Learning Base Classes": [[1, "machine-learning-base-classes"]], "Machine Learning Objective Functions": [[1, "machine-learning-objective-functions"]], "Machine Learning Tutorials": [[114, null]], "Metrics for neural networks": [[8, "metrics-for-neural-networks"]], "Migration to Qiskit 1.x": [[13, "migration-to-qiskit-1-x"]], "Minimizer": [[75, null]], "MultiClassObjectiveFunction": [[21, null]], "Multiple classes with VQC": [[102, "Multiple-classes-with-VQC"]], "NELDER_MEAD": [[76, null]], "NFT": [[77, null]], "Neural Network Base Classes": [[8, "neural-network-base-classes"]], "Neural Network Classifier & Regressor": [[102, null]], "Neural networks": [[8, "neural-networks"]], "NeuralNetwork": [[59, null]], "NeuralNetworkClassifier": [[22, null]], "NeuralNetworkRegressor": [[23, null]], "New Features": [[18, "new-features"], [18, "release-notes-0-8-0-new-features"], [18, "release-notes-0-7-0-new-features"], [18, "release-notes-0-6-0-new-features"], [18, "release-notes-0-5-0-new-features"], [18, "release-notes-0-4-0-new-features"], [18, "release-notes-0-3-0-new-features"], [18, "release-notes-0-2-0-new-features"]], "New implementation of quantum kernel": [[15, "new-implementation-of-quantum-kernel"]], "New quantum kernel": [[15, "new-quantum-kernel"]], "New quantum neural networks": [[15, "new-quantum-neural-networks"]], "Next Steps": [[14, "next-steps"]], "ObjectiveFunction": [[24, null]], "OneHotObjectiveFunction": [[25, null]], "Optimizer": [[78, null], [106, "Optimizer"]], "Optimizer base classes": [[9, "optimizer-base-classes"]], "OptimizerResult": [[79, null]], "OptimizerState": [[80, null]], "Optimizers (qiskit_machine_learning.optimizers)": [[9, null]], "Optional installs": [[13, "optional-installs"]], "Other notable deprecation": [[15, "other-notable-deprecation"]], "Overview": [[14, "overview"], [101, "Overview"], [104, "Overview"], [105, "Overview"], [113, "Overview"]], "Overview of the primitives": [[15, "overview-of-the-primitives"], [16, "overview-of-the-primitives"]], "POWELL": [[81, null]], "P_BFGS": [[82, null]], "ParamShiftEstimatorGradient": [[43, null]], "ParamShiftSamplerGradient": [[44, null]], "Parameter-shift rules": [[5, "parameter-shift-rules"]], "Part 1: Simple Classification & Regression": [[106, "Part-1:-Simple-Classification-&-Regression"]], "Part 2: MNIST Classification, Hybrid QNNs": [[106, "Part-2:-MNIST-Classification,-Hybrid-QNNs"]], "Pegasos Quantum Support Vector Classifier": [[107, null]], "PegasosQSVC": [[26, null]], "Precomputed kernel matrix": [[104, "Precomputed-kernel-matrix"]], "Prelude": [[18, "prelude"], [18, "release-notes-0-7-0-prelude"]], "Prepare the Dataset": [[108, "Prepare-the-Dataset"]], "Previous implementation of quantum kernel": [[15, "previous-implementation-of-quantum-kernel"]], "PyTorch qGAN Implementation": [[105, null]], "QBayesian": [[27, null]], "QNNCircuit": [[34, null]], "QNSPSA": [[83, null]], "QSVC": [[28, null]], "QSVR": [[29, null]], "Qiskit Machine Learning API Reference": [[0, null]], "Qiskit Machine Learning Migration Guide": [[17, null]], "Qiskit Machine Learning module (qiskit_machine_learning)": [[0, "qiskit-machine-learning-module-qiskit-machine-learning"]], "Qiskit Machine Learning overview": [[14, null]], "Qiskit Machine Learning v0.5 Migration Guide": [[15, null]], "Qiskit Machine Learning v0.8 Migration Guide": [[16, null]], "QiskitMachineLearningError": [[19, null]], "Quantum Bayesian Inference": [[113, null]], "Quantum Kernel Algorithms": [[7, null]], "Quantum Kernel Machine Learning": [[104, null]], "Quantum Kernel Training for Machine Learning Applications": [[108, null]], "Quantum Kernels": [[6, "quantum-kernels"]], "Quantum Neural Networks": [[101, null]], "Quantum Neural Networks (QNNs)": [[14, "quantum-neural-networks-qnns"]], "Quantum kernels (qiskit_machine_learning.kernels)": [[6, null]], "Quantum machine learning algorithms (qiskit_machine_learning.algorithms)": [[1, null]], "Quantum neural networks (qiskit_machine_learning.neural_networks)": [[8, null]], "QuantumKernelTrainer": [[54, null]], "QuantumKernelTrainerResult": [[55, null]], "RawFeatureVector": [[35, null]], "Ready to get going?\u2026": [[13, "ready-to-get-going"]], "Regression": [[102, "Regression"]], "Regression with an EstimatorQNN": [[102, "Regression-with-an-EstimatorQNN"]], "Regression with the Variational Quantum Regressor (VQR)": [[102, "Regression-with-the-Variational-Quantum-Regressor-(VQR)"]], "Regressors": [[1, "regressors"]], "Release Notes": [[18, null]], "Results": [[10, "results"]], "SLSQP": [[84, null]], "SPSA": [[85, null]], "SPSAEstimatorGradient": [[45, null]], "SPSASamplerGradient": [[46, null]], "SVCLoss": [[100, null]], "SamplerGradientResult": [[47, null]], "SamplerQNN": [[15, "samplerqnn"], [60, null]], "Saving, Loading Qiskit Machine Learning Models and Continuous Training": [[109, null]], "SciPyOptimizer": [[86, null]], "SerializableModelMixin": [[30, null]], "Set Up the Quantum Kernel and Quantum Kernel Trainer": [[108, "Set-Up-the-Quantum-Kernel-and-Quantum-Kernel-Trainer"]], "Simultaneous Perturbation Stochastic Approximation": [[5, "simultaneous-perturbation-stochastic-approximation"]], "State Fidelities (qiskit_machine_learning.state_fidelities)": [[10, null]], "State fidelities": [[10, "state-fidelities"]], "StateFidelityResult": [[94, null]], "Step 1: Defining Data-loaders for train and test": [[106, "Step-1:-Defining-Data-loaders-for-train-and-test"]], "Step 2: Defining the QNN and Hybrid Model": [[106, "Step-2:-Defining-the-QNN-and-Hybrid-Model"]], "Step 3: Training": [[106, "Step-3:-Training"]], "Step 4: Evaluation": [[106, "Step-4:-Evaluation"]], "Steppable optimization": [[9, "steppable-optimization"]], "SteppableOptimizer": [[87, null]], "Submodules": [[0, "submodules"], [6, "submodules"]], "TNC": [[88, null]], "TellData": [[89, null]], "The Parametrized Circuit": [[112, "The-Parametrized-Circuit"]], "The Quantum Autoencoder": [[112, null]], "The Quantum Convolution Neural Network": [[111, null]], "The SWAP Test": [[112, "The-SWAP-Test"]], "Torch Connector and Hybrid QNNs": [[106, null]], "TorchConnector": [[36, null]], "Train the Quantum Kernel": [[108, "Train-the-Quantum-Kernel"]], "TrainableFidelityQuantumKernel": [[51, null]], "TrainableFidelityStatevectorKernel": [[52, null]], "TrainableKernel": [[53, null]], "TrainableModel": [[31, null]], "Training a Quantum Model on a Real Dataset": [[103, null]], "Transpilation and Pass Managers": [[16, "transpilation-and-pass-managers"]], "UMDA": [[90, null]], "Upgrade Notes": [[18, "upgrade-notes"], [18, "release-notes-0-7-0-upgrade-notes"], [18, "release-notes-0-6-0-upgrade-notes"], [18, "release-notes-0-5-0-upgrade-notes"], [18, "release-notes-0-4-0-upgrade-notes"]], "Utilities": [[11, "utilities"]], "Utility functions and classes (qiskit_machine_learning.utils)": [[11, null]], "VQC": [[32, null]], "VQR": [[33, null]], "Variational Quantum Classifier (VQC)": [[102, "Variational-Quantum-Classifier-(VQC)"]], "Visualize the Kernel Training Process": [[108, "Visualize-the-Kernel-Training-Process"]], "What are the main features of Qiskit Machine Learning?": [[14, "what-are-the-main-features-of-qiskit-machine-learning"]], "ad_hoc_data": [[37, null]], "optimizer_utils": [[91, null]], "\ud83d\udd2a The Sharp Bits: Common Pitfalls": [[16, "the-sharp-bits-common-pitfalls"]]}, "docnames": ["apidocs/qiskit_machine_learning", "apidocs/qiskit_machine_learning.algorithms", "apidocs/qiskit_machine_learning.circuit.library", "apidocs/qiskit_machine_learning.connectors", "apidocs/qiskit_machine_learning.datasets", "apidocs/qiskit_machine_learning.gradients", "apidocs/qiskit_machine_learning.kernels", "apidocs/qiskit_machine_learning.kernels.algorithms", "apidocs/qiskit_machine_learning.neural_networks", "apidocs/qiskit_machine_learning.optimizers", "apidocs/qiskit_machine_learning.state_fidelities", "apidocs/qiskit_machine_learning.utils", "apidocs/qiskit_machine_learning.utils.loss_functions", "getting_started", "index", "migration/01_migration_guide_0.5", "migration/02_migration_guide_0.8", "migration/index", "release_notes", "stubs/qiskit_machine_learning.QiskitMachineLearningError", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC", "stubs/qiskit_machine_learning.algorithms.QBayesian", "stubs/qiskit_machine_learning.algorithms.QSVC", "stubs/qiskit_machine_learning.algorithms.QSVR", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin", "stubs/qiskit_machine_learning.algorithms.TrainableModel", "stubs/qiskit_machine_learning.algorithms.VQC", "stubs/qiskit_machine_learning.algorithms.VQR", "stubs/qiskit_machine_learning.circuit.library.QNNCircuit", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector", "stubs/qiskit_machine_learning.connectors.TorchConnector", "stubs/qiskit_machine_learning.datasets.ad_hoc_data", "stubs/qiskit_machine_learning.gradients.BaseEstimatorGradient", "stubs/qiskit_machine_learning.gradients.BaseSamplerGradient", "stubs/qiskit_machine_learning.gradients.EstimatorGradientResult", "stubs/qiskit_machine_learning.gradients.LinCombEstimatorGradient", "stubs/qiskit_machine_learning.gradients.LinCombSamplerGradient", "stubs/qiskit_machine_learning.gradients.ParamShiftEstimatorGradient", "stubs/qiskit_machine_learning.gradients.ParamShiftSamplerGradient", "stubs/qiskit_machine_learning.gradients.SPSAEstimatorGradient", "stubs/qiskit_machine_learning.gradients.SPSASamplerGradient", "stubs/qiskit_machine_learning.gradients.SamplerGradientResult", "stubs/qiskit_machine_learning.kernels.BaseKernel", "stubs/qiskit_machine_learning.kernels.FidelityQuantumKernel", "stubs/qiskit_machine_learning.kernels.FidelityStatevectorKernel", "stubs/qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel", "stubs/qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel", "stubs/qiskit_machine_learning.kernels.TrainableKernel", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.EstimatorQNN", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork", "stubs/qiskit_machine_learning.neural_networks.SamplerQNN", "stubs/qiskit_machine_learning.optimizers.ADAM", "stubs/qiskit_machine_learning.optimizers.AQGD", "stubs/qiskit_machine_learning.optimizers.AskData", "stubs/qiskit_machine_learning.optimizers.CG", "stubs/qiskit_machine_learning.optimizers.COBYLA", "stubs/qiskit_machine_learning.optimizers.CRS", "stubs/qiskit_machine_learning.optimizers.DIRECT_L", "stubs/qiskit_machine_learning.optimizers.DIRECT_L_RAND", "stubs/qiskit_machine_learning.optimizers.ESCH", "stubs/qiskit_machine_learning.optimizers.GSLS", "stubs/qiskit_machine_learning.optimizers.GradientDescent", "stubs/qiskit_machine_learning.optimizers.GradientDescentState", "stubs/qiskit_machine_learning.optimizers.ISRES", "stubs/qiskit_machine_learning.optimizers.L_BFGS_B", "stubs/qiskit_machine_learning.optimizers.Minimizer", "stubs/qiskit_machine_learning.optimizers.NELDER_MEAD", "stubs/qiskit_machine_learning.optimizers.NFT", "stubs/qiskit_machine_learning.optimizers.Optimizer", "stubs/qiskit_machine_learning.optimizers.OptimizerResult", "stubs/qiskit_machine_learning.optimizers.OptimizerState", "stubs/qiskit_machine_learning.optimizers.POWELL", "stubs/qiskit_machine_learning.optimizers.P_BFGS", "stubs/qiskit_machine_learning.optimizers.QNSPSA", "stubs/qiskit_machine_learning.optimizers.SLSQP", "stubs/qiskit_machine_learning.optimizers.SPSA", "stubs/qiskit_machine_learning.optimizers.SciPyOptimizer", "stubs/qiskit_machine_learning.optimizers.SteppableOptimizer", "stubs/qiskit_machine_learning.optimizers.TNC", "stubs/qiskit_machine_learning.optimizers.TellData", "stubs/qiskit_machine_learning.optimizers.UMDA", "stubs/qiskit_machine_learning.optimizers.optimizer_utils", "stubs/qiskit_machine_learning.state_fidelities.BaseStateFidelity", "stubs/qiskit_machine_learning.state_fidelities.ComputeUncompute", "stubs/qiskit_machine_learning.state_fidelities.StateFidelityResult", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss", "stubs/qiskit_machine_learning.utils.loss_functions.Loss", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss", "tutorials/01_neural_networks", "tutorials/02_neural_network_classifier_and_regressor", "tutorials/02a_training_a_quantum_model_on_a_real_dataset", "tutorials/03_quantum_kernel", "tutorials/04_torch_qgan", "tutorials/05_torch_connector", "tutorials/07_pegasos_qsvc", "tutorials/08_quantum_kernel_trainer", "tutorials/09_saving_and_loading_models", "tutorials/10_effective_dimension", "tutorials/11_quantum_convolutional_neural_networks", "tutorials/12_quantum_autoencoder", "tutorials/13_quantum_bayesian_inference", "tutorials/index"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["apidocs/qiskit_machine_learning.rst", "apidocs/qiskit_machine_learning.algorithms.rst", "apidocs/qiskit_machine_learning.circuit.library.rst", "apidocs/qiskit_machine_learning.connectors.rst", "apidocs/qiskit_machine_learning.datasets.rst", "apidocs/qiskit_machine_learning.gradients.rst", "apidocs/qiskit_machine_learning.kernels.rst", "apidocs/qiskit_machine_learning.kernels.algorithms.rst", "apidocs/qiskit_machine_learning.neural_networks.rst", "apidocs/qiskit_machine_learning.optimizers.rst", "apidocs/qiskit_machine_learning.state_fidelities.rst", "apidocs/qiskit_machine_learning.utils.rst", "apidocs/qiskit_machine_learning.utils.loss_functions.rst", "getting_started.rst", "index.rst", "migration/01_migration_guide_0.5.rst", "migration/02_migration_guide_0.8.rst", "migration/index.rst", "release_notes.rst", "stubs/qiskit_machine_learning.QiskitMachineLearningError.rst", "stubs/qiskit_machine_learning.algorithms.BinaryObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.rst", "stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.rst", "stubs/qiskit_machine_learning.algorithms.ObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.OneHotObjectiveFunction.rst", "stubs/qiskit_machine_learning.algorithms.PegasosQSVC.rst", "stubs/qiskit_machine_learning.algorithms.QBayesian.rst", "stubs/qiskit_machine_learning.algorithms.QSVC.rst", "stubs/qiskit_machine_learning.algorithms.QSVR.rst", "stubs/qiskit_machine_learning.algorithms.SerializableModelMixin.rst", "stubs/qiskit_machine_learning.algorithms.TrainableModel.rst", "stubs/qiskit_machine_learning.algorithms.VQC.rst", "stubs/qiskit_machine_learning.algorithms.VQR.rst", "stubs/qiskit_machine_learning.circuit.library.QNNCircuit.rst", "stubs/qiskit_machine_learning.circuit.library.RawFeatureVector.rst", "stubs/qiskit_machine_learning.connectors.TorchConnector.rst", "stubs/qiskit_machine_learning.datasets.ad_hoc_data.rst", "stubs/qiskit_machine_learning.gradients.BaseEstimatorGradient.rst", "stubs/qiskit_machine_learning.gradients.BaseSamplerGradient.rst", "stubs/qiskit_machine_learning.gradients.EstimatorGradientResult.rst", "stubs/qiskit_machine_learning.gradients.LinCombEstimatorGradient.rst", "stubs/qiskit_machine_learning.gradients.LinCombSamplerGradient.rst", "stubs/qiskit_machine_learning.gradients.ParamShiftEstimatorGradient.rst", "stubs/qiskit_machine_learning.gradients.ParamShiftSamplerGradient.rst", "stubs/qiskit_machine_learning.gradients.SPSAEstimatorGradient.rst", "stubs/qiskit_machine_learning.gradients.SPSASamplerGradient.rst", "stubs/qiskit_machine_learning.gradients.SamplerGradientResult.rst", "stubs/qiskit_machine_learning.kernels.BaseKernel.rst", "stubs/qiskit_machine_learning.kernels.FidelityQuantumKernel.rst", "stubs/qiskit_machine_learning.kernels.FidelityStatevectorKernel.rst", "stubs/qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.rst", "stubs/qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.rst", "stubs/qiskit_machine_learning.kernels.TrainableKernel.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.rst", "stubs/qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.rst", "stubs/qiskit_machine_learning.neural_networks.EffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.rst", "stubs/qiskit_machine_learning.neural_networks.LocalEffectiveDimension.rst", "stubs/qiskit_machine_learning.neural_networks.NeuralNetwork.rst", "stubs/qiskit_machine_learning.neural_networks.SamplerQNN.rst", "stubs/qiskit_machine_learning.optimizers.ADAM.rst", "stubs/qiskit_machine_learning.optimizers.AQGD.rst", "stubs/qiskit_machine_learning.optimizers.AskData.rst", "stubs/qiskit_machine_learning.optimizers.CG.rst", "stubs/qiskit_machine_learning.optimizers.COBYLA.rst", "stubs/qiskit_machine_learning.optimizers.CRS.rst", "stubs/qiskit_machine_learning.optimizers.DIRECT_L.rst", "stubs/qiskit_machine_learning.optimizers.DIRECT_L_RAND.rst", "stubs/qiskit_machine_learning.optimizers.ESCH.rst", "stubs/qiskit_machine_learning.optimizers.GSLS.rst", "stubs/qiskit_machine_learning.optimizers.GradientDescent.rst", "stubs/qiskit_machine_learning.optimizers.GradientDescentState.rst", "stubs/qiskit_machine_learning.optimizers.ISRES.rst", "stubs/qiskit_machine_learning.optimizers.L_BFGS_B.rst", "stubs/qiskit_machine_learning.optimizers.Minimizer.rst", "stubs/qiskit_machine_learning.optimizers.NELDER_MEAD.rst", "stubs/qiskit_machine_learning.optimizers.NFT.rst", "stubs/qiskit_machine_learning.optimizers.Optimizer.rst", "stubs/qiskit_machine_learning.optimizers.OptimizerResult.rst", "stubs/qiskit_machine_learning.optimizers.OptimizerState.rst", "stubs/qiskit_machine_learning.optimizers.POWELL.rst", "stubs/qiskit_machine_learning.optimizers.P_BFGS.rst", "stubs/qiskit_machine_learning.optimizers.QNSPSA.rst", "stubs/qiskit_machine_learning.optimizers.SLSQP.rst", "stubs/qiskit_machine_learning.optimizers.SPSA.rst", "stubs/qiskit_machine_learning.optimizers.SciPyOptimizer.rst", "stubs/qiskit_machine_learning.optimizers.SteppableOptimizer.rst", "stubs/qiskit_machine_learning.optimizers.TNC.rst", "stubs/qiskit_machine_learning.optimizers.TellData.rst", "stubs/qiskit_machine_learning.optimizers.UMDA.rst", "stubs/qiskit_machine_learning.optimizers.optimizer_utils.rst", "stubs/qiskit_machine_learning.state_fidelities.BaseStateFidelity.rst", "stubs/qiskit_machine_learning.state_fidelities.ComputeUncompute.rst", "stubs/qiskit_machine_learning.state_fidelities.StateFidelityResult.rst", "stubs/qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.KernelLoss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L1Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.L2Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.Loss.rst", "stubs/qiskit_machine_learning.utils.loss_functions.SVCLoss.rst", "tutorials/01_neural_networks.ipynb", "tutorials/02_neural_network_classifier_and_regressor.ipynb", "tutorials/02a_training_a_quantum_model_on_a_real_dataset.ipynb", "tutorials/03_quantum_kernel.ipynb", "tutorials/04_torch_qgan.ipynb", "tutorials/05_torch_connector.ipynb", "tutorials/07_pegasos_qsvc.ipynb", "tutorials/08_quantum_kernel_trainer.ipynb", "tutorials/09_saving_and_loading_models.ipynb", "tutorials/10_effective_dimension.ipynb", "tutorials/11_quantum_convolutional_neural_networks.ipynb", "tutorials/12_quantum_autoencoder.ipynb", "tutorials/13_quantum_bayesian_inference.ipynb", "tutorials/index.rst"], "indexentries": {"ad_hoc_data() (in module qiskit_machine_learning.datasets)": [[37, "qiskit_machine_learning.datasets.ad_hoc_data", false]], "adam (class in qiskit_machine_learning.optimizers)": [[61, "qiskit_machine_learning.optimizers.ADAM", false]], "alpha (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.alpha", false]], "ansatz (qnncircuit attribute)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit.ansatz", false]], "ansatz (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.ansatz", false]], "ansatz (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.ansatz", false]], "aqgd (class in qiskit_machine_learning.optimizers)": [[62, "qiskit_machine_learning.optimizers.AQGD", false]], "ask() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.ask", false]], "ask() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.ask", false]], "askdata (class in qiskit_machine_learning.optimizers)": [[63, "qiskit_machine_learning.optimizers.AskData", false]], "assign_training_parameters() (trainablefidelityquantumkernel method)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.assign_training_parameters", false]], "assign_training_parameters() (trainablefidelitystatevectorkernel method)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.assign_training_parameters", false]], "assign_training_parameters() (trainablekernel method)": [[53, "qiskit_machine_learning.kernels.TrainableKernel.assign_training_parameters", false]], "backward() (estimatorqnn method)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.backward", false]], "backward() (neuralnetwork method)": [[59, "qiskit_machine_learning.neural_networks.NeuralNetwork.backward", false]], "backward() (samplerqnn method)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.backward", false]], "baseestimatorgradient (class in qiskit_machine_learning.gradients)": [[38, "qiskit_machine_learning.gradients.BaseEstimatorGradient", false]], "basekernel (class in qiskit_machine_learning.kernels)": [[48, "qiskit_machine_learning.kernels.BaseKernel", false]], "basesamplergradient (class in qiskit_machine_learning.gradients)": [[39, "qiskit_machine_learning.gradients.BaseSamplerGradient", false]], "basestatefidelity (class in qiskit_machine_learning.state_fidelities)": [[92, "qiskit_machine_learning.state_fidelities.BaseStateFidelity", false]], "binaryobjectivefunction (class in qiskit_machine_learning.algorithms)": [[20, "qiskit_machine_learning.algorithms.BinaryObjectiveFunction", false]], "bounds_support_level (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.bounds_support_level", false]], "bounds_support_level (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.bounds_support_level", false]], "bounds_support_level (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.bounds_support_level", false]], "bounds_support_level (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.bounds_support_level", false]], "bounds_support_level (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.bounds_support_level", false]], "bounds_support_level (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.bounds_support_level", false]], "bounds_support_level (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.bounds_support_level", false]], "bounds_support_level (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.bounds_support_level", false]], "bounds_support_level (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.bounds_support_level", false]], "bounds_support_level (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.bounds_support_level", false]], "bounds_support_level (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.bounds_support_level", false]], "bounds_support_level (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.bounds_support_level", false]], "bounds_support_level (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.bounds_support_level", false]], "bounds_support_level (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.bounds_support_level", false]], "bounds_support_level (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.bounds_support_level", false]], "bounds_support_level (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.bounds_support_level", false]], "bounds_support_level (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.bounds_support_level", false]], "bounds_support_level (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.bounds_support_level", false]], "bounds_support_level (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.bounds_support_level", false]], "bounds_support_level (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.bounds_support_level", false]], "bounds_support_level (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.bounds_support_level", false]], "bounds_support_level (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.bounds_support_level", false]], "bounds_support_level (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.bounds_support_level", false]], "bounds_support_level (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.bounds_support_level", false]], "calibrate() (qnspsa static method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.calibrate", false]], "calibrate() (spsa static method)": [[85, "qiskit_machine_learning.optimizers.SPSA.calibrate", false]], "callback (neuralnetworkclassifier attribute)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.callback", false]], "callback (neuralnetworkregressor attribute)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.callback", false]], "callback (trainablemodel attribute)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.callback", false]], "callback (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.callback", false]], "callback (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.callback", false]], "cg (class in qiskit_machine_learning.optimizers)": [[64, "qiskit_machine_learning.optimizers.CG", false]], "circuit (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.circuit", false]], "circuit (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.circuit", false]], "circuit (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.circuit", false]], "clear_cache() (fidelitystatevectorkernel method)": [[50, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.clear_cache", false]], "clear_cache() (trainablefidelitystatevectorkernel method)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.clear_cache", false]], "close() (learningrate method)": [[91, "qiskit_machine_learning.optimizers.optimizer_utils.LearningRate.close", false]], "cobyla (class in qiskit_machine_learning.optimizers)": [[65, "qiskit_machine_learning.optimizers.COBYLA", false]], "coef_ (qsvc attribute)": [[28, "qiskit_machine_learning.algorithms.QSVC.coef_", false]], "coef_ (qsvr attribute)": [[29, "qiskit_machine_learning.algorithms.QSVR.coef_", false]], "combine() (optimizerresult method)": [[79, "qiskit_machine_learning.optimizers.OptimizerResult.combine", false]], "combine() (quantumkerneltrainerresult method)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.combine", false]], "computeuncompute (class in qiskit_machine_learning.state_fidelities)": [[93, "qiskit_machine_learning.state_fidelities.ComputeUncompute", false]], "continue_condition() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.continue_condition", false]], "continue_condition() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.continue_condition", false]], "converged (qbayesian attribute)": [[27, "qiskit_machine_learning.algorithms.QBayesian.converged", false]], "create_fidelity_circuit() (basestatefidelity method)": [[92, "qiskit_machine_learning.state_fidelities.BaseStateFidelity.create_fidelity_circuit", false]], "create_fidelity_circuit() (computeuncompute method)": [[93, "qiskit_machine_learning.state_fidelities.ComputeUncompute.create_fidelity_circuit", false]], "create_result() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.create_result", false]], "create_result() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.create_result", false]], "cregs (qnncircuit attribute)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit.cregs", false]], "cregs (rawfeaturevector attribute)": [[35, "qiskit_machine_learning.circuit.library.RawFeatureVector.cregs", false]], "crossentropyloss (class in qiskit_machine_learning.utils.loss_functions)": [[95, "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss", false]], "crs (class in qiskit_machine_learning.optimizers)": [[66, "qiskit_machine_learning.optimizers.CRS", false]], "current (learningrate property)": [[91, "qiskit_machine_learning.optimizers.optimizer_utils.LearningRate.current", false]], "decision_function() (pegasosqsvc method)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.decision_function", false]], "decision_function() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.decision_function", false]], "default_precision (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.default_precision", false]], "derivative_type (baseestimatorgradient attribute)": [[38, "qiskit_machine_learning.gradients.BaseEstimatorGradient.derivative_type", false]], "derivative_type (lincombestimatorgradient attribute)": [[41, "qiskit_machine_learning.gradients.LinCombEstimatorGradient.derivative_type", false]], "derivative_type (paramshiftestimatorgradient attribute)": [[43, "qiskit_machine_learning.gradients.ParamShiftEstimatorGradient.derivative_type", false]], "derivative_type (spsaestimatorgradient attribute)": [[45, "qiskit_machine_learning.gradients.SPSAEstimatorGradient.derivative_type", false]], "direct_l (class in qiskit_machine_learning.optimizers)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L", false]], "direct_l_rand (class in qiskit_machine_learning.optimizers)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND", false]], "effectivedimension (class in qiskit_machine_learning.neural_networks)": [[56, "qiskit_machine_learning.neural_networks.EffectiveDimension", false]], "elite_factor (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.ELITE_FACTOR", false]], "enforce_psd (basekernel attribute)": [[48, "qiskit_machine_learning.kernels.BaseKernel.enforce_psd", false]], "enforce_psd (fidelityquantumkernel attribute)": [[49, "qiskit_machine_learning.kernels.FidelityQuantumKernel.enforce_psd", false]], "enforce_psd (fidelitystatevectorkernel attribute)": [[50, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.enforce_psd", false]], "enforce_psd (trainablefidelityquantumkernel attribute)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.enforce_psd", false]], "enforce_psd (trainablefidelitystatevectorkernel attribute)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.enforce_psd", false]], "enforce_psd (trainablekernel attribute)": [[53, "qiskit_machine_learning.kernels.TrainableKernel.enforce_psd", false]], "esch (class in qiskit_machine_learning.optimizers)": [[69, "qiskit_machine_learning.optimizers.ESCH", false]], "estimate_stddev() (qnspsa static method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.estimate_stddev", false]], "estimate_stddev() (spsa static method)": [[85, "qiskit_machine_learning.optimizers.SPSA.estimate_stddev", false]], "estimator (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.estimator", false]], "estimatorgradientresult (class in qiskit_machine_learning.gradients)": [[40, "qiskit_machine_learning.gradients.EstimatorGradientResult", false]], "estimatorqnn (class in qiskit_machine_learning.neural_networks)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN", false]], "eval_fun (telldata attribute)": [[89, "qiskit_machine_learning.optimizers.TellData.eval_fun", false]], "eval_jac (telldata attribute)": [[89, "qiskit_machine_learning.optimizers.TellData.eval_jac", false]], "evaluate() (basekernel method)": [[48, "qiskit_machine_learning.kernels.BaseKernel.evaluate", false]], "evaluate() (crossentropyloss method)": [[95, "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.evaluate", false]], "evaluate() (fidelityquantumkernel method)": [[49, "qiskit_machine_learning.kernels.FidelityQuantumKernel.evaluate", false]], "evaluate() (fidelitystatevectorkernel method)": [[50, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.evaluate", false]], "evaluate() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.evaluate", false]], "evaluate() (kernelloss method)": [[96, "qiskit_machine_learning.utils.loss_functions.KernelLoss.evaluate", false]], "evaluate() (l1loss method)": [[97, "qiskit_machine_learning.utils.loss_functions.L1Loss.evaluate", false]], "evaluate() (l2loss method)": [[98, "qiskit_machine_learning.utils.loss_functions.L2Loss.evaluate", false]], "evaluate() (loss method)": [[99, "qiskit_machine_learning.utils.loss_functions.Loss.evaluate", false]], "evaluate() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.evaluate", false]], "evaluate() (svcloss method)": [[100, "qiskit_machine_learning.utils.loss_functions.SVCLoss.evaluate", false]], "evaluate() (trainablefidelityquantumkernel method)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.evaluate", false]], "evaluate() (trainablefidelitystatevectorkernel method)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.evaluate", false]], "evaluate() (trainablekernel method)": [[53, "qiskit_machine_learning.kernels.TrainableKernel.evaluate", false]], "evaluate_duplicates (fidelityquantumkernel attribute)": [[49, "qiskit_machine_learning.kernels.FidelityQuantumKernel.evaluate_duplicates", false]], "evaluate_duplicates (trainablefidelityquantumkernel attribute)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.evaluate_duplicates", false]], "feature_dimension (rawfeaturevector attribute)": [[35, "qiskit_machine_learning.circuit.library.RawFeatureVector.feature_dimension", false]], "feature_map (basekernel attribute)": [[48, "qiskit_machine_learning.kernels.BaseKernel.feature_map", false]], "feature_map (fidelityquantumkernel attribute)": [[49, "qiskit_machine_learning.kernels.FidelityQuantumKernel.feature_map", false]], "feature_map (fidelitystatevectorkernel attribute)": [[50, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.feature_map", false]], "feature_map (qnncircuit attribute)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit.feature_map", false]], "feature_map (trainablefidelityquantumkernel attribute)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.feature_map", false]], "feature_map (trainablefidelitystatevectorkernel attribute)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.feature_map", false]], "feature_map (trainablekernel attribute)": [[53, "qiskit_machine_learning.kernels.TrainableKernel.feature_map", false]], "feature_map (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.feature_map", false]], "feature_map (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.feature_map", false]], "fidelities (statefidelityresult attribute)": [[94, "qiskit_machine_learning.state_fidelities.StateFidelityResult.fidelities", false]], "fidelity (fidelityquantumkernel attribute)": [[49, "qiskit_machine_learning.kernels.FidelityQuantumKernel.fidelity", false]], "fidelity (trainablefidelityquantumkernel attribute)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.fidelity", false]], "fidelityquantumkernel (class in qiskit_machine_learning.kernels)": [[49, "qiskit_machine_learning.kernels.FidelityQuantumKernel", false]], "fidelitystatevectorkernel (class in qiskit_machine_learning.kernels)": [[50, "qiskit_machine_learning.kernels.FidelityStatevectorKernel", false]], "fit() (neuralnetworkclassifier method)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit", false]], "fit() (neuralnetworkregressor method)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit", false]], "fit() (pegasosqsvc method)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.fit", false]], "fit() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.fit", false]], "fit() (qsvr method)": [[29, "qiskit_machine_learning.algorithms.QSVR.fit", false]], "fit() (quantumkerneltrainer method)": [[54, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.fit", false]], "fit() (trainablemodel method)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.fit", false]], "fit() (vqc method)": [[32, "qiskit_machine_learning.algorithms.VQC.fit", false]], "fit() (vqr method)": [[33, "qiskit_machine_learning.algorithms.VQR.fit", false]], "fit_result (neuralnetworkclassifier attribute)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.fit_result", false]], "fit_result (neuralnetworkregressor attribute)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.fit_result", false]], "fit_result (trainablemodel attribute)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.fit_result", false]], "fit_result (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.fit_result", false]], "fit_result (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.fit_result", false]], "fitted (pegasosqsvc attribute)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.FITTED", false]], "forward() (estimatorqnn method)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.forward", false]], "forward() (neuralnetwork method)": [[59, "qiskit_machine_learning.neural_networks.NeuralNetwork.forward", false]], "forward() (samplerqnn method)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.forward", false]], "forward() (torchconnector method)": [[36, "qiskit_machine_learning.connectors.TorchConnector.forward", false]], "fun (gradientdescentstate attribute)": [[72, "qiskit_machine_learning.optimizers.GradientDescentState.fun", false]], "fun (optimizerresult attribute)": [[79, "qiskit_machine_learning.optimizers.OptimizerResult.fun", false]], "fun (optimizerstate attribute)": [[80, "qiskit_machine_learning.optimizers.OptimizerState.fun", false]], "get_effective_dimension() (effectivedimension method)": [[56, "qiskit_machine_learning.neural_networks.EffectiveDimension.get_effective_dimension", false]], "get_effective_dimension() (localeffectivedimension method)": [[58, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.get_effective_dimension", false]], "get_fidelity() (qnspsa static method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.get_fidelity", false]], "get_fisher_information() (effectivedimension method)": [[56, "qiskit_machine_learning.neural_networks.EffectiveDimension.get_fisher_information", false]], "get_fisher_information() (localeffectivedimension method)": [[58, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.get_fisher_information", false]], "get_metadata_routing() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.get_metadata_routing", false]], "get_metadata_routing() (qsvr method)": [[29, "qiskit_machine_learning.algorithms.QSVR.get_metadata_routing", false]], "get_nlopt_optimizer() (crs method)": [[66, "qiskit_machine_learning.optimizers.CRS.get_nlopt_optimizer", false]], "get_nlopt_optimizer() (direct_l method)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.get_nlopt_optimizer", false]], "get_nlopt_optimizer() (direct_l_rand method)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.get_nlopt_optimizer", false]], "get_nlopt_optimizer() (esch method)": [[69, "qiskit_machine_learning.optimizers.ESCH.get_nlopt_optimizer", false]], "get_nlopt_optimizer() (isres method)": [[73, "qiskit_machine_learning.optimizers.ISRES.get_nlopt_optimizer", false]], "get_normalized_fisher() (effectivedimension method)": [[56, "qiskit_machine_learning.neural_networks.EffectiveDimension.get_normalized_fisher", false]], "get_normalized_fisher() (localeffectivedimension method)": [[58, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.get_normalized_fisher", false]], "get_params() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.get_params", false]], "get_params() (qsvr method)": [[29, "qiskit_machine_learning.algorithms.QSVR.get_params", false]], "get_support_level() (adam method)": [[61, "qiskit_machine_learning.optimizers.ADAM.get_support_level", false]], "get_support_level() (aqgd method)": [[62, "qiskit_machine_learning.optimizers.AQGD.get_support_level", false]], "get_support_level() (cg method)": [[64, "qiskit_machine_learning.optimizers.CG.get_support_level", false]], "get_support_level() (cobyla method)": [[65, "qiskit_machine_learning.optimizers.COBYLA.get_support_level", false]], "get_support_level() (crs method)": [[66, "qiskit_machine_learning.optimizers.CRS.get_support_level", false]], "get_support_level() (direct_l method)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.get_support_level", false]], "get_support_level() (direct_l_rand method)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.get_support_level", false]], "get_support_level() (esch method)": [[69, "qiskit_machine_learning.optimizers.ESCH.get_support_level", false]], "get_support_level() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.get_support_level", false]], "get_support_level() (gsls method)": [[70, "qiskit_machine_learning.optimizers.GSLS.get_support_level", false]], "get_support_level() (isres method)": [[73, "qiskit_machine_learning.optimizers.ISRES.get_support_level", false]], "get_support_level() (l_bfgs_b method)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.get_support_level", false]], "get_support_level() (nelder_mead method)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.get_support_level", false]], "get_support_level() (nft method)": [[77, "qiskit_machine_learning.optimizers.NFT.get_support_level", false]], "get_support_level() (optimizer method)": [[78, "qiskit_machine_learning.optimizers.Optimizer.get_support_level", false]], "get_support_level() (p_bfgs method)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.get_support_level", false]], "get_support_level() (powell method)": [[81, "qiskit_machine_learning.optimizers.POWELL.get_support_level", false]], "get_support_level() (qnspsa method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.get_support_level", false]], "get_support_level() (scipyoptimizer method)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.get_support_level", false]], "get_support_level() (slsqp method)": [[84, "qiskit_machine_learning.optimizers.SLSQP.get_support_level", false]], "get_support_level() (spsa method)": [[85, "qiskit_machine_learning.optimizers.SPSA.get_support_level", false]], "get_support_level() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.get_support_level", false]], "get_support_level() (tnc method)": [[88, "qiskit_machine_learning.optimizers.TNC.get_support_level", false]], "get_support_level() (umda method)": [[90, "qiskit_machine_learning.optimizers.UMDA.get_support_level", false]], "gradient (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.gradient", false]], "gradient (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.gradient", false]], "gradient() (binaryobjectivefunction method)": [[20, "qiskit_machine_learning.algorithms.BinaryObjectiveFunction.gradient", false]], "gradient() (crossentropyloss method)": [[95, "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss.gradient", false]], "gradient() (l1loss method)": [[97, "qiskit_machine_learning.utils.loss_functions.L1Loss.gradient", false]], "gradient() (l2loss method)": [[98, "qiskit_machine_learning.utils.loss_functions.L2Loss.gradient", false]], "gradient() (loss method)": [[99, "qiskit_machine_learning.utils.loss_functions.Loss.gradient", false]], "gradient() (multiclassobjectivefunction method)": [[21, "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.gradient", false]], "gradient() (objectivefunction method)": [[24, "qiskit_machine_learning.algorithms.ObjectiveFunction.gradient", false]], "gradient() (onehotobjectivefunction method)": [[25, "qiskit_machine_learning.algorithms.OneHotObjectiveFunction.gradient", false]], "gradient_approximation() (gsls method)": [[70, "qiskit_machine_learning.optimizers.GSLS.gradient_approximation", false]], "gradient_num_diff() (adam static method)": [[61, "qiskit_machine_learning.optimizers.ADAM.gradient_num_diff", false]], "gradient_num_diff() (aqgd static method)": [[62, "qiskit_machine_learning.optimizers.AQGD.gradient_num_diff", false]], "gradient_num_diff() (cg static method)": [[64, "qiskit_machine_learning.optimizers.CG.gradient_num_diff", false]], "gradient_num_diff() (cobyla static method)": [[65, "qiskit_machine_learning.optimizers.COBYLA.gradient_num_diff", false]], "gradient_num_diff() (crs static method)": [[66, "qiskit_machine_learning.optimizers.CRS.gradient_num_diff", false]], "gradient_num_diff() (direct_l static method)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.gradient_num_diff", false]], "gradient_num_diff() (direct_l_rand static method)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.gradient_num_diff", false]], "gradient_num_diff() (esch static method)": [[69, "qiskit_machine_learning.optimizers.ESCH.gradient_num_diff", false]], "gradient_num_diff() (gradientdescent static method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.gradient_num_diff", false]], "gradient_num_diff() (gsls static method)": [[70, "qiskit_machine_learning.optimizers.GSLS.gradient_num_diff", false]], "gradient_num_diff() (isres static method)": [[73, "qiskit_machine_learning.optimizers.ISRES.gradient_num_diff", false]], "gradient_num_diff() (l_bfgs_b static method)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.gradient_num_diff", false]], "gradient_num_diff() (nelder_mead static method)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.gradient_num_diff", false]], "gradient_num_diff() (nft static method)": [[77, "qiskit_machine_learning.optimizers.NFT.gradient_num_diff", false]], "gradient_num_diff() (optimizer static method)": [[78, "qiskit_machine_learning.optimizers.Optimizer.gradient_num_diff", false]], "gradient_num_diff() (p_bfgs static method)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.gradient_num_diff", false]], "gradient_num_diff() (powell static method)": [[81, "qiskit_machine_learning.optimizers.POWELL.gradient_num_diff", false]], "gradient_num_diff() (qnspsa static method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.gradient_num_diff", false]], "gradient_num_diff() (scipyoptimizer static method)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.gradient_num_diff", false]], "gradient_num_diff() (slsqp static method)": [[84, "qiskit_machine_learning.optimizers.SLSQP.gradient_num_diff", false]], "gradient_num_diff() (spsa static method)": [[85, "qiskit_machine_learning.optimizers.SPSA.gradient_num_diff", false]], "gradient_num_diff() (steppableoptimizer static method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.gradient_num_diff", false]], "gradient_num_diff() (tnc static method)": [[88, "qiskit_machine_learning.optimizers.TNC.gradient_num_diff", false]], "gradient_num_diff() (umda static method)": [[90, "qiskit_machine_learning.optimizers.UMDA.gradient_num_diff", false]], "gradient_support_level (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.gradient_support_level", false]], "gradient_support_level (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.gradient_support_level", false]], "gradient_support_level (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.gradient_support_level", false]], "gradient_support_level (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.gradient_support_level", false]], "gradient_support_level (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.gradient_support_level", false]], "gradient_support_level (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.gradient_support_level", false]], "gradient_support_level (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.gradient_support_level", false]], "gradient_support_level (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.gradient_support_level", false]], "gradient_support_level (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.gradient_support_level", false]], "gradient_support_level (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.gradient_support_level", false]], "gradient_support_level (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.gradient_support_level", false]], "gradient_support_level (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.gradient_support_level", false]], "gradient_support_level (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.gradient_support_level", false]], "gradient_support_level (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.gradient_support_level", false]], "gradient_support_level (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.gradient_support_level", false]], "gradient_support_level (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.gradient_support_level", false]], "gradient_support_level (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.gradient_support_level", false]], "gradient_support_level (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.gradient_support_level", false]], "gradient_support_level (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.gradient_support_level", false]], "gradient_support_level (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.gradient_support_level", false]], "gradient_support_level (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.gradient_support_level", false]], "gradient_support_level (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.gradient_support_level", false]], "gradient_support_level (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.gradient_support_level", false]], "gradient_support_level (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.gradient_support_level", false]], "gradientdescent (class in qiskit_machine_learning.optimizers)": [[71, "qiskit_machine_learning.optimizers.GradientDescent", false]], "gradientdescentstate (class in qiskit_machine_learning.optimizers)": [[72, "qiskit_machine_learning.optimizers.GradientDescentState", false]], "gradients (estimatorgradientresult attribute)": [[40, "qiskit_machine_learning.gradients.EstimatorGradientResult.gradients", false]], "gradients (samplergradientresult attribute)": [[47, "qiskit_machine_learning.gradients.SamplerGradientResult.gradients", false]], "gsls (class in qiskit_machine_learning.optimizers)": [[70, "qiskit_machine_learning.optimizers.GSLS", false]], "inference() (qbayesian method)": [[27, "qiskit_machine_learning.algorithms.QBayesian.inference", false]], "initial_point (neuralnetworkclassifier attribute)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.initial_point", false]], "initial_point (neuralnetworkregressor attribute)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.initial_point", false]], "initial_point (quantumkerneltrainer attribute)": [[54, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.initial_point", false]], "initial_point (trainablemodel attribute)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.initial_point", false]], "initial_point (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.initial_point", false]], "initial_point (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.initial_point", false]], "initial_point_support_level (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.initial_point_support_level", false]], "initial_point_support_level (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.initial_point_support_level", false]], "initial_point_support_level (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.initial_point_support_level", false]], "initial_point_support_level (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.initial_point_support_level", false]], "initial_point_support_level (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.initial_point_support_level", false]], "initial_point_support_level (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.initial_point_support_level", false]], "initial_point_support_level (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.initial_point_support_level", false]], "initial_point_support_level (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.initial_point_support_level", false]], "initial_point_support_level (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.initial_point_support_level", false]], "initial_point_support_level (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.initial_point_support_level", false]], "initial_point_support_level (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.initial_point_support_level", false]], "initial_point_support_level (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.initial_point_support_level", false]], "initial_point_support_level (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.initial_point_support_level", false]], "initial_point_support_level (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.initial_point_support_level", false]], "initial_point_support_level (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.initial_point_support_level", false]], "initial_point_support_level (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.initial_point_support_level", false]], "initial_point_support_level (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.initial_point_support_level", false]], "initial_point_support_level (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.initial_point_support_level", false]], "initial_point_support_level (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.initial_point_support_level", false]], "initial_point_support_level (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.initial_point_support_level", false]], "initial_point_support_level (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.initial_point_support_level", false]], "initial_point_support_level (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.initial_point_support_level", false]], "initial_point_support_level (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.initial_point_support_level", false]], "initial_point_support_level (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.initial_point_support_level", false]], "input_gradients (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.input_gradients", false]], "input_gradients (neuralnetwork attribute)": [[59, "qiskit_machine_learning.neural_networks.NeuralNetwork.input_gradients", false]], "input_gradients (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.input_gradients", false]], "input_parameters (qnncircuit attribute)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit.input_parameters", false]], "input_params (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.input_params", false]], "input_params (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.input_params", false]], "input_samples (effectivedimension attribute)": [[56, "qiskit_machine_learning.neural_networks.EffectiveDimension.input_samples", false]], "input_samples (localeffectivedimension attribute)": [[58, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.input_samples", false]], "interpret (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.interpret", false]], "is_bounds_ignored (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.is_bounds_ignored", false]], "is_bounds_ignored (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.is_bounds_ignored", false]], "is_bounds_ignored (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.is_bounds_ignored", false]], "is_bounds_ignored (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.is_bounds_ignored", false]], "is_bounds_ignored (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.is_bounds_ignored", false]], "is_bounds_ignored (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.is_bounds_ignored", false]], "is_bounds_ignored (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.is_bounds_ignored", false]], "is_bounds_ignored (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.is_bounds_ignored", false]], "is_bounds_ignored (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.is_bounds_ignored", false]], "is_bounds_ignored (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.is_bounds_ignored", false]], "is_bounds_ignored (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.is_bounds_ignored", false]], "is_bounds_ignored (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.is_bounds_ignored", false]], "is_bounds_ignored (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.is_bounds_ignored", false]], "is_bounds_ignored (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.is_bounds_ignored", false]], "is_bounds_ignored (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.is_bounds_ignored", false]], "is_bounds_ignored (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.is_bounds_ignored", false]], "is_bounds_ignored (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.is_bounds_ignored", false]], "is_bounds_ignored (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.is_bounds_ignored", false]], "is_bounds_ignored (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.is_bounds_ignored", false]], "is_bounds_ignored (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.is_bounds_ignored", false]], "is_bounds_ignored (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.is_bounds_ignored", false]], "is_bounds_ignored (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.is_bounds_ignored", false]], "is_bounds_ignored (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.is_bounds_ignored", false]], "is_bounds_ignored (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.is_bounds_ignored", false]], "is_bounds_required (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.is_bounds_required", false]], "is_bounds_required (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.is_bounds_required", false]], "is_bounds_required (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.is_bounds_required", false]], "is_bounds_required (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.is_bounds_required", false]], "is_bounds_required (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.is_bounds_required", false]], "is_bounds_required (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.is_bounds_required", false]], "is_bounds_required (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.is_bounds_required", false]], "is_bounds_required (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.is_bounds_required", false]], "is_bounds_required (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.is_bounds_required", false]], "is_bounds_required (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.is_bounds_required", false]], "is_bounds_required (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.is_bounds_required", false]], "is_bounds_required (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.is_bounds_required", false]], "is_bounds_required (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.is_bounds_required", false]], "is_bounds_required (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.is_bounds_required", false]], "is_bounds_required (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.is_bounds_required", false]], "is_bounds_required (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.is_bounds_required", false]], "is_bounds_required (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.is_bounds_required", false]], "is_bounds_required (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.is_bounds_required", false]], "is_bounds_required (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.is_bounds_required", false]], "is_bounds_required (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.is_bounds_required", false]], "is_bounds_required (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.is_bounds_required", false]], "is_bounds_required (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.is_bounds_required", false]], "is_bounds_required (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.is_bounds_required", false]], "is_bounds_required (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.is_bounds_required", false]], "is_bounds_supported (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.is_bounds_supported", false]], "is_bounds_supported (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.is_bounds_supported", false]], "is_bounds_supported (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.is_bounds_supported", false]], "is_bounds_supported (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.is_bounds_supported", false]], "is_bounds_supported (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.is_bounds_supported", false]], "is_bounds_supported (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.is_bounds_supported", false]], "is_bounds_supported (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.is_bounds_supported", false]], "is_bounds_supported (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.is_bounds_supported", false]], "is_bounds_supported (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.is_bounds_supported", false]], "is_bounds_supported (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.is_bounds_supported", false]], "is_bounds_supported (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.is_bounds_supported", false]], "is_bounds_supported (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.is_bounds_supported", false]], "is_bounds_supported (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.is_bounds_supported", false]], "is_bounds_supported (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.is_bounds_supported", false]], "is_bounds_supported (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.is_bounds_supported", false]], "is_bounds_supported (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.is_bounds_supported", false]], "is_bounds_supported (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.is_bounds_supported", false]], "is_bounds_supported (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.is_bounds_supported", false]], "is_bounds_supported (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.is_bounds_supported", false]], "is_bounds_supported (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.is_bounds_supported", false]], "is_bounds_supported (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.is_bounds_supported", false]], "is_bounds_supported (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.is_bounds_supported", false]], "is_bounds_supported (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.is_bounds_supported", false]], "is_bounds_supported (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.is_bounds_supported", false]], "is_gradient_ignored (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.is_gradient_ignored", false]], "is_gradient_ignored (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.is_gradient_ignored", false]], "is_gradient_ignored (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.is_gradient_ignored", false]], "is_gradient_ignored (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.is_gradient_ignored", false]], "is_gradient_ignored (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.is_gradient_ignored", false]], "is_gradient_ignored (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.is_gradient_ignored", false]], "is_gradient_ignored (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.is_gradient_ignored", false]], "is_gradient_ignored (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.is_gradient_ignored", false]], "is_gradient_ignored (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.is_gradient_ignored", false]], "is_gradient_ignored (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.is_gradient_ignored", false]], "is_gradient_ignored (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.is_gradient_ignored", false]], "is_gradient_ignored (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.is_gradient_ignored", false]], "is_gradient_ignored (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.is_gradient_ignored", false]], "is_gradient_ignored (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.is_gradient_ignored", false]], "is_gradient_ignored (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.is_gradient_ignored", false]], "is_gradient_ignored (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.is_gradient_ignored", false]], "is_gradient_ignored (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.is_gradient_ignored", false]], "is_gradient_ignored (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.is_gradient_ignored", false]], "is_gradient_ignored (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.is_gradient_ignored", false]], "is_gradient_ignored (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.is_gradient_ignored", false]], "is_gradient_ignored (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.is_gradient_ignored", false]], "is_gradient_ignored (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.is_gradient_ignored", false]], "is_gradient_ignored (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.is_gradient_ignored", false]], "is_gradient_ignored (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.is_gradient_ignored", false]], "is_gradient_required (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.is_gradient_required", false]], "is_gradient_required (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.is_gradient_required", false]], "is_gradient_required (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.is_gradient_required", false]], "is_gradient_required (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.is_gradient_required", false]], "is_gradient_required (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.is_gradient_required", false]], "is_gradient_required (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.is_gradient_required", false]], "is_gradient_required (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.is_gradient_required", false]], "is_gradient_required (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.is_gradient_required", false]], "is_gradient_required (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.is_gradient_required", false]], "is_gradient_required (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.is_gradient_required", false]], "is_gradient_required (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.is_gradient_required", false]], "is_gradient_required (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.is_gradient_required", false]], "is_gradient_required (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.is_gradient_required", false]], "is_gradient_required (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.is_gradient_required", false]], "is_gradient_required (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.is_gradient_required", false]], "is_gradient_required (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.is_gradient_required", false]], "is_gradient_required (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.is_gradient_required", false]], "is_gradient_required (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.is_gradient_required", false]], "is_gradient_required (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.is_gradient_required", false]], "is_gradient_required (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.is_gradient_required", false]], "is_gradient_required (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.is_gradient_required", false]], "is_gradient_required (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.is_gradient_required", false]], "is_gradient_required (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.is_gradient_required", false]], "is_gradient_required (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.is_gradient_required", false]], "is_gradient_supported (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.is_gradient_supported", false]], "is_gradient_supported (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.is_gradient_supported", false]], "is_gradient_supported (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.is_gradient_supported", false]], "is_gradient_supported (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.is_gradient_supported", false]], "is_gradient_supported (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.is_gradient_supported", false]], "is_gradient_supported (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.is_gradient_supported", false]], "is_gradient_supported (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.is_gradient_supported", false]], "is_gradient_supported (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.is_gradient_supported", false]], "is_gradient_supported (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.is_gradient_supported", false]], "is_gradient_supported (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.is_gradient_supported", false]], "is_gradient_supported (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.is_gradient_supported", false]], "is_gradient_supported (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.is_gradient_supported", false]], "is_gradient_supported (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.is_gradient_supported", false]], "is_gradient_supported (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.is_gradient_supported", false]], "is_gradient_supported (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.is_gradient_supported", false]], "is_gradient_supported (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.is_gradient_supported", false]], "is_gradient_supported (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.is_gradient_supported", false]], "is_gradient_supported (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.is_gradient_supported", false]], "is_gradient_supported (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.is_gradient_supported", false]], "is_gradient_supported (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.is_gradient_supported", false]], "is_gradient_supported (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.is_gradient_supported", false]], "is_gradient_supported (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.is_gradient_supported", false]], "is_gradient_supported (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.is_gradient_supported", false]], "is_gradient_supported (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.is_gradient_supported", false]], "is_initial_point_ignored (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.is_initial_point_ignored", false]], "is_initial_point_ignored (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.is_initial_point_ignored", false]], "is_initial_point_ignored (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.is_initial_point_ignored", false]], "is_initial_point_ignored (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.is_initial_point_ignored", false]], "is_initial_point_ignored (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.is_initial_point_ignored", false]], "is_initial_point_ignored (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.is_initial_point_ignored", false]], "is_initial_point_ignored (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.is_initial_point_ignored", false]], "is_initial_point_ignored (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.is_initial_point_ignored", false]], "is_initial_point_ignored (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.is_initial_point_ignored", false]], "is_initial_point_ignored (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.is_initial_point_ignored", false]], "is_initial_point_ignored (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.is_initial_point_ignored", false]], "is_initial_point_ignored (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.is_initial_point_ignored", false]], "is_initial_point_ignored (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.is_initial_point_ignored", false]], "is_initial_point_ignored (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.is_initial_point_ignored", false]], "is_initial_point_ignored (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.is_initial_point_ignored", false]], "is_initial_point_ignored (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.is_initial_point_ignored", false]], "is_initial_point_ignored (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.is_initial_point_ignored", false]], "is_initial_point_ignored (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.is_initial_point_ignored", false]], "is_initial_point_ignored (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.is_initial_point_ignored", false]], "is_initial_point_ignored (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.is_initial_point_ignored", false]], "is_initial_point_ignored (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.is_initial_point_ignored", false]], "is_initial_point_ignored (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.is_initial_point_ignored", false]], "is_initial_point_ignored (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.is_initial_point_ignored", false]], "is_initial_point_ignored (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.is_initial_point_ignored", false]], "is_initial_point_required (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.is_initial_point_required", false]], "is_initial_point_required (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.is_initial_point_required", false]], "is_initial_point_required (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.is_initial_point_required", false]], "is_initial_point_required (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.is_initial_point_required", false]], "is_initial_point_required (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.is_initial_point_required", false]], "is_initial_point_required (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.is_initial_point_required", false]], "is_initial_point_required (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.is_initial_point_required", false]], "is_initial_point_required (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.is_initial_point_required", false]], "is_initial_point_required (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.is_initial_point_required", false]], "is_initial_point_required (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.is_initial_point_required", false]], "is_initial_point_required (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.is_initial_point_required", false]], "is_initial_point_required (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.is_initial_point_required", false]], "is_initial_point_required (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.is_initial_point_required", false]], "is_initial_point_required (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.is_initial_point_required", false]], "is_initial_point_required (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.is_initial_point_required", false]], "is_initial_point_required (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.is_initial_point_required", false]], "is_initial_point_required (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.is_initial_point_required", false]], "is_initial_point_required (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.is_initial_point_required", false]], "is_initial_point_required (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.is_initial_point_required", false]], "is_initial_point_required (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.is_initial_point_required", false]], "is_initial_point_required (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.is_initial_point_required", false]], "is_initial_point_required (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.is_initial_point_required", false]], "is_initial_point_required (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.is_initial_point_required", false]], "is_initial_point_required (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.is_initial_point_required", false]], "is_initial_point_supported (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.is_initial_point_supported", false]], "is_initial_point_supported (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.is_initial_point_supported", false]], "is_initial_point_supported (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.is_initial_point_supported", false]], "is_initial_point_supported (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.is_initial_point_supported", false]], "is_initial_point_supported (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.is_initial_point_supported", false]], "is_initial_point_supported (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.is_initial_point_supported", false]], "is_initial_point_supported (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.is_initial_point_supported", false]], "is_initial_point_supported (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.is_initial_point_supported", false]], "is_initial_point_supported (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.is_initial_point_supported", false]], "is_initial_point_supported (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.is_initial_point_supported", false]], "is_initial_point_supported (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.is_initial_point_supported", false]], "is_initial_point_supported (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.is_initial_point_supported", false]], "is_initial_point_supported (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.is_initial_point_supported", false]], "is_initial_point_supported (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.is_initial_point_supported", false]], "is_initial_point_supported (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.is_initial_point_supported", false]], "is_initial_point_supported (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.is_initial_point_supported", false]], "is_initial_point_supported (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.is_initial_point_supported", false]], "is_initial_point_supported (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.is_initial_point_supported", false]], "is_initial_point_supported (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.is_initial_point_supported", false]], "is_initial_point_supported (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.is_initial_point_supported", false]], "is_initial_point_supported (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.is_initial_point_supported", false]], "is_initial_point_supported (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.is_initial_point_supported", false]], "is_initial_point_supported (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.is_initial_point_supported", false]], "is_initial_point_supported (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.is_initial_point_supported", false]], "isres (class in qiskit_machine_learning.optimizers)": [[73, "qiskit_machine_learning.optimizers.ISRES", false]], "jac (gradientdescentstate attribute)": [[72, "qiskit_machine_learning.optimizers.GradientDescentState.jac", false]], "jac (optimizerresult attribute)": [[79, "qiskit_machine_learning.optimizers.OptimizerResult.jac", false]], "jac (optimizerstate attribute)": [[80, "qiskit_machine_learning.optimizers.OptimizerState.jac", false]], "kernelloss (class in qiskit_machine_learning.utils.loss_functions)": [[96, "qiskit_machine_learning.utils.loss_functions.KernelLoss", false]], "l1loss (class in qiskit_machine_learning.utils.loss_functions)": [[97, "qiskit_machine_learning.utils.loss_functions.L1Loss", false]], "l2loss (class in qiskit_machine_learning.utils.loss_functions)": [[98, "qiskit_machine_learning.utils.loss_functions.L2Loss", false]], "l_bfgs_b (class in qiskit_machine_learning.optimizers)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B", false]], "learning_rate (gradientdescentstate attribute)": [[72, "qiskit_machine_learning.optimizers.GradientDescentState.learning_rate", false]], "learningrate (class in qiskit_machine_learning.optimizers.optimizer_utils)": [[91, "qiskit_machine_learning.optimizers.optimizer_utils.LearningRate", false]], "limit (qbayesian attribute)": [[27, "qiskit_machine_learning.algorithms.QBayesian.limit", false]], "lincombestimatorgradient (class in qiskit_machine_learning.gradients)": [[41, "qiskit_machine_learning.gradients.LinCombEstimatorGradient", false]], "lincombsamplergradient (class in qiskit_machine_learning.gradients)": [[42, "qiskit_machine_learning.gradients.LinCombSamplerGradient", false]], "load() (neuralnetworkclassifier class method)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.load", false]], "load() (neuralnetworkregressor class method)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.load", false]], "load() (pegasosqsvc class method)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.load", false]], "load() (qsvc class method)": [[28, "qiskit_machine_learning.algorithms.QSVC.load", false]], "load() (qsvr class method)": [[29, "qiskit_machine_learning.algorithms.QSVR.load", false]], "load() (serializablemodelmixin class method)": [[30, "qiskit_machine_learning.algorithms.SerializableModelMixin.load", false]], "load() (trainablemodel class method)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.load", false]], "load() (vqc class method)": [[32, "qiskit_machine_learning.algorithms.VQC.load", false]], "load() (vqr class method)": [[33, "qiskit_machine_learning.algorithms.VQR.load", false]], "load_params() (adam method)": [[61, "qiskit_machine_learning.optimizers.ADAM.load_params", false]], "localeffectivedimension (class in qiskit_machine_learning.neural_networks)": [[58, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension", false]], "loss (class in qiskit_machine_learning.utils.loss_functions)": [[99, "qiskit_machine_learning.utils.loss_functions.Loss", false]], "loss (neuralnetworkclassifier attribute)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.loss", false]], "loss (neuralnetworkregressor attribute)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.loss", false]], "loss (quantumkerneltrainer attribute)": [[54, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.loss", false]], "loss (trainablemodel attribute)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.loss", false]], "loss (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.loss", false]], "loss (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.loss", false]], "ls_optimize() (gsls method)": [[70, "qiskit_machine_learning.optimizers.GSLS.ls_optimize", false]], "maxiter (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.maxiter", false]], "metadata (estimatorgradientresult attribute)": [[40, "qiskit_machine_learning.gradients.EstimatorGradientResult.metadata", false]], "metadata (samplergradientresult attribute)": [[47, "qiskit_machine_learning.gradients.SamplerGradientResult.metadata", false]], "metadata (statefidelityresult attribute)": [[94, "qiskit_machine_learning.state_fidelities.StateFidelityResult.metadata", false]], "minimize() (adam method)": [[61, "qiskit_machine_learning.optimizers.ADAM.minimize", false]], "minimize() (aqgd method)": [[62, "qiskit_machine_learning.optimizers.AQGD.minimize", false]], "minimize() (cg method)": [[64, "qiskit_machine_learning.optimizers.CG.minimize", false]], "minimize() (cobyla method)": [[65, "qiskit_machine_learning.optimizers.COBYLA.minimize", false]], "minimize() (crs method)": [[66, "qiskit_machine_learning.optimizers.CRS.minimize", false]], "minimize() (direct_l method)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.minimize", false]], "minimize() (direct_l_rand method)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.minimize", false]], "minimize() (esch method)": [[69, "qiskit_machine_learning.optimizers.ESCH.minimize", false]], "minimize() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.minimize", false]], "minimize() (gsls method)": [[70, "qiskit_machine_learning.optimizers.GSLS.minimize", false]], "minimize() (isres method)": [[73, "qiskit_machine_learning.optimizers.ISRES.minimize", false]], "minimize() (l_bfgs_b method)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.minimize", false]], "minimize() (nelder_mead method)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.minimize", false]], "minimize() (nft method)": [[77, "qiskit_machine_learning.optimizers.NFT.minimize", false]], "minimize() (optimizer method)": [[78, "qiskit_machine_learning.optimizers.Optimizer.minimize", false]], "minimize() (p_bfgs method)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.minimize", false]], "minimize() (powell method)": [[81, "qiskit_machine_learning.optimizers.POWELL.minimize", false]], "minimize() (qnspsa method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.minimize", false]], "minimize() (scipyoptimizer method)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.minimize", false]], "minimize() (slsqp method)": [[84, "qiskit_machine_learning.optimizers.SLSQP.minimize", false]], "minimize() (spsa method)": [[85, "qiskit_machine_learning.optimizers.SPSA.minimize", false]], "minimize() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.minimize", false]], "minimize() (tnc method)": [[88, "qiskit_machine_learning.optimizers.TNC.minimize", false]], "minimize() (umda method)": [[90, "qiskit_machine_learning.optimizers.UMDA.minimize", false]], "minimizer (class in qiskit_machine_learning.optimizers)": [[75, "qiskit_machine_learning.optimizers.Minimizer", false]], "module": [[0, "module-qiskit_machine_learning", false], [1, "module-qiskit_machine_learning.algorithms", false], [2, "module-qiskit_machine_learning.circuit.library", false], [3, "module-qiskit_machine_learning.connectors", false], [4, "module-qiskit_machine_learning.datasets", false], [5, "module-qiskit_machine_learning.gradients", false], [6, "module-qiskit_machine_learning.kernels", false], [7, "module-qiskit_machine_learning.kernels.algorithms", false], [8, "module-qiskit_machine_learning.neural_networks", false], [9, "module-qiskit_machine_learning.optimizers", false], [10, "module-qiskit_machine_learning.state_fidelities", false], [11, "module-qiskit_machine_learning.utils", false], [12, "module-qiskit_machine_learning.utils.loss_functions", false], [91, "module-qiskit_machine_learning.optimizers.optimizer_utils", false]], "multiclassobjectivefunction (class in qiskit_machine_learning.algorithms)": [[21, "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction", false]], "n_support_ (qsvc attribute)": [[28, "qiskit_machine_learning.algorithms.QSVC.n_support_", false]], "n_support_ (qsvr attribute)": [[29, "qiskit_machine_learning.algorithms.QSVR.n_support_", false]], "name (qnncircuit attribute)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit.name", false]], "name (rawfeaturevector attribute)": [[35, "qiskit_machine_learning.circuit.library.RawFeatureVector.name", false]], "nelder_mead (class in qiskit_machine_learning.optimizers)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD", false]], "neural_network (neuralnetworkclassifier attribute)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.neural_network", false]], "neural_network (neuralnetworkregressor attribute)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.neural_network", false]], "neural_network (torchconnector attribute)": [[36, "qiskit_machine_learning.connectors.TorchConnector.neural_network", false]], "neural_network (trainablemodel attribute)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.neural_network", false]], "neural_network (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.neural_network", false]], "neural_network (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.neural_network", false]], "neuralnetwork (class in qiskit_machine_learning.neural_networks)": [[59, "qiskit_machine_learning.neural_networks.NeuralNetwork", false]], "neuralnetworkclassifier (class in qiskit_machine_learning.algorithms)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier", false]], "neuralnetworkregressor (class in qiskit_machine_learning.algorithms)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor", false]], "nfev (gradientdescentstate attribute)": [[72, "qiskit_machine_learning.optimizers.GradientDescentState.nfev", false]], "nfev (optimizerresult attribute)": [[79, "qiskit_machine_learning.optimizers.OptimizerResult.nfev", false]], "nfev (optimizerstate attribute)": [[80, "qiskit_machine_learning.optimizers.OptimizerState.nfev", false]], "nft (class in qiskit_machine_learning.optimizers)": [[77, "qiskit_machine_learning.optimizers.NFT", false]], "nit (gradientdescentstate attribute)": [[72, "qiskit_machine_learning.optimizers.GradientDescentState.nit", false]], "nit (optimizerresult attribute)": [[79, "qiskit_machine_learning.optimizers.OptimizerResult.nit", false]], "nit (optimizerstate attribute)": [[80, "qiskit_machine_learning.optimizers.OptimizerState.nit", false]], "njev (gradientdescentstate attribute)": [[72, "qiskit_machine_learning.optimizers.GradientDescentState.njev", false]], "njev (optimizerresult attribute)": [[79, "qiskit_machine_learning.optimizers.OptimizerResult.njev", false]], "njev (optimizerstate attribute)": [[80, "qiskit_machine_learning.optimizers.OptimizerState.njev", false]], "num_classes (neuralnetworkclassifier attribute)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.num_classes", false]], "num_classes (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.num_classes", false]], "num_features (basekernel attribute)": [[48, "qiskit_machine_learning.kernels.BaseKernel.num_features", false]], "num_features (fidelityquantumkernel attribute)": [[49, "qiskit_machine_learning.kernels.FidelityQuantumKernel.num_features", false]], "num_features (fidelitystatevectorkernel attribute)": [[50, "qiskit_machine_learning.kernels.FidelityStatevectorKernel.num_features", false]], "num_features (trainablefidelityquantumkernel attribute)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.num_features", false]], "num_features (trainablefidelitystatevectorkernel attribute)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.num_features", false]], "num_features (trainablekernel attribute)": [[53, "qiskit_machine_learning.kernels.TrainableKernel.num_features", false]], "num_input_parameters (qnncircuit attribute)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit.num_input_parameters", false]], "num_inputs (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.num_inputs", false]], "num_inputs (neuralnetwork attribute)": [[59, "qiskit_machine_learning.neural_networks.NeuralNetwork.num_inputs", false]], "num_inputs (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.num_inputs", false]], "num_qubits (qnncircuit attribute)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit.num_qubits", false]], "num_qubits (rawfeaturevector attribute)": [[35, "qiskit_machine_learning.circuit.library.RawFeatureVector.num_qubits", false]], "num_qubits (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.num_qubits", false]], "num_qubits (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.num_qubits", false]], "num_steps (pegasosqsvc attribute)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.num_steps", false]], "num_training_parameters (trainablefidelityquantumkernel attribute)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.num_training_parameters", false]], "num_training_parameters (trainablefidelitystatevectorkernel attribute)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.num_training_parameters", false]], "num_training_parameters (trainablekernel attribute)": [[53, "qiskit_machine_learning.kernels.TrainableKernel.num_training_parameters", false]], "num_weight_parameters (qnncircuit attribute)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit.num_weight_parameters", false]], "num_weights (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.num_weights", false]], "num_weights (neuralnetwork attribute)": [[59, "qiskit_machine_learning.neural_networks.NeuralNetwork.num_weights", false]], "num_weights (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.num_weights", false]], "objective() (binaryobjectivefunction method)": [[20, "qiskit_machine_learning.algorithms.BinaryObjectiveFunction.objective", false]], "objective() (multiclassobjectivefunction method)": [[21, "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction.objective", false]], "objective() (objectivefunction method)": [[24, "qiskit_machine_learning.algorithms.ObjectiveFunction.objective", false]], "objective() (onehotobjectivefunction method)": [[25, "qiskit_machine_learning.algorithms.OneHotObjectiveFunction.objective", false]], "objectivefunction (class in qiskit_machine_learning.algorithms)": [[24, "qiskit_machine_learning.algorithms.ObjectiveFunction", false]], "observables (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.observables", false]], "onehotobjectivefunction (class in qiskit_machine_learning.algorithms)": [[25, "qiskit_machine_learning.algorithms.OneHotObjectiveFunction", false]], "optimal_circuit (quantumkerneltrainerresult attribute)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_circuit", false]], "optimal_parameters (quantumkerneltrainerresult attribute)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_parameters", false]], "optimal_point (quantumkerneltrainerresult attribute)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_point", false]], "optimal_value (quantumkerneltrainerresult attribute)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimal_value", false]], "optimizer (class in qiskit_machine_learning.optimizers)": [[78, "qiskit_machine_learning.optimizers.Optimizer", false]], "optimizer (neuralnetworkclassifier attribute)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.optimizer", false]], "optimizer (neuralnetworkregressor attribute)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.optimizer", false]], "optimizer (quantumkerneltrainer attribute)": [[54, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.optimizer", false]], "optimizer (trainablemodel attribute)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.optimizer", false]], "optimizer (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.optimizer", false]], "optimizer (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.optimizer", false]], "optimizer_evals (quantumkerneltrainerresult attribute)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimizer_evals", false]], "optimizer_result (quantumkerneltrainerresult attribute)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimizer_result", false]], "optimizer_time (quantumkerneltrainerresult attribute)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.optimizer_time", false]], "optimizerresult (class in qiskit_machine_learning.optimizers)": [[79, "qiskit_machine_learning.optimizers.OptimizerResult", false]], "optimizerstate (class in qiskit_machine_learning.optimizers)": [[80, "qiskit_machine_learning.optimizers.OptimizerState", false]], "options (baseestimatorgradient attribute)": [[38, "qiskit_machine_learning.gradients.BaseEstimatorGradient.options", false]], "options (basesamplergradient attribute)": [[39, "qiskit_machine_learning.gradients.BaseSamplerGradient.options", false]], "options (computeuncompute attribute)": [[93, "qiskit_machine_learning.state_fidelities.ComputeUncompute.options", false]], "options (estimatorgradientresult attribute)": [[40, "qiskit_machine_learning.gradients.EstimatorGradientResult.options", false]], "options (lincombestimatorgradient attribute)": [[41, "qiskit_machine_learning.gradients.LinCombEstimatorGradient.options", false]], "options (lincombsamplergradient attribute)": [[42, "qiskit_machine_learning.gradients.LinCombSamplerGradient.options", false]], "options (paramshiftestimatorgradient attribute)": [[43, "qiskit_machine_learning.gradients.ParamShiftEstimatorGradient.options", false]], "options (paramshiftsamplergradient attribute)": [[44, "qiskit_machine_learning.gradients.ParamShiftSamplerGradient.options", false]], "options (samplergradientresult attribute)": [[47, "qiskit_machine_learning.gradients.SamplerGradientResult.options", false]], "options (spsaestimatorgradient attribute)": [[45, "qiskit_machine_learning.gradients.SPSAEstimatorGradient.options", false]], "options (spsasamplergradient attribute)": [[46, "qiskit_machine_learning.gradients.SPSASamplerGradient.options", false]], "options (statefidelityresult attribute)": [[94, "qiskit_machine_learning.state_fidelities.StateFidelityResult.options", false]], "output_shape (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.output_shape", false]], "output_shape (neuralnetwork attribute)": [[59, "qiskit_machine_learning.neural_networks.NeuralNetwork.output_shape", false]], "output_shape (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.output_shape", false]], "p_bfgs (class in qiskit_machine_learning.optimizers)": [[82, "qiskit_machine_learning.optimizers.P_BFGS", false]], "parameter_values (trainablefidelityquantumkernel attribute)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.parameter_values", false]], "parameter_values (trainablefidelitystatevectorkernel attribute)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.parameter_values", false]], "parameter_values (trainablekernel attribute)": [[53, "qiskit_machine_learning.kernels.TrainableKernel.parameter_values", false]], "paramshiftestimatorgradient (class in qiskit_machine_learning.gradients)": [[43, "qiskit_machine_learning.gradients.ParamShiftEstimatorGradient", false]], "paramshiftsamplergradient (class in qiskit_machine_learning.gradients)": [[44, "qiskit_machine_learning.gradients.ParamShiftSamplerGradient", false]], "pegasosqsvc (class in qiskit_machine_learning.algorithms)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC", false]], "perturbation (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.perturbation", false]], "powell (class in qiskit_machine_learning.optimizers)": [[81, "qiskit_machine_learning.optimizers.POWELL", false]], "precomputed (pegasosqsvc attribute)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.precomputed", false]], "predict() (neuralnetworkclassifier method)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.predict", false]], "predict() (neuralnetworkregressor method)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.predict", false]], "predict() (pegasosqsvc method)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.predict", false]], "predict() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.predict", false]], "predict() (qsvr method)": [[29, "qiskit_machine_learning.algorithms.QSVR.predict", false]], "predict() (trainablemodel method)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.predict", false]], "predict() (vqc method)": [[32, "qiskit_machine_learning.algorithms.VQC.predict", false]], "predict() (vqr method)": [[33, "qiskit_machine_learning.algorithms.VQR.predict", false]], "predict_log_proba() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.predict_log_proba", false]], "predict_proba() (neuralnetworkclassifier method)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.predict_proba", false]], "predict_proba() (pegasosqsvc method)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.predict_proba", false]], "predict_proba() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.predict_proba", false]], "predict_proba() (vqc method)": [[32, "qiskit_machine_learning.algorithms.VQC.predict_proba", false]], "print_options() (adam method)": [[61, "qiskit_machine_learning.optimizers.ADAM.print_options", false]], "print_options() (aqgd method)": [[62, "qiskit_machine_learning.optimizers.AQGD.print_options", false]], "print_options() (cg method)": [[64, "qiskit_machine_learning.optimizers.CG.print_options", false]], "print_options() (cobyla method)": [[65, "qiskit_machine_learning.optimizers.COBYLA.print_options", false]], "print_options() (crs method)": [[66, "qiskit_machine_learning.optimizers.CRS.print_options", false]], "print_options() (direct_l method)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.print_options", false]], "print_options() (direct_l_rand method)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.print_options", false]], "print_options() (esch method)": [[69, "qiskit_machine_learning.optimizers.ESCH.print_options", false]], "print_options() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.print_options", false]], "print_options() (gsls method)": [[70, "qiskit_machine_learning.optimizers.GSLS.print_options", false]], "print_options() (isres method)": [[73, "qiskit_machine_learning.optimizers.ISRES.print_options", false]], "print_options() (l_bfgs_b method)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.print_options", false]], "print_options() (nelder_mead method)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.print_options", false]], "print_options() (nft method)": [[77, "qiskit_machine_learning.optimizers.NFT.print_options", false]], "print_options() (optimizer method)": [[78, "qiskit_machine_learning.optimizers.Optimizer.print_options", false]], "print_options() (p_bfgs method)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.print_options", false]], "print_options() (powell method)": [[81, "qiskit_machine_learning.optimizers.POWELL.print_options", false]], "print_options() (qnspsa method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.print_options", false]], "print_options() (scipyoptimizer method)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.print_options", false]], "print_options() (slsqp method)": [[84, "qiskit_machine_learning.optimizers.SLSQP.print_options", false]], "print_options() (spsa method)": [[85, "qiskit_machine_learning.optimizers.SPSA.print_options", false]], "print_options() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.print_options", false]], "print_options() (tnc method)": [[88, "qiskit_machine_learning.optimizers.TNC.print_options", false]], "print_options() (umda method)": [[90, "qiskit_machine_learning.optimizers.UMDA.print_options", false]], "proba_ (qsvc attribute)": [[28, "qiskit_machine_learning.algorithms.QSVC.probA_", false]], "probb_ (qsvc attribute)": [[28, "qiskit_machine_learning.algorithms.QSVC.probB_", false]], "qbayesian (class in qiskit_machine_learning.algorithms)": [[27, "qiskit_machine_learning.algorithms.QBayesian", false]], "qiskit_machine_learning": [[0, "module-qiskit_machine_learning", false]], "qiskit_machine_learning.algorithms": [[1, "module-qiskit_machine_learning.algorithms", false]], "qiskit_machine_learning.circuit.library": [[2, "module-qiskit_machine_learning.circuit.library", false]], "qiskit_machine_learning.connectors": [[3, "module-qiskit_machine_learning.connectors", false]], "qiskit_machine_learning.datasets": [[4, "module-qiskit_machine_learning.datasets", false]], "qiskit_machine_learning.gradients": [[5, "module-qiskit_machine_learning.gradients", false]], "qiskit_machine_learning.kernels": [[6, "module-qiskit_machine_learning.kernels", false]], "qiskit_machine_learning.kernels.algorithms": [[7, "module-qiskit_machine_learning.kernels.algorithms", false]], "qiskit_machine_learning.neural_networks": [[8, "module-qiskit_machine_learning.neural_networks", false]], "qiskit_machine_learning.optimizers": [[9, "module-qiskit_machine_learning.optimizers", false]], "qiskit_machine_learning.optimizers.optimizer_utils": [[91, "module-qiskit_machine_learning.optimizers.optimizer_utils", false]], "qiskit_machine_learning.state_fidelities": [[10, "module-qiskit_machine_learning.state_fidelities", false]], "qiskit_machine_learning.utils": [[11, "module-qiskit_machine_learning.utils", false]], "qiskit_machine_learning.utils.loss_functions": [[12, "module-qiskit_machine_learning.utils.loss_functions", false]], "qiskitmachinelearningerror": [[19, "qiskit_machine_learning.QiskitMachineLearningError", false]], "qnncircuit (class in qiskit_machine_learning.circuit.library)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit", false]], "qnspsa (class in qiskit_machine_learning.optimizers)": [[83, "qiskit_machine_learning.optimizers.QNSPSA", false]], "qsvc (class in qiskit_machine_learning.algorithms)": [[28, "qiskit_machine_learning.algorithms.QSVC", false]], "qsvr (class in qiskit_machine_learning.algorithms)": [[29, "qiskit_machine_learning.algorithms.QSVR", false]], "quantum_kernel (pegasosqsvc attribute)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.quantum_kernel", false]], "quantum_kernel (qsvc attribute)": [[28, "qiskit_machine_learning.algorithms.QSVC.quantum_kernel", false]], "quantum_kernel (qsvr attribute)": [[29, "qiskit_machine_learning.algorithms.QSVR.quantum_kernel", false]], "quantum_kernel (quantumkerneltrainer attribute)": [[54, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer.quantum_kernel", false]], "quantum_kernel (quantumkerneltrainerresult attribute)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult.quantum_kernel", false]], "quantumkerneltrainer (class in qiskit_machine_learning.kernels.algorithms)": [[54, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer", false]], "quantumkerneltrainerresult (class in qiskit_machine_learning.kernels.algorithms)": [[55, "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult", false]], "raw_fidelities (statefidelityresult attribute)": [[94, "qiskit_machine_learning.state_fidelities.StateFidelityResult.raw_fidelities", false]], "rawfeaturevector (class in qiskit_machine_learning.circuit.library)": [[35, "qiskit_machine_learning.circuit.library.RawFeatureVector", false]], "rejection_sampling() (qbayesian method)": [[27, "qiskit_machine_learning.algorithms.QBayesian.rejection_sampling", false]], "run() (baseestimatorgradient method)": [[38, "qiskit_machine_learning.gradients.BaseEstimatorGradient.run", false]], "run() (basesamplergradient method)": [[39, "qiskit_machine_learning.gradients.BaseSamplerGradient.run", false]], "run() (basestatefidelity method)": [[92, "qiskit_machine_learning.state_fidelities.BaseStateFidelity.run", false]], "run() (computeuncompute method)": [[93, "qiskit_machine_learning.state_fidelities.ComputeUncompute.run", false]], "run() (lincombestimatorgradient method)": [[41, "qiskit_machine_learning.gradients.LinCombEstimatorGradient.run", false]], "run() (lincombsamplergradient method)": [[42, "qiskit_machine_learning.gradients.LinCombSamplerGradient.run", false]], "run() (paramshiftestimatorgradient method)": [[43, "qiskit_machine_learning.gradients.ParamShiftEstimatorGradient.run", false]], "run() (paramshiftsamplergradient method)": [[44, "qiskit_machine_learning.gradients.ParamShiftSamplerGradient.run", false]], "run() (spsaestimatorgradient method)": [[45, "qiskit_machine_learning.gradients.SPSAEstimatorGradient.run", false]], "run() (spsasamplergradient method)": [[46, "qiskit_machine_learning.gradients.SPSASamplerGradient.run", false]], "run_monte_carlo() (effectivedimension method)": [[56, "qiskit_machine_learning.neural_networks.EffectiveDimension.run_monte_carlo", false]], "run_monte_carlo() (localeffectivedimension method)": [[58, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.run_monte_carlo", false]], "sample_points() (gsls method)": [[70, "qiskit_machine_learning.optimizers.GSLS.sample_points", false]], "sample_set() (gsls method)": [[70, "qiskit_machine_learning.optimizers.GSLS.sample_set", false]], "sampler (qbayesian attribute)": [[27, "qiskit_machine_learning.algorithms.QBayesian.sampler", false]], "sampler (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.sampler", false]], "samplergradientresult (class in qiskit_machine_learning.gradients)": [[47, "qiskit_machine_learning.gradients.SamplerGradientResult", false]], "samplerqnn (class in qiskit_machine_learning.neural_networks)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN", false]], "samples (qbayesian attribute)": [[27, "qiskit_machine_learning.algorithms.QBayesian.samples", false]], "save() (neuralnetworkclassifier method)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.save", false]], "save() (neuralnetworkregressor method)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.save", false]], "save() (pegasosqsvc method)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.save", false]], "save() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.save", false]], "save() (qsvr method)": [[29, "qiskit_machine_learning.algorithms.QSVR.save", false]], "save() (serializablemodelmixin method)": [[30, "qiskit_machine_learning.algorithms.SerializableModelMixin.save", false]], "save() (trainablemodel method)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.save", false]], "save() (vqc method)": [[32, "qiskit_machine_learning.algorithms.VQC.save", false]], "save() (vqr method)": [[33, "qiskit_machine_learning.algorithms.VQR.save", false]], "save_params() (adam method)": [[61, "qiskit_machine_learning.optimizers.ADAM.save_params", false]], "scipyoptimizer (class in qiskit_machine_learning.optimizers)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer", false]], "score() (neuralnetworkclassifier method)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.score", false]], "score() (neuralnetworkregressor method)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.score", false]], "score() (pegasosqsvc method)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.score", false]], "score() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.score", false]], "score() (qsvr method)": [[29, "qiskit_machine_learning.algorithms.QSVR.score", false]], "score() (trainablemodel method)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.score", false]], "score() (vqc method)": [[32, "qiskit_machine_learning.algorithms.VQC.score", false]], "score() (vqr method)": [[33, "qiskit_machine_learning.algorithms.VQR.score", false]], "send() (learningrate method)": [[91, "qiskit_machine_learning.optimizers.optimizer_utils.LearningRate.send", false]], "serializablemodelmixin (class in qiskit_machine_learning.algorithms)": [[30, "qiskit_machine_learning.algorithms.SerializableModelMixin", false]], "set_fit_request() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.set_fit_request", false]], "set_fit_request() (qsvr method)": [[29, "qiskit_machine_learning.algorithms.QSVR.set_fit_request", false]], "set_interpret() (samplerqnn method)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.set_interpret", false]], "set_max_evals_grouped() (adam method)": [[61, "qiskit_machine_learning.optimizers.ADAM.set_max_evals_grouped", false]], "set_max_evals_grouped() (aqgd method)": [[62, "qiskit_machine_learning.optimizers.AQGD.set_max_evals_grouped", false]], "set_max_evals_grouped() (cg method)": [[64, "qiskit_machine_learning.optimizers.CG.set_max_evals_grouped", false]], "set_max_evals_grouped() (cobyla method)": [[65, "qiskit_machine_learning.optimizers.COBYLA.set_max_evals_grouped", false]], "set_max_evals_grouped() (crs method)": [[66, "qiskit_machine_learning.optimizers.CRS.set_max_evals_grouped", false]], "set_max_evals_grouped() (direct_l method)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.set_max_evals_grouped", false]], "set_max_evals_grouped() (direct_l_rand method)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.set_max_evals_grouped", false]], "set_max_evals_grouped() (esch method)": [[69, "qiskit_machine_learning.optimizers.ESCH.set_max_evals_grouped", false]], "set_max_evals_grouped() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.set_max_evals_grouped", false]], "set_max_evals_grouped() (gsls method)": [[70, "qiskit_machine_learning.optimizers.GSLS.set_max_evals_grouped", false]], "set_max_evals_grouped() (isres method)": [[73, "qiskit_machine_learning.optimizers.ISRES.set_max_evals_grouped", false]], "set_max_evals_grouped() (l_bfgs_b method)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.set_max_evals_grouped", false]], "set_max_evals_grouped() (nelder_mead method)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.set_max_evals_grouped", false]], "set_max_evals_grouped() (nft method)": [[77, "qiskit_machine_learning.optimizers.NFT.set_max_evals_grouped", false]], "set_max_evals_grouped() (optimizer method)": [[78, "qiskit_machine_learning.optimizers.Optimizer.set_max_evals_grouped", false]], "set_max_evals_grouped() (p_bfgs method)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.set_max_evals_grouped", false]], "set_max_evals_grouped() (powell method)": [[81, "qiskit_machine_learning.optimizers.POWELL.set_max_evals_grouped", false]], "set_max_evals_grouped() (qnspsa method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.set_max_evals_grouped", false]], "set_max_evals_grouped() (scipyoptimizer method)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.set_max_evals_grouped", false]], "set_max_evals_grouped() (slsqp method)": [[84, "qiskit_machine_learning.optimizers.SLSQP.set_max_evals_grouped", false]], "set_max_evals_grouped() (spsa method)": [[85, "qiskit_machine_learning.optimizers.SPSA.set_max_evals_grouped", false]], "set_max_evals_grouped() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.set_max_evals_grouped", false]], "set_max_evals_grouped() (tnc method)": [[88, "qiskit_machine_learning.optimizers.TNC.set_max_evals_grouped", false]], "set_max_evals_grouped() (umda method)": [[90, "qiskit_machine_learning.optimizers.UMDA.set_max_evals_grouped", false]], "set_options() (adam method)": [[61, "qiskit_machine_learning.optimizers.ADAM.set_options", false]], "set_options() (aqgd method)": [[62, "qiskit_machine_learning.optimizers.AQGD.set_options", false]], "set_options() (cg method)": [[64, "qiskit_machine_learning.optimizers.CG.set_options", false]], "set_options() (cobyla method)": [[65, "qiskit_machine_learning.optimizers.COBYLA.set_options", false]], "set_options() (crs method)": [[66, "qiskit_machine_learning.optimizers.CRS.set_options", false]], "set_options() (direct_l method)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.set_options", false]], "set_options() (direct_l_rand method)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.set_options", false]], "set_options() (esch method)": [[69, "qiskit_machine_learning.optimizers.ESCH.set_options", false]], "set_options() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.set_options", false]], "set_options() (gsls method)": [[70, "qiskit_machine_learning.optimizers.GSLS.set_options", false]], "set_options() (isres method)": [[73, "qiskit_machine_learning.optimizers.ISRES.set_options", false]], "set_options() (l_bfgs_b method)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.set_options", false]], "set_options() (nelder_mead method)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.set_options", false]], "set_options() (nft method)": [[77, "qiskit_machine_learning.optimizers.NFT.set_options", false]], "set_options() (optimizer method)": [[78, "qiskit_machine_learning.optimizers.Optimizer.set_options", false]], "set_options() (p_bfgs method)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.set_options", false]], "set_options() (powell method)": [[81, "qiskit_machine_learning.optimizers.POWELL.set_options", false]], "set_options() (qnspsa method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.set_options", false]], "set_options() (scipyoptimizer method)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.set_options", false]], "set_options() (slsqp method)": [[84, "qiskit_machine_learning.optimizers.SLSQP.set_options", false]], "set_options() (spsa method)": [[85, "qiskit_machine_learning.optimizers.SPSA.set_options", false]], "set_options() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.set_options", false]], "set_options() (tnc method)": [[88, "qiskit_machine_learning.optimizers.TNC.set_options", false]], "set_options() (umda method)": [[90, "qiskit_machine_learning.optimizers.UMDA.set_options", false]], "set_params() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.set_params", false]], "set_params() (qsvr method)": [[29, "qiskit_machine_learning.algorithms.QSVR.set_params", false]], "set_score_request() (qsvc method)": [[28, "qiskit_machine_learning.algorithms.QSVC.set_score_request", false]], "set_score_request() (qsvr method)": [[29, "qiskit_machine_learning.algorithms.QSVR.set_score_request", false]], "setting (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.setting", false]], "setting (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.setting", false]], "setting (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.setting", false]], "setting (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.setting", false]], "setting (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.setting", false]], "setting (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.setting", false]], "setting (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.setting", false]], "setting (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.setting", false]], "setting (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.setting", false]], "setting (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.setting", false]], "setting (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.setting", false]], "setting (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.setting", false]], "setting (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.setting", false]], "setting (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.setting", false]], "setting (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.setting", false]], "setting (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.setting", false]], "setting (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.setting", false]], "setting (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.setting", false]], "setting (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.setting", false]], "setting (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.setting", false]], "setting (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.setting", false]], "setting (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.setting", false]], "setting (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.setting", false]], "setting (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.setting", false]], "settings (adam attribute)": [[61, "qiskit_machine_learning.optimizers.ADAM.settings", false]], "settings (aqgd attribute)": [[62, "qiskit_machine_learning.optimizers.AQGD.settings", false]], "settings (cg attribute)": [[64, "qiskit_machine_learning.optimizers.CG.settings", false]], "settings (cobyla attribute)": [[65, "qiskit_machine_learning.optimizers.COBYLA.settings", false]], "settings (crs attribute)": [[66, "qiskit_machine_learning.optimizers.CRS.settings", false]], "settings (direct_l attribute)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.settings", false]], "settings (direct_l_rand attribute)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.settings", false]], "settings (esch attribute)": [[69, "qiskit_machine_learning.optimizers.ESCH.settings", false]], "settings (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.settings", false]], "settings (gsls attribute)": [[70, "qiskit_machine_learning.optimizers.GSLS.settings", false]], "settings (isres attribute)": [[73, "qiskit_machine_learning.optimizers.ISRES.settings", false]], "settings (l_bfgs_b attribute)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.settings", false]], "settings (nelder_mead attribute)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.settings", false]], "settings (nft attribute)": [[77, "qiskit_machine_learning.optimizers.NFT.settings", false]], "settings (optimizer attribute)": [[78, "qiskit_machine_learning.optimizers.Optimizer.settings", false]], "settings (p_bfgs attribute)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.settings", false]], "settings (powell attribute)": [[81, "qiskit_machine_learning.optimizers.POWELL.settings", false]], "settings (qnspsa attribute)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.settings", false]], "settings (scipyoptimizer attribute)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.settings", false]], "settings (slsqp attribute)": [[84, "qiskit_machine_learning.optimizers.SLSQP.settings", false]], "settings (spsa attribute)": [[85, "qiskit_machine_learning.optimizers.SPSA.settings", false]], "settings (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.settings", false]], "settings (tnc attribute)": [[88, "qiskit_machine_learning.optimizers.TNC.settings", false]], "settings (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.settings", false]], "size_gen (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.size_gen", false]], "slsqp (class in qiskit_machine_learning.optimizers)": [[84, "qiskit_machine_learning.optimizers.SLSQP", false]], "sparse (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.sparse", false]], "sparse (neuralnetwork attribute)": [[59, "qiskit_machine_learning.neural_networks.NeuralNetwork.sparse", false]], "sparse (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.sparse", false]], "sparse (torchconnector attribute)": [[36, "qiskit_machine_learning.connectors.TorchConnector.sparse", false]], "spsa (class in qiskit_machine_learning.optimizers)": [[85, "qiskit_machine_learning.optimizers.SPSA", false]], "spsaestimatorgradient (class in qiskit_machine_learning.gradients)": [[45, "qiskit_machine_learning.gradients.SPSAEstimatorGradient", false]], "spsasamplergradient (class in qiskit_machine_learning.gradients)": [[46, "qiskit_machine_learning.gradients.SPSASamplerGradient", false]], "start() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.start", false]], "start() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.start", false]], "state (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.state", false]], "state (steppableoptimizer attribute)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.state", false]], "statefidelityresult (class in qiskit_machine_learning.state_fidelities)": [[94, "qiskit_machine_learning.state_fidelities.StateFidelityResult", false]], "std_bound (umda attribute)": [[90, "qiskit_machine_learning.optimizers.UMDA.STD_BOUND", false]], "step() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.step", false]], "step() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.step", false]], "steppableoptimizer (class in qiskit_machine_learning.optimizers)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer", false]], "stepsize (gradientdescentstate attribute)": [[72, "qiskit_machine_learning.optimizers.GradientDescentState.stepsize", false]], "supported_gates (lincombestimatorgradient attribute)": [[41, "qiskit_machine_learning.gradients.LinCombEstimatorGradient.SUPPORTED_GATES", false]], "supported_gates (lincombsamplergradient attribute)": [[42, "qiskit_machine_learning.gradients.LinCombSamplerGradient.SUPPORTED_GATES", false]], "supported_gates (paramshiftestimatorgradient attribute)": [[43, "qiskit_machine_learning.gradients.ParamShiftEstimatorGradient.SUPPORTED_GATES", false]], "supported_gates (paramshiftsamplergradient attribute)": [[44, "qiskit_machine_learning.gradients.ParamShiftSamplerGradient.SUPPORTED_GATES", false]], "svcloss (class in qiskit_machine_learning.utils.loss_functions)": [[100, "qiskit_machine_learning.utils.loss_functions.SVCLoss", false]], "tell() (gradientdescent method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.tell", false]], "tell() (steppableoptimizer method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.tell", false]], "telldata (class in qiskit_machine_learning.optimizers)": [[89, "qiskit_machine_learning.optimizers.TellData", false]], "threshold (qbayesian attribute)": [[27, "qiskit_machine_learning.algorithms.QBayesian.threshold", false]], "throw() (learningrate method)": [[91, "qiskit_machine_learning.optimizers.optimizer_utils.LearningRate.throw", false]], "tnc (class in qiskit_machine_learning.optimizers)": [[88, "qiskit_machine_learning.optimizers.TNC", false]], "tol (gradientdescent attribute)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.tol", false]], "torchconnector (class in qiskit_machine_learning.connectors)": [[36, "qiskit_machine_learning.connectors.TorchConnector", false]], "trainablefidelityquantumkernel (class in qiskit_machine_learning.kernels)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel", false]], "trainablefidelitystatevectorkernel (class in qiskit_machine_learning.kernels)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel", false]], "trainablekernel (class in qiskit_machine_learning.kernels)": [[53, "qiskit_machine_learning.kernels.TrainableKernel", false]], "trainablemodel (class in qiskit_machine_learning.algorithms)": [[31, "qiskit_machine_learning.algorithms.TrainableModel", false]], "training_parameters (trainablefidelityquantumkernel attribute)": [[51, "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.training_parameters", false]], "training_parameters (trainablefidelitystatevectorkernel attribute)": [[52, "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel.training_parameters", false]], "training_parameters (trainablekernel attribute)": [[53, "qiskit_machine_learning.kernels.TrainableKernel.training_parameters", false]], "umda (class in qiskit_machine_learning.optimizers)": [[90, "qiskit_machine_learning.optimizers.UMDA", false]], "unfitted (pegasosqsvc attribute)": [[26, "qiskit_machine_learning.algorithms.PegasosQSVC.UNFITTED", false]], "unused_param (qsvc attribute)": [[28, "qiskit_machine_learning.algorithms.QSVC.unused_param", false]], "unused_param (qsvr attribute)": [[29, "qiskit_machine_learning.algorithms.QSVR.unused_param", false]], "update_default_options() (baseestimatorgradient method)": [[38, "qiskit_machine_learning.gradients.BaseEstimatorGradient.update_default_options", false]], "update_default_options() (basesamplergradient method)": [[39, "qiskit_machine_learning.gradients.BaseSamplerGradient.update_default_options", false]], "update_default_options() (computeuncompute method)": [[93, "qiskit_machine_learning.state_fidelities.ComputeUncompute.update_default_options", false]], "update_default_options() (lincombestimatorgradient method)": [[41, "qiskit_machine_learning.gradients.LinCombEstimatorGradient.update_default_options", false]], "update_default_options() (lincombsamplergradient method)": [[42, "qiskit_machine_learning.gradients.LinCombSamplerGradient.update_default_options", false]], "update_default_options() (paramshiftestimatorgradient method)": [[43, "qiskit_machine_learning.gradients.ParamShiftEstimatorGradient.update_default_options", false]], "update_default_options() (paramshiftsamplergradient method)": [[44, "qiskit_machine_learning.gradients.ParamShiftSamplerGradient.update_default_options", false]], "update_default_options() (spsaestimatorgradient method)": [[45, "qiskit_machine_learning.gradients.SPSAEstimatorGradient.update_default_options", false]], "update_default_options() (spsasamplergradient method)": [[46, "qiskit_machine_learning.gradients.SPSASamplerGradient.update_default_options", false]], "vqc (class in qiskit_machine_learning.algorithms)": [[32, "qiskit_machine_learning.algorithms.VQC", false]], "vqr (class in qiskit_machine_learning.algorithms)": [[33, "qiskit_machine_learning.algorithms.VQR", false]], "warm_start (neuralnetworkclassifier attribute)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.warm_start", false]], "warm_start (neuralnetworkregressor attribute)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.warm_start", false]], "warm_start (trainablemodel attribute)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.warm_start", false]], "warm_start (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.warm_start", false]], "warm_start (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.warm_start", false]], "weight (torchconnector attribute)": [[36, "qiskit_machine_learning.connectors.TorchConnector.weight", false]], "weight_parameters (qnncircuit attribute)": [[34, "qiskit_machine_learning.circuit.library.QNNCircuit.weight_parameters", false]], "weight_params (estimatorqnn attribute)": [[57, "qiskit_machine_learning.neural_networks.EstimatorQNN.weight_params", false]], "weight_params (samplerqnn attribute)": [[60, "qiskit_machine_learning.neural_networks.SamplerQNN.weight_params", false]], "weight_samples (effectivedimension attribute)": [[56, "qiskit_machine_learning.neural_networks.EffectiveDimension.weight_samples", false]], "weight_samples (localeffectivedimension attribute)": [[58, "qiskit_machine_learning.neural_networks.LocalEffectiveDimension.weight_samples", false]], "weights (neuralnetworkclassifier attribute)": [[22, "qiskit_machine_learning.algorithms.NeuralNetworkClassifier.weights", false]], "weights (neuralnetworkregressor attribute)": [[23, "qiskit_machine_learning.algorithms.NeuralNetworkRegressor.weights", false]], "weights (trainablemodel attribute)": [[31, "qiskit_machine_learning.algorithms.TrainableModel.weights", false]], "weights (vqc attribute)": [[32, "qiskit_machine_learning.algorithms.VQC.weights", false]], "weights (vqr attribute)": [[33, "qiskit_machine_learning.algorithms.VQR.weights", false]], "with_traceback() (qiskitmachinelearningerror method)": [[19, "qiskit_machine_learning.QiskitMachineLearningError.with_traceback", false]], "wrap_function() (adam static method)": [[61, "qiskit_machine_learning.optimizers.ADAM.wrap_function", false]], "wrap_function() (aqgd static method)": [[62, "qiskit_machine_learning.optimizers.AQGD.wrap_function", false]], "wrap_function() (cg static method)": [[64, "qiskit_machine_learning.optimizers.CG.wrap_function", false]], "wrap_function() (cobyla static method)": [[65, "qiskit_machine_learning.optimizers.COBYLA.wrap_function", false]], "wrap_function() (crs static method)": [[66, "qiskit_machine_learning.optimizers.CRS.wrap_function", false]], "wrap_function() (direct_l static method)": [[67, "qiskit_machine_learning.optimizers.DIRECT_L.wrap_function", false]], "wrap_function() (direct_l_rand static method)": [[68, "qiskit_machine_learning.optimizers.DIRECT_L_RAND.wrap_function", false]], "wrap_function() (esch static method)": [[69, "qiskit_machine_learning.optimizers.ESCH.wrap_function", false]], "wrap_function() (gradientdescent static method)": [[71, "qiskit_machine_learning.optimizers.GradientDescent.wrap_function", false]], "wrap_function() (gsls static method)": [[70, "qiskit_machine_learning.optimizers.GSLS.wrap_function", false]], "wrap_function() (isres static method)": [[73, "qiskit_machine_learning.optimizers.ISRES.wrap_function", false]], "wrap_function() (l_bfgs_b static method)": [[74, "qiskit_machine_learning.optimizers.L_BFGS_B.wrap_function", false]], "wrap_function() (nelder_mead static method)": [[76, "qiskit_machine_learning.optimizers.NELDER_MEAD.wrap_function", false]], "wrap_function() (nft static method)": [[77, "qiskit_machine_learning.optimizers.NFT.wrap_function", false]], "wrap_function() (optimizer static method)": [[78, "qiskit_machine_learning.optimizers.Optimizer.wrap_function", false]], "wrap_function() (p_bfgs static method)": [[82, "qiskit_machine_learning.optimizers.P_BFGS.wrap_function", false]], "wrap_function() (powell static method)": [[81, "qiskit_machine_learning.optimizers.POWELL.wrap_function", false]], "wrap_function() (qnspsa static method)": [[83, "qiskit_machine_learning.optimizers.QNSPSA.wrap_function", false]], "wrap_function() (scipyoptimizer static method)": [[86, "qiskit_machine_learning.optimizers.SciPyOptimizer.wrap_function", false]], "wrap_function() (slsqp static method)": [[84, "qiskit_machine_learning.optimizers.SLSQP.wrap_function", false]], "wrap_function() (spsa static method)": [[85, "qiskit_machine_learning.optimizers.SPSA.wrap_function", false]], "wrap_function() (steppableoptimizer static method)": [[87, "qiskit_machine_learning.optimizers.SteppableOptimizer.wrap_function", false]], "wrap_function() (tnc static method)": [[88, "qiskit_machine_learning.optimizers.TNC.wrap_function", false]], "wrap_function() (umda static method)": [[90, "qiskit_machine_learning.optimizers.UMDA.wrap_function", false]], "x (gradientdescentstate attribute)": [[72, "qiskit_machine_learning.optimizers.GradientDescentState.x", false]], "x (optimizerresult attribute)": [[79, "qiskit_machine_learning.optimizers.OptimizerResult.x", false]], "x (optimizerstate attribute)": [[80, "qiskit_machine_learning.optimizers.OptimizerState.x", false]], "x_fun (askdata attribute)": [[63, "qiskit_machine_learning.optimizers.AskData.x_fun", false]], "x_jac (askdata attribute)": [[63, "qiskit_machine_learning.optimizers.AskData.x_jac", false]]}, "objects": {"": [[0, 0, 0, "-", "qiskit_machine_learning"]], "qiskit_machine_learning": [[19, 1, 1, "", "QiskitMachineLearningError"], [1, 0, 0, "-", "algorithms"], [3, 0, 0, "-", "connectors"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "gradients"], [6, 0, 0, "-", "kernels"], [8, 0, 0, "-", "neural_networks"], [9, 0, 0, "-", "optimizers"], [10, 0, 0, "-", "state_fidelities"], [11, 0, 0, "-", "utils"]], "qiskit_machine_learning.QiskitMachineLearningError": [[19, 2, 1, "", "with_traceback"]], "qiskit_machine_learning.algorithms": [[20, 3, 1, "", "BinaryObjectiveFunction"], [21, 3, 1, "", "MultiClassObjectiveFunction"], [22, 3, 1, "", "NeuralNetworkClassifier"], [23, 3, 1, "", "NeuralNetworkRegressor"], [24, 3, 1, "", "ObjectiveFunction"], [25, 3, 1, "", "OneHotObjectiveFunction"], [26, 3, 1, "", "PegasosQSVC"], [27, 3, 1, "", "QBayesian"], [28, 3, 1, "", "QSVC"], [29, 3, 1, "", "QSVR"], [30, 3, 1, "", "SerializableModelMixin"], [31, 3, 1, "", "TrainableModel"], [32, 3, 1, "", "VQC"], [33, 3, 1, "", "VQR"]], "qiskit_machine_learning.algorithms.BinaryObjectiveFunction": [[20, 2, 1, "", "gradient"], [20, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.MultiClassObjectiveFunction": [[21, 2, 1, "", "gradient"], [21, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.NeuralNetworkClassifier": [[22, 4, 1, "", "callback"], [22, 2, 1, "", "fit"], [22, 4, 1, "", "fit_result"], [22, 4, 1, "", "initial_point"], [22, 2, 1, "", "load"], [22, 4, 1, "", "loss"], [22, 4, 1, "", "neural_network"], [22, 4, 1, "", "num_classes"], [22, 4, 1, "", "optimizer"], [22, 2, 1, "", "predict"], [22, 2, 1, "", "predict_proba"], [22, 2, 1, "", "save"], [22, 2, 1, "", "score"], [22, 4, 1, "", "warm_start"], [22, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.NeuralNetworkRegressor": [[23, 4, 1, "", "callback"], [23, 2, 1, "", "fit"], [23, 4, 1, "", "fit_result"], [23, 4, 1, "", "initial_point"], [23, 2, 1, "", "load"], [23, 4, 1, "", "loss"], [23, 4, 1, "", "neural_network"], [23, 4, 1, "", "optimizer"], [23, 2, 1, "", "predict"], [23, 2, 1, "", "save"], [23, 2, 1, "", "score"], [23, 4, 1, "", "warm_start"], [23, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.ObjectiveFunction": [[24, 2, 1, "", "gradient"], [24, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.OneHotObjectiveFunction": [[25, 2, 1, "", "gradient"], [25, 2, 1, "", "objective"]], "qiskit_machine_learning.algorithms.PegasosQSVC": [[26, 4, 1, "", "FITTED"], [26, 4, 1, "", "UNFITTED"], [26, 2, 1, "", "decision_function"], [26, 2, 1, "", "fit"], [26, 2, 1, "", "load"], [26, 4, 1, "", "num_steps"], [26, 4, 1, "", "precomputed"], [26, 2, 1, "", "predict"], [26, 2, 1, "", "predict_proba"], [26, 4, 1, "", "quantum_kernel"], [26, 2, 1, "", "save"], [26, 2, 1, "", "score"]], "qiskit_machine_learning.algorithms.QBayesian": [[27, 4, 1, "", "converged"], [27, 2, 1, "", "inference"], [27, 4, 1, "", "limit"], [27, 2, 1, "", "rejection_sampling"], [27, 4, 1, "", "sampler"], [27, 4, 1, "", "samples"], [27, 4, 1, "", "threshold"]], "qiskit_machine_learning.algorithms.QSVC": [[28, 4, 1, "", "coef_"], [28, 2, 1, "", "decision_function"], [28, 2, 1, "", "fit"], [28, 2, 1, "", "get_metadata_routing"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "load"], [28, 4, 1, "", "n_support_"], [28, 2, 1, "", "predict"], [28, 2, 1, "", "predict_log_proba"], [28, 2, 1, "", "predict_proba"], [28, 4, 1, "", "probA_"], [28, 4, 1, "", "probB_"], [28, 4, 1, "", "quantum_kernel"], [28, 2, 1, "", "save"], [28, 2, 1, "", "score"], [28, 2, 1, "", "set_fit_request"], [28, 2, 1, "", "set_params"], [28, 2, 1, "", "set_score_request"], [28, 4, 1, "", "unused_param"]], "qiskit_machine_learning.algorithms.QSVR": [[29, 4, 1, "", "coef_"], [29, 2, 1, "", "fit"], [29, 2, 1, "", "get_metadata_routing"], [29, 2, 1, "", "get_params"], [29, 2, 1, "", "load"], [29, 4, 1, "", "n_support_"], [29, 2, 1, "", "predict"], [29, 4, 1, "", "quantum_kernel"], [29, 2, 1, "", "save"], [29, 2, 1, "", "score"], [29, 2, 1, "", "set_fit_request"], [29, 2, 1, "", "set_params"], [29, 2, 1, "", "set_score_request"], [29, 4, 1, "", "unused_param"]], "qiskit_machine_learning.algorithms.SerializableModelMixin": [[30, 2, 1, "", "load"], [30, 2, 1, "", "save"]], "qiskit_machine_learning.algorithms.TrainableModel": [[31, 4, 1, "", "callback"], [31, 2, 1, "", "fit"], [31, 4, 1, "", "fit_result"], [31, 4, 1, "", "initial_point"], [31, 2, 1, "", "load"], [31, 4, 1, "", "loss"], [31, 4, 1, "", "neural_network"], [31, 4, 1, "", "optimizer"], [31, 2, 1, "", "predict"], [31, 2, 1, "", "save"], [31, 2, 1, "", "score"], [31, 4, 1, "", "warm_start"], [31, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.VQC": [[32, 4, 1, "", "ansatz"], [32, 4, 1, "", "callback"], [32, 4, 1, "", "circuit"], [32, 4, 1, "", "feature_map"], [32, 2, 1, "", "fit"], [32, 4, 1, "", "fit_result"], [32, 4, 1, "", "initial_point"], [32, 2, 1, "", "load"], [32, 4, 1, "", "loss"], [32, 4, 1, "", "neural_network"], [32, 4, 1, "", "num_classes"], [32, 4, 1, "", "num_qubits"], [32, 4, 1, "", "optimizer"], [32, 2, 1, "", "predict"], [32, 2, 1, "", "predict_proba"], [32, 2, 1, "", "save"], [32, 2, 1, "", "score"], [32, 4, 1, "", "warm_start"], [32, 4, 1, "", "weights"]], "qiskit_machine_learning.algorithms.VQR": [[33, 4, 1, "", "ansatz"], [33, 4, 1, "", "callback"], [33, 4, 1, "", "feature_map"], [33, 2, 1, "", "fit"], [33, 4, 1, "", "fit_result"], [33, 4, 1, "", "initial_point"], [33, 2, 1, "", "load"], [33, 4, 1, "", "loss"], [33, 4, 1, "", "neural_network"], [33, 4, 1, "", "num_qubits"], [33, 4, 1, "", "optimizer"], [33, 2, 1, "", "predict"], [33, 2, 1, "", "save"], [33, 2, 1, "", "score"], [33, 4, 1, "", "warm_start"], [33, 4, 1, "", "weights"]], "qiskit_machine_learning.circuit": [[2, 0, 0, "-", "library"]], "qiskit_machine_learning.circuit.library": [[34, 3, 1, "", "QNNCircuit"], [35, 3, 1, "", "RawFeatureVector"]], "qiskit_machine_learning.circuit.library.QNNCircuit": [[34, 4, 1, "", "ansatz"], [34, 4, 1, "", "cregs"], [34, 4, 1, "", "feature_map"], [34, 4, 1, "", "input_parameters"], [34, 4, 1, "", "name"], [34, 4, 1, "", "num_input_parameters"], [34, 4, 1, "", "num_qubits"], [34, 4, 1, "", "num_weight_parameters"], [34, 4, 1, "", "weight_parameters"]], "qiskit_machine_learning.circuit.library.RawFeatureVector": [[35, 4, 1, "", "cregs"], [35, 4, 1, "", "feature_dimension"], [35, 4, 1, "", "name"], [35, 4, 1, "", "num_qubits"]], "qiskit_machine_learning.connectors": [[36, 3, 1, "", "TorchConnector"]], "qiskit_machine_learning.connectors.TorchConnector": [[36, 2, 1, "", "forward"], [36, 4, 1, "", "neural_network"], [36, 4, 1, "", "sparse"], [36, 4, 1, "", "weight"]], "qiskit_machine_learning.datasets": [[37, 5, 1, "", "ad_hoc_data"]], "qiskit_machine_learning.gradients": [[38, 3, 1, "", "BaseEstimatorGradient"], [39, 3, 1, "", "BaseSamplerGradient"], [40, 3, 1, "", "EstimatorGradientResult"], [41, 3, 1, "", "LinCombEstimatorGradient"], [42, 3, 1, "", "LinCombSamplerGradient"], [43, 3, 1, "", "ParamShiftEstimatorGradient"], [44, 3, 1, "", "ParamShiftSamplerGradient"], [45, 3, 1, "", "SPSAEstimatorGradient"], [46, 3, 1, "", "SPSASamplerGradient"], [47, 3, 1, "", "SamplerGradientResult"]], "qiskit_machine_learning.gradients.BaseEstimatorGradient": [[38, 4, 1, "", "derivative_type"], [38, 4, 1, "", "options"], [38, 2, 1, "", "run"], [38, 2, 1, "", "update_default_options"]], "qiskit_machine_learning.gradients.BaseSamplerGradient": [[39, 4, 1, "", "options"], [39, 2, 1, "", "run"], [39, 2, 1, "", "update_default_options"]], "qiskit_machine_learning.gradients.EstimatorGradientResult": [[40, 4, 1, "", "gradients"], [40, 4, 1, "", "metadata"], [40, 4, 1, "", "options"]], "qiskit_machine_learning.gradients.LinCombEstimatorGradient": [[41, 4, 1, "", "SUPPORTED_GATES"], [41, 4, 1, "", "derivative_type"], [41, 4, 1, "", "options"], [41, 2, 1, "", "run"], [41, 2, 1, "", "update_default_options"]], "qiskit_machine_learning.gradients.LinCombSamplerGradient": [[42, 4, 1, "", "SUPPORTED_GATES"], [42, 4, 1, "", "options"], [42, 2, 1, "", "run"], [42, 2, 1, "", "update_default_options"]], "qiskit_machine_learning.gradients.ParamShiftEstimatorGradient": [[43, 4, 1, "", "SUPPORTED_GATES"], [43, 4, 1, "", "derivative_type"], [43, 4, 1, "", "options"], [43, 2, 1, "", "run"], [43, 2, 1, "", "update_default_options"]], "qiskit_machine_learning.gradients.ParamShiftSamplerGradient": [[44, 4, 1, "", "SUPPORTED_GATES"], [44, 4, 1, "", "options"], [44, 2, 1, "", "run"], [44, 2, 1, "", "update_default_options"]], "qiskit_machine_learning.gradients.SPSAEstimatorGradient": [[45, 4, 1, "", "derivative_type"], [45, 4, 1, "", "options"], [45, 2, 1, "", "run"], [45, 2, 1, "", "update_default_options"]], "qiskit_machine_learning.gradients.SPSASamplerGradient": [[46, 4, 1, "", "options"], [46, 2, 1, "", "run"], [46, 2, 1, "", "update_default_options"]], "qiskit_machine_learning.gradients.SamplerGradientResult": [[47, 4, 1, "", "gradients"], [47, 4, 1, "", "metadata"], [47, 4, 1, "", "options"]], "qiskit_machine_learning.kernels": [[48, 3, 1, "", "BaseKernel"], [49, 3, 1, "", "FidelityQuantumKernel"], [50, 3, 1, "", "FidelityStatevectorKernel"], [51, 3, 1, "", "TrainableFidelityQuantumKernel"], [52, 3, 1, "", "TrainableFidelityStatevectorKernel"], [53, 3, 1, "", "TrainableKernel"], [7, 0, 0, "-", "algorithms"]], "qiskit_machine_learning.kernels.BaseKernel": [[48, 4, 1, "", "enforce_psd"], [48, 2, 1, "", "evaluate"], [48, 4, 1, "", "feature_map"], [48, 4, 1, "", "num_features"]], "qiskit_machine_learning.kernels.FidelityQuantumKernel": [[49, 4, 1, "", "enforce_psd"], [49, 2, 1, "", "evaluate"], [49, 4, 1, "", "evaluate_duplicates"], [49, 4, 1, "", "feature_map"], [49, 4, 1, "", "fidelity"], [49, 4, 1, "", "num_features"]], "qiskit_machine_learning.kernels.FidelityStatevectorKernel": [[50, 2, 1, "", "clear_cache"], [50, 4, 1, "", "enforce_psd"], [50, 2, 1, "", "evaluate"], [50, 4, 1, "", "feature_map"], [50, 4, 1, "", "num_features"]], "qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel": [[51, 2, 1, "", "assign_training_parameters"], [51, 4, 1, "", "enforce_psd"], [51, 2, 1, "", "evaluate"], [51, 4, 1, "", "evaluate_duplicates"], [51, 4, 1, "", "feature_map"], [51, 4, 1, "", "fidelity"], [51, 4, 1, "", "num_features"], [51, 4, 1, "", "num_training_parameters"], [51, 4, 1, "", "parameter_values"], [51, 4, 1, "", "training_parameters"]], "qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel": [[52, 2, 1, "", "assign_training_parameters"], [52, 2, 1, "", "clear_cache"], [52, 4, 1, "", "enforce_psd"], [52, 2, 1, "", "evaluate"], [52, 4, 1, "", "feature_map"], [52, 4, 1, "", "num_features"], [52, 4, 1, "", "num_training_parameters"], [52, 4, 1, "", "parameter_values"], [52, 4, 1, "", "training_parameters"]], "qiskit_machine_learning.kernels.TrainableKernel": [[53, 2, 1, "", "assign_training_parameters"], [53, 4, 1, "", "enforce_psd"], [53, 2, 1, "", "evaluate"], [53, 4, 1, "", "feature_map"], [53, 4, 1, "", "num_features"], [53, 4, 1, "", "num_training_parameters"], [53, 4, 1, "", "parameter_values"], [53, 4, 1, "", "training_parameters"]], "qiskit_machine_learning.kernels.algorithms": [[54, 3, 1, "", "QuantumKernelTrainer"], [55, 3, 1, "", "QuantumKernelTrainerResult"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer": [[54, 2, 1, "", "fit"], [54, 4, 1, "", "initial_point"], [54, 4, 1, "", "loss"], [54, 4, 1, "", "optimizer"], [54, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainerResult": [[55, 2, 1, "", "combine"], [55, 4, 1, "", "optimal_circuit"], [55, 4, 1, "", "optimal_parameters"], [55, 4, 1, "", "optimal_point"], [55, 4, 1, "", "optimal_value"], [55, 4, 1, "", "optimizer_evals"], [55, 4, 1, "", "optimizer_result"], [55, 4, 1, "", "optimizer_time"], [55, 4, 1, "", "quantum_kernel"]], "qiskit_machine_learning.neural_networks": [[56, 3, 1, "", "EffectiveDimension"], [57, 3, 1, "", "EstimatorQNN"], [58, 3, 1, "", "LocalEffectiveDimension"], [59, 3, 1, "", "NeuralNetwork"], [60, 3, 1, "", "SamplerQNN"]], "qiskit_machine_learning.neural_networks.EffectiveDimension": [[56, 2, 1, "", "get_effective_dimension"], [56, 2, 1, "", "get_fisher_information"], [56, 2, 1, "", "get_normalized_fisher"], [56, 4, 1, "", "input_samples"], [56, 2, 1, "", "run_monte_carlo"], [56, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.EstimatorQNN": [[57, 2, 1, "", "backward"], [57, 4, 1, "", "circuit"], [57, 4, 1, "", "default_precision"], [57, 4, 1, "", "estimator"], [57, 2, 1, "", "forward"], [57, 4, 1, "", "gradient"], [57, 4, 1, "", "input_gradients"], [57, 4, 1, "", "input_params"], [57, 4, 1, "", "num_inputs"], [57, 4, 1, "", "num_weights"], [57, 4, 1, "", "observables"], [57, 4, 1, "", "output_shape"], [57, 4, 1, "", "sparse"], [57, 4, 1, "", "weight_params"]], "qiskit_machine_learning.neural_networks.LocalEffectiveDimension": [[58, 2, 1, "", "get_effective_dimension"], [58, 2, 1, "", "get_fisher_information"], [58, 2, 1, "", "get_normalized_fisher"], [58, 4, 1, "", "input_samples"], [58, 2, 1, "", "run_monte_carlo"], [58, 4, 1, "", "weight_samples"]], "qiskit_machine_learning.neural_networks.NeuralNetwork": [[59, 2, 1, "", "backward"], [59, 2, 1, "", "forward"], [59, 4, 1, "", "input_gradients"], [59, 4, 1, "", "num_inputs"], [59, 4, 1, "", "num_weights"], [59, 4, 1, "", "output_shape"], [59, 4, 1, "", "sparse"]], "qiskit_machine_learning.neural_networks.SamplerQNN": [[60, 2, 1, "", "backward"], [60, 4, 1, "", "circuit"], [60, 2, 1, "", "forward"], [60, 4, 1, "", "gradient"], [60, 4, 1, "", "input_gradients"], [60, 4, 1, "", "input_params"], [60, 4, 1, "", "interpret"], [60, 4, 1, "", "num_inputs"], [60, 4, 1, "", "num_weights"], [60, 4, 1, "", "output_shape"], [60, 4, 1, "", "sampler"], [60, 2, 1, "", "set_interpret"], [60, 4, 1, "", "sparse"], [60, 4, 1, "", "weight_params"]], "qiskit_machine_learning.optimizers": [[61, 3, 1, "", "ADAM"], [62, 3, 1, "", "AQGD"], [63, 3, 1, "", "AskData"], [64, 3, 1, "", "CG"], [65, 3, 1, "", "COBYLA"], [66, 3, 1, "", "CRS"], [67, 3, 1, "", "DIRECT_L"], [68, 3, 1, "", "DIRECT_L_RAND"], [69, 3, 1, "", "ESCH"], [70, 3, 1, "", "GSLS"], [71, 3, 1, "", "GradientDescent"], [72, 3, 1, "", "GradientDescentState"], [73, 3, 1, "", "ISRES"], [74, 3, 1, "", "L_BFGS_B"], [75, 3, 1, "", "Minimizer"], [76, 3, 1, "", "NELDER_MEAD"], [77, 3, 1, "", "NFT"], [78, 3, 1, "", "Optimizer"], [79, 3, 1, "", "OptimizerResult"], [80, 3, 1, "", "OptimizerState"], [81, 3, 1, "", "POWELL"], [82, 3, 1, "", "P_BFGS"], [83, 3, 1, "", "QNSPSA"], [84, 3, 1, "", "SLSQP"], [85, 3, 1, "", "SPSA"], [86, 3, 1, "", "SciPyOptimizer"], [87, 3, 1, "", "SteppableOptimizer"], [88, 3, 1, "", "TNC"], [89, 3, 1, "", "TellData"], [90, 3, 1, "", "UMDA"], [91, 0, 0, "-", "optimizer_utils"]], "qiskit_machine_learning.optimizers.ADAM": [[61, 4, 1, "", "bounds_support_level"], [61, 2, 1, "", "get_support_level"], [61, 2, 1, "", "gradient_num_diff"], [61, 4, 1, "", "gradient_support_level"], [61, 4, 1, "", "initial_point_support_level"], [61, 4, 1, "", "is_bounds_ignored"], [61, 4, 1, "", "is_bounds_required"], [61, 4, 1, "", "is_bounds_supported"], [61, 4, 1, "", "is_gradient_ignored"], [61, 4, 1, "", "is_gradient_required"], [61, 4, 1, "", "is_gradient_supported"], [61, 4, 1, "", "is_initial_point_ignored"], [61, 4, 1, "", "is_initial_point_required"], [61, 4, 1, "", "is_initial_point_supported"], [61, 2, 1, "", "load_params"], [61, 2, 1, "", "minimize"], [61, 2, 1, "", "print_options"], [61, 2, 1, "", "save_params"], [61, 2, 1, "", "set_max_evals_grouped"], [61, 2, 1, "", "set_options"], [61, 4, 1, "", "setting"], [61, 4, 1, "", "settings"], [61, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.AQGD": [[62, 4, 1, "", "bounds_support_level"], [62, 2, 1, "", "get_support_level"], [62, 2, 1, "", "gradient_num_diff"], [62, 4, 1, "", "gradient_support_level"], [62, 4, 1, "", "initial_point_support_level"], [62, 4, 1, "", "is_bounds_ignored"], [62, 4, 1, "", "is_bounds_required"], [62, 4, 1, "", "is_bounds_supported"], [62, 4, 1, "", "is_gradient_ignored"], [62, 4, 1, "", "is_gradient_required"], [62, 4, 1, "", "is_gradient_supported"], [62, 4, 1, "", "is_initial_point_ignored"], [62, 4, 1, "", "is_initial_point_required"], [62, 4, 1, "", "is_initial_point_supported"], [62, 2, 1, "", "minimize"], [62, 2, 1, "", "print_options"], [62, 2, 1, "", "set_max_evals_grouped"], [62, 2, 1, "", "set_options"], [62, 4, 1, "", "setting"], [62, 4, 1, "", "settings"], [62, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.AskData": [[63, 4, 1, "", "x_fun"], [63, 4, 1, "", "x_jac"]], "qiskit_machine_learning.optimizers.CG": [[64, 4, 1, "", "bounds_support_level"], [64, 2, 1, "", "get_support_level"], [64, 2, 1, "", "gradient_num_diff"], [64, 4, 1, "", "gradient_support_level"], [64, 4, 1, "", "initial_point_support_level"], [64, 4, 1, "", "is_bounds_ignored"], [64, 4, 1, "", "is_bounds_required"], [64, 4, 1, "", "is_bounds_supported"], [64, 4, 1, "", "is_gradient_ignored"], [64, 4, 1, "", "is_gradient_required"], [64, 4, 1, "", "is_gradient_supported"], [64, 4, 1, "", "is_initial_point_ignored"], [64, 4, 1, "", "is_initial_point_required"], [64, 4, 1, "", "is_initial_point_supported"], [64, 2, 1, "", "minimize"], [64, 2, 1, "", "print_options"], [64, 2, 1, "", "set_max_evals_grouped"], [64, 2, 1, "", "set_options"], [64, 4, 1, "", "setting"], [64, 4, 1, "", "settings"], [64, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.COBYLA": [[65, 4, 1, "", "bounds_support_level"], [65, 2, 1, "", "get_support_level"], [65, 2, 1, "", "gradient_num_diff"], [65, 4, 1, "", "gradient_support_level"], [65, 4, 1, "", "initial_point_support_level"], [65, 4, 1, "", "is_bounds_ignored"], [65, 4, 1, "", "is_bounds_required"], [65, 4, 1, "", "is_bounds_supported"], [65, 4, 1, "", "is_gradient_ignored"], [65, 4, 1, "", "is_gradient_required"], [65, 4, 1, "", "is_gradient_supported"], [65, 4, 1, "", "is_initial_point_ignored"], [65, 4, 1, "", "is_initial_point_required"], [65, 4, 1, "", "is_initial_point_supported"], [65, 2, 1, "", "minimize"], [65, 2, 1, "", "print_options"], [65, 2, 1, "", "set_max_evals_grouped"], [65, 2, 1, "", "set_options"], [65, 4, 1, "", "setting"], [65, 4, 1, "", "settings"], [65, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.CRS": [[66, 4, 1, "", "bounds_support_level"], [66, 2, 1, "", "get_nlopt_optimizer"], [66, 2, 1, "", "get_support_level"], [66, 2, 1, "", "gradient_num_diff"], [66, 4, 1, "", "gradient_support_level"], [66, 4, 1, "", "initial_point_support_level"], [66, 4, 1, "", "is_bounds_ignored"], [66, 4, 1, "", "is_bounds_required"], [66, 4, 1, "", "is_bounds_supported"], [66, 4, 1, "", "is_gradient_ignored"], [66, 4, 1, "", "is_gradient_required"], [66, 4, 1, "", "is_gradient_supported"], [66, 4, 1, "", "is_initial_point_ignored"], [66, 4, 1, "", "is_initial_point_required"], [66, 4, 1, "", "is_initial_point_supported"], [66, 2, 1, "", "minimize"], [66, 2, 1, "", "print_options"], [66, 2, 1, "", "set_max_evals_grouped"], [66, 2, 1, "", "set_options"], [66, 4, 1, "", "setting"], [66, 4, 1, "", "settings"], [66, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.DIRECT_L": [[67, 4, 1, "", "bounds_support_level"], [67, 2, 1, "", "get_nlopt_optimizer"], [67, 2, 1, "", "get_support_level"], [67, 2, 1, "", "gradient_num_diff"], [67, 4, 1, "", "gradient_support_level"], [67, 4, 1, "", "initial_point_support_level"], [67, 4, 1, "", "is_bounds_ignored"], [67, 4, 1, "", "is_bounds_required"], [67, 4, 1, "", "is_bounds_supported"], [67, 4, 1, "", "is_gradient_ignored"], [67, 4, 1, "", "is_gradient_required"], [67, 4, 1, "", "is_gradient_supported"], [67, 4, 1, "", "is_initial_point_ignored"], [67, 4, 1, "", "is_initial_point_required"], [67, 4, 1, "", "is_initial_point_supported"], [67, 2, 1, "", "minimize"], [67, 2, 1, "", "print_options"], [67, 2, 1, "", "set_max_evals_grouped"], [67, 2, 1, "", "set_options"], [67, 4, 1, "", "setting"], [67, 4, 1, "", "settings"], [67, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.DIRECT_L_RAND": [[68, 4, 1, "", "bounds_support_level"], [68, 2, 1, "", "get_nlopt_optimizer"], [68, 2, 1, "", "get_support_level"], [68, 2, 1, "", "gradient_num_diff"], [68, 4, 1, "", "gradient_support_level"], [68, 4, 1, "", "initial_point_support_level"], [68, 4, 1, "", "is_bounds_ignored"], [68, 4, 1, "", "is_bounds_required"], [68, 4, 1, "", "is_bounds_supported"], [68, 4, 1, "", "is_gradient_ignored"], [68, 4, 1, "", "is_gradient_required"], [68, 4, 1, "", "is_gradient_supported"], [68, 4, 1, "", "is_initial_point_ignored"], [68, 4, 1, "", "is_initial_point_required"], [68, 4, 1, "", "is_initial_point_supported"], [68, 2, 1, "", "minimize"], [68, 2, 1, "", "print_options"], [68, 2, 1, "", "set_max_evals_grouped"], [68, 2, 1, "", "set_options"], [68, 4, 1, "", "setting"], [68, 4, 1, "", "settings"], [68, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.ESCH": [[69, 4, 1, "", "bounds_support_level"], [69, 2, 1, "", "get_nlopt_optimizer"], [69, 2, 1, "", "get_support_level"], [69, 2, 1, "", "gradient_num_diff"], [69, 4, 1, "", "gradient_support_level"], [69, 4, 1, "", "initial_point_support_level"], [69, 4, 1, "", "is_bounds_ignored"], [69, 4, 1, "", "is_bounds_required"], [69, 4, 1, "", "is_bounds_supported"], [69, 4, 1, "", "is_gradient_ignored"], [69, 4, 1, "", "is_gradient_required"], [69, 4, 1, "", "is_gradient_supported"], [69, 4, 1, "", "is_initial_point_ignored"], [69, 4, 1, "", "is_initial_point_required"], [69, 4, 1, "", "is_initial_point_supported"], [69, 2, 1, "", "minimize"], [69, 2, 1, "", "print_options"], [69, 2, 1, "", "set_max_evals_grouped"], [69, 2, 1, "", "set_options"], [69, 4, 1, "", "setting"], [69, 4, 1, "", "settings"], [69, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.GSLS": [[70, 4, 1, "", "bounds_support_level"], [70, 2, 1, "", "get_support_level"], [70, 2, 1, "", "gradient_approximation"], [70, 2, 1, "", "gradient_num_diff"], [70, 4, 1, "", "gradient_support_level"], [70, 4, 1, "", "initial_point_support_level"], [70, 4, 1, "", "is_bounds_ignored"], [70, 4, 1, "", "is_bounds_required"], [70, 4, 1, "", "is_bounds_supported"], [70, 4, 1, "", "is_gradient_ignored"], [70, 4, 1, "", "is_gradient_required"], [70, 4, 1, "", "is_gradient_supported"], [70, 4, 1, "", "is_initial_point_ignored"], [70, 4, 1, "", "is_initial_point_required"], [70, 4, 1, "", "is_initial_point_supported"], [70, 2, 1, "", "ls_optimize"], [70, 2, 1, "", "minimize"], [70, 2, 1, "", "print_options"], [70, 2, 1, "", "sample_points"], [70, 2, 1, "", "sample_set"], [70, 2, 1, "", "set_max_evals_grouped"], [70, 2, 1, "", "set_options"], [70, 4, 1, "", "setting"], [70, 4, 1, "", "settings"], [70, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.GradientDescent": [[71, 2, 1, "", "ask"], [71, 4, 1, "", "bounds_support_level"], [71, 2, 1, "", "continue_condition"], [71, 2, 1, "", "create_result"], [71, 2, 1, "", "evaluate"], [71, 2, 1, "", "get_support_level"], [71, 2, 1, "", "gradient_num_diff"], [71, 4, 1, "", "gradient_support_level"], [71, 4, 1, "", "initial_point_support_level"], [71, 4, 1, "", "is_bounds_ignored"], [71, 4, 1, "", "is_bounds_required"], [71, 4, 1, "", "is_bounds_supported"], [71, 4, 1, "", "is_gradient_ignored"], [71, 4, 1, "", "is_gradient_required"], [71, 4, 1, "", "is_gradient_supported"], [71, 4, 1, "", "is_initial_point_ignored"], [71, 4, 1, "", "is_initial_point_required"], [71, 4, 1, "", "is_initial_point_supported"], [71, 2, 1, "", "minimize"], [71, 4, 1, "", "perturbation"], [71, 2, 1, "", "print_options"], [71, 2, 1, "", "set_max_evals_grouped"], [71, 2, 1, "", "set_options"], [71, 4, 1, "", "setting"], [71, 4, 1, "", "settings"], [71, 2, 1, "", "start"], [71, 4, 1, "", "state"], [71, 2, 1, "", "step"], [71, 2, 1, "", "tell"], [71, 4, 1, "", "tol"], [71, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.GradientDescentState": [[72, 4, 1, "", "fun"], [72, 4, 1, "", "jac"], [72, 4, 1, "", "learning_rate"], [72, 4, 1, "", "nfev"], [72, 4, 1, "", "nit"], [72, 4, 1, "", "njev"], [72, 4, 1, "", "stepsize"], [72, 4, 1, "", "x"]], "qiskit_machine_learning.optimizers.ISRES": [[73, 4, 1, "", "bounds_support_level"], [73, 2, 1, "", "get_nlopt_optimizer"], [73, 2, 1, "", "get_support_level"], [73, 2, 1, "", "gradient_num_diff"], [73, 4, 1, "", "gradient_support_level"], [73, 4, 1, "", "initial_point_support_level"], [73, 4, 1, "", "is_bounds_ignored"], [73, 4, 1, "", "is_bounds_required"], [73, 4, 1, "", "is_bounds_supported"], [73, 4, 1, "", "is_gradient_ignored"], [73, 4, 1, "", "is_gradient_required"], [73, 4, 1, "", "is_gradient_supported"], [73, 4, 1, "", "is_initial_point_ignored"], [73, 4, 1, "", "is_initial_point_required"], [73, 4, 1, "", "is_initial_point_supported"], [73, 2, 1, "", "minimize"], [73, 2, 1, "", "print_options"], [73, 2, 1, "", "set_max_evals_grouped"], [73, 2, 1, "", "set_options"], [73, 4, 1, "", "setting"], [73, 4, 1, "", "settings"], [73, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.L_BFGS_B": [[74, 4, 1, "", "bounds_support_level"], [74, 2, 1, "", "get_support_level"], [74, 2, 1, "", "gradient_num_diff"], [74, 4, 1, "", "gradient_support_level"], [74, 4, 1, "", "initial_point_support_level"], [74, 4, 1, "", "is_bounds_ignored"], [74, 4, 1, "", "is_bounds_required"], [74, 4, 1, "", "is_bounds_supported"], [74, 4, 1, "", "is_gradient_ignored"], [74, 4, 1, "", "is_gradient_required"], [74, 4, 1, "", "is_gradient_supported"], [74, 4, 1, "", "is_initial_point_ignored"], [74, 4, 1, "", "is_initial_point_required"], [74, 4, 1, "", "is_initial_point_supported"], [74, 2, 1, "", "minimize"], [74, 2, 1, "", "print_options"], [74, 2, 1, "", "set_max_evals_grouped"], [74, 2, 1, "", "set_options"], [74, 4, 1, "", "setting"], [74, 4, 1, "", "settings"], [74, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.NELDER_MEAD": [[76, 4, 1, "", "bounds_support_level"], [76, 2, 1, "", "get_support_level"], [76, 2, 1, "", "gradient_num_diff"], [76, 4, 1, "", "gradient_support_level"], [76, 4, 1, "", "initial_point_support_level"], [76, 4, 1, "", "is_bounds_ignored"], [76, 4, 1, "", "is_bounds_required"], [76, 4, 1, "", "is_bounds_supported"], [76, 4, 1, "", "is_gradient_ignored"], [76, 4, 1, "", "is_gradient_required"], [76, 4, 1, "", "is_gradient_supported"], [76, 4, 1, "", "is_initial_point_ignored"], [76, 4, 1, "", "is_initial_point_required"], [76, 4, 1, "", "is_initial_point_supported"], [76, 2, 1, "", "minimize"], [76, 2, 1, "", "print_options"], [76, 2, 1, "", "set_max_evals_grouped"], [76, 2, 1, "", "set_options"], [76, 4, 1, "", "setting"], [76, 4, 1, "", "settings"], [76, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.NFT": [[77, 4, 1, "", "bounds_support_level"], [77, 2, 1, "", "get_support_level"], [77, 2, 1, "", "gradient_num_diff"], [77, 4, 1, "", "gradient_support_level"], [77, 4, 1, "", "initial_point_support_level"], [77, 4, 1, "", "is_bounds_ignored"], [77, 4, 1, "", "is_bounds_required"], [77, 4, 1, "", "is_bounds_supported"], [77, 4, 1, "", "is_gradient_ignored"], [77, 4, 1, "", "is_gradient_required"], [77, 4, 1, "", "is_gradient_supported"], [77, 4, 1, "", "is_initial_point_ignored"], [77, 4, 1, "", "is_initial_point_required"], [77, 4, 1, "", "is_initial_point_supported"], [77, 2, 1, "", "minimize"], [77, 2, 1, "", "print_options"], [77, 2, 1, "", "set_max_evals_grouped"], [77, 2, 1, "", "set_options"], [77, 4, 1, "", "setting"], [77, 4, 1, "", "settings"], [77, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.Optimizer": [[78, 4, 1, "", "bounds_support_level"], [78, 2, 1, "", "get_support_level"], [78, 2, 1, "", "gradient_num_diff"], [78, 4, 1, "", "gradient_support_level"], [78, 4, 1, "", "initial_point_support_level"], [78, 4, 1, "", "is_bounds_ignored"], [78, 4, 1, "", "is_bounds_required"], [78, 4, 1, "", "is_bounds_supported"], [78, 4, 1, "", "is_gradient_ignored"], [78, 4, 1, "", "is_gradient_required"], [78, 4, 1, "", "is_gradient_supported"], [78, 4, 1, "", "is_initial_point_ignored"], [78, 4, 1, "", "is_initial_point_required"], [78, 4, 1, "", "is_initial_point_supported"], [78, 2, 1, "", "minimize"], [78, 2, 1, "", "print_options"], [78, 2, 1, "", "set_max_evals_grouped"], [78, 2, 1, "", "set_options"], [78, 4, 1, "", "setting"], [78, 4, 1, "", "settings"], [78, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.OptimizerResult": [[79, 2, 1, "", "combine"], [79, 4, 1, "", "fun"], [79, 4, 1, "", "jac"], [79, 4, 1, "", "nfev"], [79, 4, 1, "", "nit"], [79, 4, 1, "", "njev"], [79, 4, 1, "", "x"]], "qiskit_machine_learning.optimizers.OptimizerState": [[80, 4, 1, "", "fun"], [80, 4, 1, "", "jac"], [80, 4, 1, "", "nfev"], [80, 4, 1, "", "nit"], [80, 4, 1, "", "njev"], [80, 4, 1, "", "x"]], "qiskit_machine_learning.optimizers.POWELL": [[81, 4, 1, "", "bounds_support_level"], [81, 2, 1, "", "get_support_level"], [81, 2, 1, "", "gradient_num_diff"], [81, 4, 1, "", "gradient_support_level"], [81, 4, 1, "", "initial_point_support_level"], [81, 4, 1, "", "is_bounds_ignored"], [81, 4, 1, "", "is_bounds_required"], [81, 4, 1, "", "is_bounds_supported"], [81, 4, 1, "", "is_gradient_ignored"], [81, 4, 1, "", "is_gradient_required"], [81, 4, 1, "", "is_gradient_supported"], [81, 4, 1, "", "is_initial_point_ignored"], [81, 4, 1, "", "is_initial_point_required"], [81, 4, 1, "", "is_initial_point_supported"], [81, 2, 1, "", "minimize"], [81, 2, 1, "", "print_options"], [81, 2, 1, "", "set_max_evals_grouped"], [81, 2, 1, "", "set_options"], [81, 4, 1, "", "setting"], [81, 4, 1, "", "settings"], [81, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.P_BFGS": [[82, 4, 1, "", "bounds_support_level"], [82, 2, 1, "", "get_support_level"], [82, 2, 1, "", "gradient_num_diff"], [82, 4, 1, "", "gradient_support_level"], [82, 4, 1, "", "initial_point_support_level"], [82, 4, 1, "", "is_bounds_ignored"], [82, 4, 1, "", "is_bounds_required"], [82, 4, 1, "", "is_bounds_supported"], [82, 4, 1, "", "is_gradient_ignored"], [82, 4, 1, "", "is_gradient_required"], [82, 4, 1, "", "is_gradient_supported"], [82, 4, 1, "", "is_initial_point_ignored"], [82, 4, 1, "", "is_initial_point_required"], [82, 4, 1, "", "is_initial_point_supported"], [82, 2, 1, "", "minimize"], [82, 2, 1, "", "print_options"], [82, 2, 1, "", "set_max_evals_grouped"], [82, 2, 1, "", "set_options"], [82, 4, 1, "", "setting"], [82, 4, 1, "", "settings"], [82, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.QNSPSA": [[83, 4, 1, "", "bounds_support_level"], [83, 2, 1, "", "calibrate"], [83, 2, 1, "", "estimate_stddev"], [83, 2, 1, "", "get_fidelity"], [83, 2, 1, "", "get_support_level"], [83, 2, 1, "", "gradient_num_diff"], [83, 4, 1, "", "gradient_support_level"], [83, 4, 1, "", "initial_point_support_level"], [83, 4, 1, "", "is_bounds_ignored"], [83, 4, 1, "", "is_bounds_required"], [83, 4, 1, "", "is_bounds_supported"], [83, 4, 1, "", "is_gradient_ignored"], [83, 4, 1, "", "is_gradient_required"], [83, 4, 1, "", "is_gradient_supported"], [83, 4, 1, "", "is_initial_point_ignored"], [83, 4, 1, "", "is_initial_point_required"], [83, 4, 1, "", "is_initial_point_supported"], [83, 2, 1, "", "minimize"], [83, 2, 1, "", "print_options"], [83, 2, 1, "", "set_max_evals_grouped"], [83, 2, 1, "", "set_options"], [83, 4, 1, "", "setting"], [83, 4, 1, "", "settings"], [83, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.SLSQP": [[84, 4, 1, "", "bounds_support_level"], [84, 2, 1, "", "get_support_level"], [84, 2, 1, "", "gradient_num_diff"], [84, 4, 1, "", "gradient_support_level"], [84, 4, 1, "", "initial_point_support_level"], [84, 4, 1, "", "is_bounds_ignored"], [84, 4, 1, "", "is_bounds_required"], [84, 4, 1, "", "is_bounds_supported"], [84, 4, 1, "", "is_gradient_ignored"], [84, 4, 1, "", "is_gradient_required"], [84, 4, 1, "", "is_gradient_supported"], [84, 4, 1, "", "is_initial_point_ignored"], [84, 4, 1, "", "is_initial_point_required"], [84, 4, 1, "", "is_initial_point_supported"], [84, 2, 1, "", "minimize"], [84, 2, 1, "", "print_options"], [84, 2, 1, "", "set_max_evals_grouped"], [84, 2, 1, "", "set_options"], [84, 4, 1, "", "setting"], [84, 4, 1, "", "settings"], [84, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.SPSA": [[85, 4, 1, "", "bounds_support_level"], [85, 2, 1, "", "calibrate"], [85, 2, 1, "", "estimate_stddev"], [85, 2, 1, "", "get_support_level"], [85, 2, 1, "", "gradient_num_diff"], [85, 4, 1, "", "gradient_support_level"], [85, 4, 1, "", "initial_point_support_level"], [85, 4, 1, "", "is_bounds_ignored"], [85, 4, 1, "", "is_bounds_required"], [85, 4, 1, "", "is_bounds_supported"], [85, 4, 1, "", "is_gradient_ignored"], [85, 4, 1, "", "is_gradient_required"], [85, 4, 1, "", "is_gradient_supported"], [85, 4, 1, "", "is_initial_point_ignored"], [85, 4, 1, "", "is_initial_point_required"], [85, 4, 1, "", "is_initial_point_supported"], [85, 2, 1, "", "minimize"], [85, 2, 1, "", "print_options"], [85, 2, 1, "", "set_max_evals_grouped"], [85, 2, 1, "", "set_options"], [85, 4, 1, "", "setting"], [85, 4, 1, "", "settings"], [85, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.SciPyOptimizer": [[86, 4, 1, "", "bounds_support_level"], [86, 2, 1, "", "get_support_level"], [86, 2, 1, "", "gradient_num_diff"], [86, 4, 1, "", "gradient_support_level"], [86, 4, 1, "", "initial_point_support_level"], [86, 4, 1, "", "is_bounds_ignored"], [86, 4, 1, "", "is_bounds_required"], [86, 4, 1, "", "is_bounds_supported"], [86, 4, 1, "", "is_gradient_ignored"], [86, 4, 1, "", "is_gradient_required"], [86, 4, 1, "", "is_gradient_supported"], [86, 4, 1, "", "is_initial_point_ignored"], [86, 4, 1, "", "is_initial_point_required"], [86, 4, 1, "", "is_initial_point_supported"], [86, 2, 1, "", "minimize"], [86, 2, 1, "", "print_options"], [86, 2, 1, "", "set_max_evals_grouped"], [86, 2, 1, "", "set_options"], [86, 4, 1, "", "setting"], [86, 4, 1, "", "settings"], [86, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.SteppableOptimizer": [[87, 2, 1, "", "ask"], [87, 4, 1, "", "bounds_support_level"], [87, 2, 1, "", "continue_condition"], [87, 2, 1, "", "create_result"], [87, 2, 1, "", "evaluate"], [87, 2, 1, "", "get_support_level"], [87, 2, 1, "", "gradient_num_diff"], [87, 4, 1, "", "gradient_support_level"], [87, 4, 1, "", "initial_point_support_level"], [87, 4, 1, "", "is_bounds_ignored"], [87, 4, 1, "", "is_bounds_required"], [87, 4, 1, "", "is_bounds_supported"], [87, 4, 1, "", "is_gradient_ignored"], [87, 4, 1, "", "is_gradient_required"], [87, 4, 1, "", "is_gradient_supported"], [87, 4, 1, "", "is_initial_point_ignored"], [87, 4, 1, "", "is_initial_point_required"], [87, 4, 1, "", "is_initial_point_supported"], [87, 2, 1, "", "minimize"], [87, 2, 1, "", "print_options"], [87, 2, 1, "", "set_max_evals_grouped"], [87, 2, 1, "", "set_options"], [87, 4, 1, "", "setting"], [87, 4, 1, "", "settings"], [87, 2, 1, "", "start"], [87, 4, 1, "", "state"], [87, 2, 1, "", "step"], [87, 2, 1, "", "tell"], [87, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.TNC": [[88, 4, 1, "", "bounds_support_level"], [88, 2, 1, "", "get_support_level"], [88, 2, 1, "", "gradient_num_diff"], [88, 4, 1, "", "gradient_support_level"], [88, 4, 1, "", "initial_point_support_level"], [88, 4, 1, "", "is_bounds_ignored"], [88, 4, 1, "", "is_bounds_required"], [88, 4, 1, "", "is_bounds_supported"], [88, 4, 1, "", "is_gradient_ignored"], [88, 4, 1, "", "is_gradient_required"], [88, 4, 1, "", "is_gradient_supported"], [88, 4, 1, "", "is_initial_point_ignored"], [88, 4, 1, "", "is_initial_point_required"], [88, 4, 1, "", "is_initial_point_supported"], [88, 2, 1, "", "minimize"], [88, 2, 1, "", "print_options"], [88, 2, 1, "", "set_max_evals_grouped"], [88, 2, 1, "", "set_options"], [88, 4, 1, "", "setting"], [88, 4, 1, "", "settings"], [88, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.TellData": [[89, 4, 1, "", "eval_fun"], [89, 4, 1, "", "eval_jac"]], "qiskit_machine_learning.optimizers.UMDA": [[90, 4, 1, "", "ELITE_FACTOR"], [90, 4, 1, "", "STD_BOUND"], [90, 4, 1, "", "alpha"], [90, 4, 1, "", "bounds_support_level"], [90, 2, 1, "", "get_support_level"], [90, 2, 1, "", "gradient_num_diff"], [90, 4, 1, "", "gradient_support_level"], [90, 4, 1, "", "initial_point_support_level"], [90, 4, 1, "", "is_bounds_ignored"], [90, 4, 1, "", "is_bounds_required"], [90, 4, 1, "", "is_bounds_supported"], [90, 4, 1, "", "is_gradient_ignored"], [90, 4, 1, "", "is_gradient_required"], [90, 4, 1, "", "is_gradient_supported"], [90, 4, 1, "", "is_initial_point_ignored"], [90, 4, 1, "", "is_initial_point_required"], [90, 4, 1, "", "is_initial_point_supported"], [90, 4, 1, "", "maxiter"], [90, 2, 1, "", "minimize"], [90, 2, 1, "", "print_options"], [90, 2, 1, "", "set_max_evals_grouped"], [90, 2, 1, "", "set_options"], [90, 4, 1, "", "setting"], [90, 4, 1, "", "settings"], [90, 4, 1, "", "size_gen"], [90, 2, 1, "", "wrap_function"]], "qiskit_machine_learning.optimizers.optimizer_utils": [[91, 3, 1, "", "LearningRate"]], "qiskit_machine_learning.optimizers.optimizer_utils.LearningRate": [[91, 2, 1, "", "close"], [91, 6, 1, "", "current"], [91, 2, 1, "", "send"], [91, 2, 1, "", "throw"]], "qiskit_machine_learning.state_fidelities": [[92, 3, 1, "", "BaseStateFidelity"], [93, 3, 1, "", "ComputeUncompute"], [94, 3, 1, "", "StateFidelityResult"]], "qiskit_machine_learning.state_fidelities.BaseStateFidelity": [[92, 2, 1, "", "create_fidelity_circuit"], [92, 2, 1, "", "run"]], "qiskit_machine_learning.state_fidelities.ComputeUncompute": [[93, 2, 1, "", "create_fidelity_circuit"], [93, 4, 1, "", "options"], [93, 2, 1, "", "run"], [93, 2, 1, "", "update_default_options"]], "qiskit_machine_learning.state_fidelities.StateFidelityResult": [[94, 4, 1, "", "fidelities"], [94, 4, 1, "", "metadata"], [94, 4, 1, "", "options"], [94, 4, 1, "", "raw_fidelities"]], "qiskit_machine_learning.utils": [[12, 0, 0, "-", "loss_functions"]], "qiskit_machine_learning.utils.loss_functions": [[95, 3, 1, "", "CrossEntropyLoss"], [96, 3, 1, "", "KernelLoss"], [97, 3, 1, "", "L1Loss"], [98, 3, 1, "", "L2Loss"], [99, 3, 1, "", "Loss"], [100, 3, 1, "", "SVCLoss"]], "qiskit_machine_learning.utils.loss_functions.CrossEntropyLoss": [[95, 2, 1, "", "evaluate"], [95, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.KernelLoss": [[96, 2, 1, "", "evaluate"]], "qiskit_machine_learning.utils.loss_functions.L1Loss": [[97, 2, 1, "", "evaluate"], [97, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.L2Loss": [[98, 2, 1, "", "evaluate"], [98, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.Loss": [[99, 2, 1, "", "evaluate"], [99, 2, 1, "", "gradient"]], "qiskit_machine_learning.utils.loss_functions.SVCLoss": [[100, 2, 1, "", "evaluate"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "method", "Python method"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:method", "3": "py:class", "4": "py:attribute", "5": "py:function", "6": "py:property"}, "terms": {"": [9, 13, 14, 15, 16, 18, 22, 23, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 56, 57, 58, 60, 61, 74, 75, 77, 87, 92, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "00": [104, 112, 113], "0001": [76, 81, 113], "001": [18, 27, 61, 106, 113], "00111": 112, "002": 113, "005": 105, "00634766": 101, "00683594": 101, "00745": 62, "009_ask_and_tel": [71, 87], "01": [70, 71, 104, 105, 113], "01074219": 101, "0111026763916": 106, "01128010425623538": 90, "01256962": 106, "01332": 70, "015625": 57, "01660156": 101, "01806641": 101, "019": 111, "01_neural_network": 101, "02250432": 106, "025": 111, "02553589": 110, "029802322387695": 106, "02_neural_network_classifier_and_regressor": 102, "02a_training_a_quantum_model_on_a_real_dataset": 103, "0308": 106, "032309": 62, "032315": 111, "032331": 62, "03406": 100, "0364991": 106, "03752667": 106, "03_quantum_kernel": 104, "04": 85, "04005302": 106, "04233438": 106, "04349927": 102, "045001": 112, "04_torch_qgan": 105, "05": [64, 103, 104, 105, 107, 108, 109, 113], "05018v2": 85, "052373245772859": 90, "054840087890625": 106, "05761719": 101, "05859375": 101, "05_torch_connector": 106, "06": [45, 46, 61, 62, 70, 84], "06001836": 106, "06054688": 101, "06095287": 106, "062315": 27, "06298828": 101, "0648": 111, "06645196": 106, "06653564": 106, "06741233": 109, "07": [71, 112], "0720495": 106, "07226562": 101, "07_pegasos_qsvc": 107, "08": [61, 64, 70, 74, 84, 88, 109], "08148127": 110, "08935547": 101, "0897": 106, "08_quantum_kernel_train": 108, "091796875": 113, "09232": 83, "09237": 61, "09326172": 101, "09417735": 101, "09667969": 101, "09852755": 106, "09960938": 101, "09_saving_and_loading_model": 109, "0_i": 93, "0f": 106, "0qiskit": 15, "0system": 15, "0thu": 15, "0x7f0bec38a260": 108, "0x7f93e4e77040": 102, "0x7fa543ec3700": 109, "0x7fa543f39c00": 109, "0x7fa549602500": 109, "0x7fc341ea5600": 103, "0x7ff14f642560": 101, "0x7ff1a852fa30": 101, "1": [15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 97, 98, 99, 102, 107, 108], "10": [18, 27, 45, 46, 61, 62, 70, 83, 85, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "100": [27, 71, 74, 82, 83, 84, 85, 87, 88, 90, 103, 104, 106, 107, 109, 111], "1000": [18, 26, 62, 65, 66, 67, 68, 69, 73, 76, 81, 82, 107], "10000": [61, 70, 110], "100000": 110, "1000000": 110, "101": [83, 85], "1024": 77, "10253906": 101, "10351562": 101, "10351936": 109, "1038": 111, "104": 103, "10595703": 101, "109375": 101, "10_effective_dimens": 110, "11": [18, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113], "1109": [45, 46], "11184": [41, 42, 62], "11230469": 101, "11326": 37, "11326v2": [50, 93], "11376953": 101, "1145": 90, "114768": 27, "1171875": 113, "11914062": 101, "11_qcnn_initial_point": 111, "11_quantum_convolutional_neural_network": 111, "12": [15, 18, 37, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113], "12166": 77, "12169458": 102, "12278374": 110, "123": 103, "1234": [16, 18], "12345": [104, 107, 111], "123456": [15, 105], "12646484": 101, "1273": 111, "1278": 111, "12_qae_initial_point": 112, "12_quantum_autoencod": 112, "13": [15, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112], "130": 105, "1360": 106, "13_quantum_bayesian_infer": 113, "13python": 15, "14": [15, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112], "1412": 61, "1417": 85, "1424": 85, "15": [74, 82, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112], "150": [103, 112], "15000": 74, "150000": 110, "15041419": 110, "16": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "17": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "1704": 85, "176": 27, "179": 103, "18": [18, 101, 102, 103, 104, 105, 106, 109, 110, 112], "1803": 62, "1804": [37, 50, 93], "18093119978423156": 90, "1811": [41, 42, 62], "1839": [45, 46], "1853": [45, 46], "18652344": 101, "188": 103, "18oslinuxmon": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "19": [15, 85, 101, 102, 103, 104, 106, 109, 110, 112], "1903": 77, "1904": 61, "1905": 70, "191286087036133": 106, "1936": 103, "1950": 103, "1972": 103, "1973": 103, "1980": 103, "1988": 103, "1997": 85, "19970703": 101, "1998": 85, "1d": [48, 49, 50, 51, 52, 53, 70, 109], "1e": [45, 46, 61, 62, 64, 70, 71, 74, 84, 88], "1f": 106, "2": [15, 21, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 49, 50, 51, 52, 54, 57, 60, 61, 71, 74, 82, 83, 85, 87, 88, 90, 92, 93, 98, 102, 107, 108], "20": [15, 18, 64, 71, 87, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "200": [85, 102, 106, 109, 111], "2000": [45, 46], "200000": 110, "2004": 111, "2014": [27, 61], "2017": [15, 85, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "2018": [41, 42, 61, 62], "2019": [37, 50, 62, 77, 93, 105, 111], "2020": [45, 46], "2021": 27, "20214844": 101, "2022": [15, 90], "2023": 15, "2024": 18, "2025": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "20800781": 101, "20898438": 101, "209": [37, 50, 93], "20_recip": [71, 87], "21": [101, 102, 103, 104, 106, 109, 110, 111], "2103": 83, "2105": 100, "212": [50, 93], "21289062": 101, "213869637133818": 108, "217": 18, "218": 103, "22": [101, 102, 103, 104, 106, 109, 110], "220446049250313e": [74, 82], "22167969": 101, "22305873036384583": 106, "22361": 103, "22607422": 101, "22705078": 101, "2293444275856018": 106, "22959011": 110, "22osdarwincpus10memori": 15, "23": [27, 29, 101, 102, 103, 104, 106, 109], "23144531": 101, "23193359": 101, "2360777109861374": 106, "24": [101, 102, 103, 106, 109], "24044157": 102, "24121094": 101, "24511719": 101, "24554478": 102, "246": [85, 111], "2468440681695938": 106, "24805721640586853": 106, "24861188232898712": 106, "24924612045288086": 106, "25": [15, 62, 83, 85, 102, 103, 104, 106], "25439453": 101, "2545": 106, "2552": 106, "255578875541687": 106, "256": 106, "25627580285072327": 106, "25864377617836": 106, "26": [18, 102, 106], "26464844": 101, "2667614221572876": 106, "2692928612232208": 106, "26957231760025024": 106, "27": [102, 103, 106], "2732209861278534": 106, "27410104870796204": 106, "27490234": 101, "28": 102, "2813772": 110, "2843675911426544": 106, "28950529": 101, "29": [102, 111, 113], "2933": 106, "29508795": 101, "29573578": 101, "2d": [48, 49, 50, 51, 52, 53, 70, 105], "2f": [103, 104, 105, 112], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 107, 108, 114], "30": [18, 90, 102, 103, 106, 108, 109], "300": [83, 85], "3038852": 101, "30566406": 101, "30948713": 102, "31": [15, 102], "31494141": 101, "32": [77, 101, 102, 112], "32226562": 101, "32324219": 101, "32519531": 101, "33": [102, 103], "3313": 106, "33203125": 101, "33528392": 102, "34": [102, 103, 105], "34130859": 101, "35": [102, 108], "3520304": 90, "3533963": 90, "36": [102, 103], "36th": 85, "37": [103, 104], "370554655790329": 106, "38085938": 101, "39": [101, 102, 103, 105, 108, 110, 113], "39793742484318045": 90, "3d": [18, 105, 110], "3qiskit_machine_learning0": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "3system": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "4": [15, 34, 35, 37, 57, 60, 70, 83, 85, 90, 102, 107, 108], "40": [15, 103, 106, 109], "40000": 110, "41": [106, 107], "4194": 103, "42": [101, 102, 106, 109, 110, 112], "42154941": 102, "4246826171875": 106, "43": 103, "431": 103, "433": 103, "43887844": 101, "44": 108, "44566143": 109, "4491": 106, "449417114257812": 106, "45": [45, 46, 109, 110], "45754615": 109, "46704927": 102, "47": 111, "471": 103, "48": 112, "482": 85, "48828125": 101, "48925781": 101, "4901161193847656e": [64, 84], "492": 85, "4f": [106, 110], "5": [34, 57, 60, 71, 85, 90, 100, 102, 106, 107, 108, 109, 113], "50": [70, 90, 102, 103, 105, 106, 110, 111], "5000": 110, "500000": 110, "50166893005371": 106, "515625": 101, "52": [101, 103], "52929688": 101, "53": 107, "54": [15, 103], "5447": 106, "549": 85, "55175781": 101, "567": [37, 50, 93], "569": 18, "57": [15, 103, 112], "57064437866211": 106, "57844444": 102, "57958596": 110, "59603188": 110, "6": [15, 27, 34, 57, 60, 71, 90, 102, 103, 104, 106, 107, 108, 109, 110, 113], "60": [90, 102, 106], "60000": 110, "602": [83, 85], "60400038": 110, "60669366": 102, "6171794533729553": 106, "6197552680969238": 106, "6220942139625549": 106, "6278782486915588": 106, "6279522776603699": 106, "6287354230880737": 106, "63": 103, "63272767": 101, "6328466": 102, "6382997035980225": 106, "6399412751197815": 106, "64": [15, 103, 105, 106], "6440848708152771": 106, "6489415273097414": 108, "64894153": 108, "64959716796875": 106, "6496": 106, "65": 102, "65355208": 110, "65563201904297": 106, "6561": 106, "6570463180541992": 106, "6586275696754456": 106, "66": 103, "667116641998291": 106, "66759979": 110, "67": [103, 111], "6705168557071955": 104, "6734491586685181": 106, "6776110529899597": 106, "68077514": 102, "6809056997299194": 106, "6831842660903931": 106, "684729": 110, "69": 111, "6928768157959": 106, "6963": 110, "696611225605011": 106, "69736803": 101, "69775701": 110, "6980": 61, "7": [14, 15, 34, 57, 60, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113], "70": 106, "704404830932617": 106, "7066478": 110, "70711": 35, "71": 103, "7126244": 109, "7201539278030396": 106, "72156755": 110, "73280229": 110, "73339923": 110, "738551139831543": 106, "741464614868164": 106, "7436395883560181": 106, "74377359": 110, "74900312": 110, "75": 102, "75033353": 110, "755760192871094": 106, "76": 103, "7611397": 101, "7691": 106, "77395605": 101, "7747": [37, 50, 93], "77703036": 110, "7770372": 109, "7826": 103, "7827": 110, "78285996": 110, "78606431": 101, "79067335": 109, "79246524": 110, "7930452227592468": 106, "79889948": 102, "8": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114], "80": [106, 109, 110], "8000": 110, "8039964": 110, "80422817": 109, "80475408": 110, "81260996": 110, "817197799682617": 106, "8172": 106, "81841079": 110, "83": 103, "8333333333333334": 109, "83515928": 110, "84": [9, 103, 105], "84618238": 110, "8572": 106, "85859792": 101, "86": 111, "875397682189941": 106, "88072937": 109, "880982": [45, 46], "8828125": 113, "89": 27, "89954275": 102, "9": [16, 18, 27, 57, 60, 61, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113], "90": [27, 103, 106, 113], "902461051940918": 106, "904250144958496": 106, "90784454345703": 106, "911": 18, "9310615062713623": 106, "938076972961426": 106, "94": [105, 110, 111, 113], "943951606750488": 106, "9490": 103, "95": [15, 104, 113], "9565": 103, "9681198723451012": 15, "97": [103, 113], "9733920193709087": 102, "97562235": 101, "9773577597028779": 102, "97821692": 110, "98": 62, "9862573848706973": 112, "99": [61, 62, 74, 82, 103], "999": 105, "A": [2, 4, 6, 8, 11, 12, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 50, 52, 54, 56, 57, 58, 60, 61, 62, 64, 65, 70, 71, 74, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 96, 100, 101, 102, 103, 104, 105, 107, 108, 111, 113], "And": [15, 105, 107, 113], "As": [13, 14, 15, 18, 85, 101, 102, 103, 104, 106, 109, 110, 111, 112], "At": [18, 34], "Be": [9, 16], "But": [15, 101, 103], "By": [18, 50, 56, 57, 58, 59, 60, 65, 83, 85, 101, 102, 110, 111, 112, 113], "FOR": 106, "For": [6, 13, 15, 16, 18, 20, 21, 22, 25, 26, 27, 28, 29, 32, 33, 48, 60, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 81, 82, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113], "If": [13, 16, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 70, 71, 74, 76, 81, 82, 83, 85, 87, 88, 90, 93, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113], "In": [13, 15, 16, 18, 22, 23, 26, 28, 31, 32, 33, 34, 35, 50, 57, 58, 59, 60, 66, 71, 77, 85, 87, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "It": [14, 15, 18, 27, 34, 35, 60, 64, 71, 72, 73, 76, 83, 85, 87, 88, 101, 102, 103, 104, 105, 111, 112, 113], "Its": 113, "NOT": 103, "No": [54, 101, 102, 103, 105, 106, 109, 110, 111, 112], "OR": 62, "Of": 102, "On": [22, 23, 31, 32, 33, 61, 104, 105, 109, 110, 111], "One": [15, 18, 32, 51, 52, 101, 103, 104, 111, 112], "Or": [32, 33], "Such": [57, 60], "TO": 106, "That": [18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 91, 103, 113], "The": [1, 6, 9, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113], "Then": [13, 15, 22, 23, 31, 83, 104, 105, 107, 109, 112], "There": [18, 26, 102, 103, 104, 107, 112, 113], "These": [0, 18, 32, 34, 50, 60, 87, 101, 103, 110, 111, 112], "To": [9, 14, 15, 16, 18, 26, 37, 71, 83, 85, 87, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "Will": 91, "With": [16, 18, 50, 101, 104], "_": [103, 105, 109, 112], "__": [28, 29, 112], "__call__": 85, "__init__": [85, 105, 106, 108], "__next__": 106, "__traceback__": 19, "_bound_support_level": 78, "_data": 108, "_fit_intern": 18, "_gradient_support_level": 78, "_i": 104, "_initial_point_support_level": 78, "_iris_dataset": 103, "_j": 104, "_option": 70, "_qubit": 33, "_torchnnfunctionbackward": 106, "_validate_backward_output": 18, "_weight": 18, "a_": 112, "a_1": 111, "a_2": 111, "a_3": 111, "a_4": 111, "a_i": 100, "a_j": [100, 111], "a_k": [83, 85], "ab": [62, 77, 100, 112], "abba": [56, 58, 110], "abc": [38, 39, 48, 53, 59, 63, 78, 89, 92, 96, 99], "abil": [13, 15, 18, 51, 53, 109, 110, 111, 112], "abl": [18, 61, 90, 105, 106, 110, 111, 112], "about": [13, 40, 47, 71, 87, 94, 101, 108, 110, 113], "abov": [13, 15, 18, 70, 101, 102, 103, 105, 106, 109, 111, 112, 113], "absenc": 71, "absolut": [22, 76, 97], "absolute_error": [18, 22, 23, 31], "abstract": [15, 18, 24, 31, 48, 53, 59, 78, 87, 92, 95, 96, 97, 98, 99, 100, 101], "acc": 18, "acceler": 85, "accept": [15, 18, 27, 76, 81, 83, 85, 101, 108, 113], "access": [13, 18, 22, 23, 31, 32, 33, 91, 101, 106, 110], "accord": [26, 28, 29, 37, 87, 101, 107, 110], "accordingli": [18, 87, 111], "account": [14, 85, 96], "accur": 76, "accuraci": [22, 23, 26, 28, 31, 32, 33, 65, 83, 88, 104, 106, 108, 110, 111], "accuracy_test": 108, "achiev": [83, 102, 103, 104, 106, 113], "across": [18, 105], "act": [35, 111, 112], "action": [101, 110], "activ": [26, 74, 82], "actual": [15, 18, 101, 104, 105, 110, 111], "acycl": 113, "ad": [15, 18, 28, 29, 37, 50, 83, 85, 104, 108], "ad_hoc": 108, "ad_hoc_data": [18, 104, 108], "adagrad": 106, "adam": [16, 18, 105, 106], "adam_param": 61, "adapt": [16, 26, 45, 46, 61, 71, 76, 85, 108, 113], "add": [16, 18, 51, 52, 71, 85, 102, 103, 104, 107, 111], "add_subplot": 105, "addit": [13, 15, 18, 28, 29, 37, 40, 47, 49, 50, 51, 53, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 101, 103, 106, 111, 112], "addition": [85, 103], "address": 15, "adequ": [105, 106], "adhoc_dimens": [104, 108], "adhoc_feature_map": 104, "adhoc_kernel": 104, "adhoc_matrix": 104, "adhoc_matrix_test": 104, "adhoc_matrix_train": 104, "adhoc_score_callable_funct": 104, "adhoc_score_precomputed_kernel": 104, "adhoc_spectr": 104, "adhoc_svc": 104, "adhoc_tot": [104, 108], "adjoint": [18, 112], "adjust": [18, 32, 33, 34, 48, 49, 50, 51, 52, 111, 112, 113], "adopt": [18, 57, 60], "advanc": [18, 87, 113], "advantag": [101, 105, 106, 110], "adversari": 105, "adversarial_loss": 105, "advis": 18, "ae": 112, "aer": [15, 16, 18, 101], "aer0": 15, "affect": [18, 110], "affin": 104, "after": [15, 16, 18, 34, 50, 54, 60, 61, 70, 83, 85, 88, 103, 106, 109, 110, 111, 112, 113], "afterward": 107, "again": [101, 102, 103, 104, 109, 112], "against": [102, 103, 109, 110, 111, 112], "agglom": 104, "aggreg": 18, "agnost": 101, "aim": [14, 15, 105, 112], "al": [26, 27, 41, 42, 56, 58, 83, 85, 103, 105, 107, 110, 111, 113], "alan": 112, "albeit": 103, "algorithm": [2, 4, 5, 6, 8, 9, 10, 14, 15, 18, 26, 27, 32, 48, 49, 51, 52, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113], "algorithm_glob": [15, 16, 18, 70, 82, 83, 85, 90, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112], "algorithmerror": 62, "algorithmjob": [38, 39, 41, 42, 43, 44, 45, 46, 92, 93], "algorithmresult": 79, "alia": [28, 29], "align": [16, 100, 108, 113], "all": [6, 9, 15, 16, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 71, 72, 75, 78, 83, 85, 87, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112], "allow": [8, 13, 14, 18, 22, 23, 28, 29, 31, 32, 33, 66, 67, 68, 69, 73, 76, 81, 82, 83, 85, 87, 88, 101, 104, 106, 111, 112, 113], "allowed_increas": [83, 85], "almost": 103, "along": [15, 18, 34, 55, 81, 104, 111], "alongsid": 111, "alpha": [83, 85, 90, 104, 111], "alreadi": [13, 18, 61, 90, 111, 112], "also": [8, 14, 15, 16, 18, 22, 23, 28, 31, 32, 33, 36, 50, 57, 60, 68, 72, 74, 80, 82, 83, 85, 87, 88, 91, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113], "alter": [15, 54, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "altern": [18, 104, 105, 107, 111, 112], "although": [34, 103], "alwai": [16, 18, 29, 32, 92, 103], "among": [9, 85], "amount": [71, 74, 108, 109, 111, 112], "amp": 103, "amplif": [27, 113], "amplitud": [18, 27, 35, 112, 113], "amsgrad": 61, "an": [0, 9, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 48, 49, 51, 53, 54, 56, 57, 58, 60, 64, 69, 70, 71, 72, 73, 74, 76, 79, 83, 85, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111], "analog": [103, 106, 113], "analysi": 113, "analyt": [41, 42, 43, 44, 54, 61, 62, 71, 83], "analyz": [103, 111], "angl": 113, "ani": [15, 16, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 40, 47, 55, 57, 71, 79, 80, 84, 86, 94, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "announc": 15, "annual": 103, "anomali": 112, "anoth": [18, 32, 60, 78, 87, 103, 104, 106, 107, 109, 111, 112, 113], "ansatz": [14, 15, 16, 18, 32, 33, 34, 57, 60, 83, 85, 101, 102, 103, 106, 109, 110, 111], "ansatz_qc": 112, "antialias": 105, "anymor": 105, "anywher": 111, "apach": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "apart": [15, 105], "api": 106, "apl": 85, "appear": [27, 28, 103, 105], "append": [61, 85, 102, 103, 105, 106, 108, 109, 110, 111, 112], "appli": [13, 18, 22, 23, 27, 31, 35, 37, 60, 88, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113], "applic": [14, 18, 27, 76, 101, 104, 105, 106, 113], "apply_layout": 16, "approach": [16, 18, 93, 103, 104, 109, 111, 113], "appropri": 85, "approxim": [45, 46, 64, 65, 70, 71, 74, 83, 84, 85, 88, 105, 113], "aqgd": 18, "ar": [0, 6, 9, 13, 15, 16, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 57, 59, 60, 61, 62, 64, 70, 71, 73, 74, 76, 78, 81, 83, 84, 85, 87, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "arang": [104, 107, 112], "arbitrari": [28, 29, 73, 100], "arbitrarili": 29, "arc": 103, "architectur": [14, 16, 18, 101, 106, 112], "arcsin": 113, "area": 113, "aren": [71, 87], "arg": [18, 28, 29, 36, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 100, 108], "argmax": 106, "argument": [18, 28, 29, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 55, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 100, 101, 104, 108], "armijo": 70, "armijo_paramet": 70, "arn": 18, "around": [18, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 103, 113], "arrai": [13, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 35, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 70, 71, 85, 91, 95, 96, 97, 98, 99, 100, 102, 103, 106, 108, 109, 110, 111, 112], "artifici": [8, 102, 103, 111], "arxiv": [37, 41, 42, 50, 61, 62, 70, 77, 83, 85, 93, 100], "asarrai": [109, 111], "ask": [63, 71, 87, 103], "ask_data": [71, 87], "askdata": [71, 87], "asmatrix": [104, 108], "aspect": [105, 111], "aspuru": 112, "assembli": 85, "assess": [110, 113], "assign": [15, 18, 27, 28, 29, 51, 52, 53, 57, 60, 96, 100, 102, 111, 112], "assign_paramet": [35, 112], "assign_training_paramet": [18, 51, 52, 53], "assign_user_paramet": 18, "assist": 16, "associ": [57, 111, 113], "assum": [18, 22, 23, 31, 50, 95], "assumpt": 106, "asynchron": [92, 93], "attempt": [9, 18, 70, 74, 83], "attent": [103, 106], "attribut": [16, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 103], "attributeerror": 18, "audio": 111, "author": 110, "auto": 107, "auto_clear_cach": [18, 50, 52], "auto_encoder_circuit": 112, "autoclass": 103, "autograd": [18, 105, 106], "automat": [13, 14, 15, 18, 45, 46, 50, 52, 60, 83, 85, 101, 103, 105, 106, 113], "auxiliari": 112, "auxiliary_qubit": 112, "avail": [15, 16, 18, 54, 101, 103, 106, 107, 109, 110, 111, 112], "averag": [18, 45, 46, 56, 58, 62, 83, 85, 93, 110], "avg": [83, 85], "avoid": [16, 50, 82, 111], "aw": 37, "awai": 105, "awar": [9, 16, 18], "ax": [103, 104, 105, 106, 108, 111], "ax1": [105, 112], "ax2": [105, 112], "ax3": 105, "axi": [102, 106, 109, 113], "axisgrid": 103, "b": [15, 18, 27, 74, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113], "b1": 105, "b2": 105, "ba": 61, "back": [27, 103, 106, 110, 111], "backend": [15, 16, 18, 38, 39, 41, 42, 43, 44, 45, 46, 49, 92, 93], "background": [101, 103, 111, 112], "backprop": 106, "backpropag": [14, 18, 101, 106], "backward": [18, 24, 56, 57, 58, 59, 60, 105, 106, 110], "badli": 110, "balanc": 103, "balanced_accuracy_scor": 108, "barrier": [111, 112], "base": [15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113], "basebackend": 18, "baseestim": [15, 18, 33, 38, 41, 43, 45, 57, 101], "baseestimatorgradi": [18, 41, 43, 45, 57], "baseestimatorv2": [38, 43, 57], "basekernel": [15, 18, 22, 26, 28, 29, 32, 49, 50, 53], "baseoper": [33, 38, 41, 43, 45, 57], "basepassmanag": [32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 57, 60], "basesampl": [15, 18, 27, 32, 39, 42, 44, 46, 60, 83, 93, 101, 113], "basesamplergradi": [18, 42, 44, 46, 60], "basesamplerv2": [27, 93], "basestatefidel": [14, 18, 49, 51, 93], "basi": 105, "basic": [15, 18, 22, 23, 32, 101, 108, 113], "basica": 15, "batch": [18, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 106], "batch_idx": 106, "batch_siz": [18, 45, 46, 101, 106], "bay": 113, "bayesian": [18, 27], "bbox_to_anchor": [104, 107, 108, 109], "bce_loss": 105, "bear": 16, "becam": 15, "becaus": [18, 29, 57, 60, 101, 103, 105, 106, 110, 111, 112], "becom": [18, 26, 104, 107], "been": [13, 15, 16, 18, 22, 23, 26, 27, 31, 32, 33, 57, 60, 83, 85, 87, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "befor": [15, 16, 18, 22, 26, 32, 36, 56, 58, 64, 71, 83, 85, 87, 101, 103, 104, 110, 111, 112], "begin": [37, 54, 105, 109, 111, 112, 113], "beginn": 14, "behav": [71, 72, 87, 109, 111], "behavior": [18, 54, 60, 70, 82, 83, 85, 90], "behind": [101, 104], "being": [13, 15, 18, 22, 23, 31, 32, 33, 72, 80, 81, 106, 110, 111, 112], "belief": 113, "bell": 105, "belong": [83, 90, 113], "below": [15, 16, 18, 28, 29, 60, 70, 104, 111, 112], "benchmark": 105, "benefici": [112, 113], "benefit": [18, 104, 107], "bergholm": [43, 44, 62], "best": [29, 71, 87, 90, 103, 104, 105], "beta": [105, 111], "beta_1": 61, "beta_2": 61, "better": [6, 18, 48, 74, 76, 90, 103, 104, 107, 109, 113], "between": [15, 16, 18, 34, 49, 51, 76, 92, 93, 101, 102, 103, 104, 105, 108, 110, 112, 113], "beyond": 61, "bfg": [18, 74, 82, 106], "bia": 62, "bias": [67, 68], "bielza": 90, "big": [51, 52, 83, 90, 105], "bigger": 90, "bin": [18, 60], "binari": [18, 20, 22, 23, 27, 31, 32, 100, 101, 102, 105, 106, 108, 110], "binary_cross_entropi": 105, "binaryobjectivefunct": 18, "bind": 18, "bind_paramet": 18, "bind_training_paramet": 18, "bind_user_paramet": 18, "binomi": [18, 50, 52], "bit": [14, 18, 27, 60, 102, 103, 106, 112], "bitstr": [15, 18, 32, 60, 101, 102, 110], "bivari": 105, "black": [102, 106, 109], "bloch": 113, "block": [0, 2, 14, 15, 16, 18, 83, 85], "blog": 18, "blue": [104, 109], "blueprint": 34, "blueprintcircuit": [34, 35], "bo": [102, 106], "bobyqa": 9, "boldsymbol": 105, "bool": [22, 23, 26, 27, 28, 29, 31, 32, 33, 36, 37, 48, 49, 50, 51, 52, 57, 59, 60, 61, 64, 65, 70, 71, 76, 77, 81, 83, 84, 85, 87, 88, 93], "boolean": 26, "borderaxespad": [104, 107, 108, 109], "bore": 103, "borujeni": 27, "both": [14, 15, 18, 34, 38, 39, 41, 42, 43, 44, 45, 46, 70, 71, 76, 81, 85, 93, 102, 103, 105, 110, 111, 112, 113], "bottleneck": 112, "bound": [18, 26, 35, 38, 39, 41, 42, 43, 44, 45, 46, 51, 52, 57, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 100, 108, 110], "bound_pass_manag": 18, "boundari": 104, "bounds_support_level": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "brain": 101, "break": [16, 18, 106], "breast_canc": 18, "brew": 13, "brief": 103, "briefli": [103, 110], "broken": 112, "broyden": 74, "bug": 16, "build": [0, 2, 14, 18, 105, 111], "builddefault": 15, "built": [14, 57, 60, 77, 103, 111], "bulk": 18, "bunch": 103, "bw": 113, "bwr": 108, "c": [16, 18, 26, 27, 28, 29, 43, 44, 45, 46, 83, 85, 88, 100, 102, 107, 108, 111, 112], "c1": 111, "c2": 111, "c3": 111, "c_": 104, "c_k": [83, 85], "c_kei": 113, "c_val": 113, "cach": [18, 50, 52], "cache_s": [18, 50, 52], "cae": 112, "calcul": [5, 6, 15, 18, 22, 26, 27, 32, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 60, 83, 85, 88, 92, 93, 94, 101, 104, 106, 112, 113], "calculate_accuraci": 18, "calibr": [83, 85], "call": [13, 15, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 35, 49, 50, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113], "callabl": [18, 22, 23, 26, 31, 32, 33, 54, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91], "callback": [18, 22, 23, 31, 32, 33, 61, 71, 83, 85, 90, 102, 103, 109, 110, 111], "callback_graph": [102, 103, 109, 110, 111], "came": 18, "can": [0, 6, 8, 9, 13, 14, 15, 16, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 41, 43, 48, 50, 51, 52, 55, 57, 60, 70, 71, 72, 76, 78, 80, 82, 83, 85, 87, 90, 91, 92, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "candid": 9, "cannot": [13, 18, 34, 101, 111, 112], "canon": 87, "capabl": [15, 101, 111, 112], "capac": [18, 110], "capit": 18, "captur": [105, 110], "care": [15, 105], "carefulli": 105, "carlo": [56, 58, 83, 110], "carri": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "case": [15, 16, 18, 22, 23, 26, 31, 32, 33, 34, 37, 57, 59, 60, 66, 75, 76, 90, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113], "cast": [57, 59, 60], "cat": [106, 111], "catch": [71, 87], "categor": [18, 22, 32, 102], "categori": [9, 104], "caus": [16, 18, 113], "caution": 18, "cautiou": 16, "cb_qkt": 108, "cbit": 16, "ccx": [41, 42], "cd": 13, "cdf": 105, "cdot": 111, "cell": 109, "center": [14, 15, 18, 107], "center_box": [15, 18], "central": [70, 103], "centroid": 102, "certain": [83, 85, 110, 111, 113], "cf": 87, "cg": 88, "challeng": [51, 52, 113], "chanc": [71, 87], "chang": [13, 15, 16, 18, 28, 29, 34, 60, 62, 65, 74, 80, 82, 101, 103, 106, 110, 111], "channel": [16, 105], "charact": [18, 27], "character": 103, "characterist": 103, "check": [13, 18, 28, 29, 49, 101, 103, 106, 113], "cheeseman": 103, "chemistri": 112, "children": 113, "choi": 111, "choic": [71, 85, 87, 102, 103, 106, 108], "choos": [51, 52, 103, 105, 109, 113], "chosen": [26, 36, 83, 85, 90, 104, 105, 106, 107, 109, 111, 112], "chow": [37, 50, 93], "christian": 62, "chuang": 27, "circ": 112, "circl": 106, "circuit": [8, 14, 15, 16, 18, 27, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 57, 60, 62, 83, 85, 90, 92, 93, 94, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "circuit_1": [92, 93], "circuit_2": [92, 93], "circuit_draw": 108, "circuit_qnn": 15, "circuitqnn": [18, 112], "circuits_1": [92, 93], "circuits_2": [92, 93], "circuitsampl": 18, "circuitstatefn": 18, "circular": 111, "clarif": 106, "class": [6, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 113], "class_label": 104, "class_sep": [102, 110], "classes_": 28, "classic": [6, 8, 9, 14, 15, 16, 18, 48, 50, 60, 77, 82, 104, 106, 108, 110, 112], "classicalregist": [34, 35, 112], "classif": [0, 1, 6, 14, 18, 22, 23, 26, 28, 29, 31, 32, 33, 48, 100, 101, 103, 107, 108, 110, 111], "classifi": [12, 14, 18, 22, 26, 28, 29, 32, 90, 101, 103, 104, 105, 106, 109, 110, 111], "classifiermixin": [18, 22, 26], "classmethod": [22, 23, 26, 28, 29, 30, 31, 32, 33], "clear": [18, 50, 52, 103, 106], "clear_cach": [50, 52], "clear_callback_data": 108, "clear_output": [102, 103, 105, 109, 110, 111, 112], "client": 15, "clifford": [101, 102, 103, 105, 106, 110, 111, 112], "clone": 13, "close": [15, 61, 91, 103, 105, 111], "closest": [48, 49, 50, 51, 52, 53], "closur": 106, "cloud": [15, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 101, 106, 109, 111], "cluster": [6, 48, 103], "cluster_label": 104, "cluster_scor": 104, "cluster_std": [15, 18], "cm": [103, 104, 105, 108], "cmap": [104, 105, 106, 107, 108], "cnn": [106, 111], "cnot": 112, "co": [14, 113], "cobyla": [15, 16, 18, 102, 103, 109, 110, 111, 112], "code": [8, 13, 14, 15, 16, 18, 85, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "coef_": [28, 29], "coeff": [83, 85], "coeffici": [22, 23, 29, 31, 32, 33, 62, 83, 85], "coin": 103, "coincid": 93, "colin": 111, "collaps": 113, "collect": [11, 12, 14, 102, 104, 105, 109], "color": [102, 104, 105, 106, 107, 109], "colorbar": 105, "colormap": 108, "column": [28, 103, 109], "column_stack": 107, "com": [9, 13, 18, 90, 111], "combin": [14, 15, 18, 41, 42, 55, 57, 60, 73, 79, 84, 93, 101, 102, 110, 111, 113], "come": [0, 18, 71, 103, 112], "command": 13, "common": [12, 101, 103, 104, 110, 111, 112], "commonli": [38, 43, 104, 111, 112], "commun": [9, 13, 14, 18], "comp": 112, "compar": [18, 71, 83, 90, 102, 103, 105, 110, 111, 112, 113], "comparison": 103, "compat": [13, 14, 15, 16, 18, 22, 23, 33, 107], "competit": 90, "compilerclang": 15, "complementari": 101, "complet": [18, 85, 105], "complex": [18, 38, 41, 43, 45, 90, 101, 102, 103, 105, 106, 107, 110, 113], "complic": [71, 87, 112], "compon": [15, 18, 28, 29, 70, 82, 83, 85, 90, 103], "compos": [15, 18, 34, 57, 60, 71, 87, 105, 106, 108, 111, 112], "composedop": 18, "composit": [18, 34, 57, 60, 102, 110], "compris": 103, "compromis": 103, "comput": [10, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 111, 112, 113], "compute_minimum_eigenvalu": 90, "computefidel": [16, 18], "computeuncomput": [15, 16, 18, 49, 51, 104, 107, 108], "concaten": 112, "concentr": 106, "concept": [14, 101], "conceptu": [103, 110], "concha": 90, "conclud": [103, 111], "conclus": 113, "concret": [15, 18], "condit": [18, 50, 71, 77, 87, 113], "condition": 85, "conduct": 14, "confer": [85, 90], "configur": [18, 34, 36, 102, 105, 112], "confirm": 18, "confus": 18, "cong": 111, "congratul": 111, "conj": 112, "conjug": [64, 81, 88, 112], "connect": [36, 110, 111, 112], "connector": [14, 18, 36, 105, 109], "consequ": [15, 18], "consid": [9, 18, 22, 23, 31, 34, 71, 90, 102, 103, 104, 111, 113], "consider": [76, 106], "consist": [15, 18, 29, 34, 103, 106, 111, 112], "constant": [29, 71, 83, 85], "constant_coeff": 71, "constitu": 103, "constitut": 101, "constrain": [65, 73], "constraint": [16, 18, 69, 73, 74, 76, 81, 84, 110], "construct": [14, 15, 18, 32, 34, 37, 48, 49, 50, 51, 52, 53, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 105, 106, 109, 110], "constructor": [18, 28, 29, 57, 60, 100, 101, 104, 107, 110], "consum": 101, "contain": [1, 9, 15, 18, 26, 28, 29, 32, 35, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 96, 100, 101, 102, 103, 108, 111, 112], "content": [15, 16, 104], "context": [18, 60, 102, 104, 113], "contigu": [28, 29], "continu": [9, 13, 16, 18, 71, 84, 87, 90, 105, 111, 112], "continue_condit": [71, 87], "contourf": 104, "contrast": 74, "contribut": [18, 103], "control": [45, 46, 66, 71, 74, 82, 85, 87, 113], "control_qubit": 113, "conv1": 106, "conv2": 106, "conv2d": 106, "conv_circuit": 111, "conv_lay": 111, "conveni": [15, 18, 30, 32, 33, 102, 103, 104, 111], "convent": 18, "converg": [15, 27, 61, 62, 64, 65, 70, 71, 73, 76, 81, 83, 84, 85, 88, 103, 106, 108, 109, 111, 112, 113], "convers": 18, "convert": [18, 26, 84, 106, 107], "coolwarm": 105, "coord": 105, "coordin": [70, 104, 106], "cope": [61, 103], "copi": [15, 18, 28, 29, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "copyright": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "core": [1, 9, 14, 15, 113], "correct": [16, 18, 106], "correctli": [18, 26, 28], "correl": [103, 110], "correspond": [15, 18, 22, 23, 27, 28, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 49, 51, 52, 57, 60, 70, 87, 92, 93, 101, 102, 105, 106, 109, 110, 111, 112, 113], "correspondingli": 18, "cost": [5, 111, 112], "cost_func_digit": 112, "cost_func_domain": 112, "could": [15, 18, 70, 102, 103, 111, 113], "council": 14, "count": [14, 15, 18, 60, 101, 102, 106, 110, 112, 113], "counter": [71, 87, 113], "counterpart": [101, 103, 112], "coupl": [3, 111], "cours": [83, 85, 102, 103], "cov": 105, "covari": 108, "cover": 109, "cpt": 113, "cpu": 18, "cr": 112, "creat": [13, 18, 28, 34, 49, 51, 54, 57, 60, 71, 87, 91, 92, 93, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112], "create_fidelity_circuit": [92, 93], "create_gener": 105, "create_qnn": [106, 109], "create_result": [71, 87], "creation": 16, "creator": 103, "creg": [34, 35], "criteria": 113, "criterion": [26, 62, 70, 84, 85, 88, 107, 113], "critic": [16, 18, 103], "cross": [28, 95, 105, 106], "cross_entropi": [15, 18, 22, 23, 31, 32, 102], "crossentropi": 22, "crossentropyloss": [18, 102, 106], "crossentropysigmoidloss": 18, "crucial": [103, 106], "cry": 113, "csr_matrix": [28, 29], "csv": 61, "cswap": 112, "cumsum": 105, "current": [15, 18, 22, 23, 31, 32, 33, 37, 61, 62, 71, 72, 80, 87, 91, 102, 103, 104, 112], "curv": 111, "curvatur": 85, "custom": [15, 18, 60, 62, 71, 85, 87, 102, 103, 104, 106, 108, 110], "customiz": 87, "cut": 14, "cx": [41, 42, 43, 44, 101, 105, 111], "cy": [41, 42, 43, 44], "cz": [41, 42, 43, 44], "c\u00f3rcole": [37, 50, 93], "d": [18, 48, 49, 50, 51, 52, 53, 54, 83, 93, 102, 110, 111], "d83": 103, "d_": 105, "dag": 18, "dagger": [37, 50, 83, 112], "dai": 103, "dasarathi": 103, "data": [1, 6, 16, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 71, 87, 96, 100, 101, 102, 104, 107, 108, 109, 110, 112, 113], "data_it": 106, "databas": 103, "dataclass": [72, 80], "datafram": 103, "dataload": 106, "datapoint": [6, 48, 49, 50, 51, 52, 53, 104], "dataset": [14, 18, 28, 37, 48, 49, 50, 51, 52, 56, 58, 96, 100, 101, 102, 106, 107, 111, 112], "dataset_s": [56, 58, 110], "date": 103, "deal": [71, 87, 103], "decid": [18, 87, 101, 103, 109], "decis": [26, 28, 68, 70, 85, 104, 113], "decision_funct": [18, 26, 28], "decision_function_shap": 28, "declar": 106, "decod": 112, "decompos": [103, 105, 111, 112], "decomposit": [103, 104], "decreas": [18, 70, 110, 111], "dedic": [15, 18], "deep": [28, 29, 101, 103, 105, 112], "deepcopi": 18, "deeper": 112, "def": [15, 18, 60, 71, 83, 85, 87, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112], "default": [13, 15, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113], "default_precis": 57, "defin": [8, 14, 15, 18, 27, 29, 31, 35, 49, 50, 51, 54, 60, 75, 92, 93, 100, 101, 102, 103, 105, 111, 112, 113], "definit": [18, 48, 50, 53, 56, 58, 64, 83, 85, 101, 106], "delai": 18, "delta": 37, "demonstr": [101, 103, 106, 108, 111, 112, 113], "denois": 112, "denot": [6, 22, 26, 32, 48, 102, 104, 112, 113], "dens": [18, 28, 29, 106, 109], "depend": [9, 13, 15, 16, 18, 22, 23, 31, 32, 33, 87, 90, 92, 93, 94, 97, 98, 99, 101, 105, 111, 112, 113], "deprec": [9, 16, 57, 60], "depth": 105, "deriv": [14, 15, 18, 32, 33, 34, 38, 41, 43, 45, 60, 62, 64, 65, 66, 67, 68, 69, 73, 74, 76, 81, 87, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "derivative_typ": [38, 41, 43, 45], "derivativetyp": [38, 41, 43], "descent": [62, 70, 71, 74, 83, 85], "descr": 103, "describ": [18, 70, 104, 105, 111, 112], "descript": 103, "design": [9, 14, 15, 57, 60, 112, 113], "desir": [14, 90, 106, 108, 113], "despit": [15, 102, 106], "detach": [18, 105, 106], "detail": [13, 15, 16, 18, 22, 23, 28, 31, 32, 33, 60, 62, 64, 65, 66, 67, 68, 69, 73, 74, 76, 77, 81, 82, 84, 85, 86, 88, 100, 105, 106, 109, 110, 111, 113], "detect": [111, 112], "determin": [18, 22, 23, 29, 31, 32, 33, 34, 50, 52, 56, 57, 58, 59, 60, 70, 83, 85, 87, 106, 111, 112, 113], "determinist": [67, 103], "dev": 13, "develop": [13, 14, 15, 18, 26, 27, 106], "deviat": [83, 85], "devic": [15, 18, 85, 112], "df": 103, "diagon": [18, 49, 51, 61], "diagram": [15, 103], "dict": [27, 28, 29, 40, 47, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "dictionari": [18, 27, 55, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 108], "did": 15, "didn": 18, "diederik": 61, "dieter": 84, "diff": 18, "differ": [15, 18, 28, 38, 43, 60, 61, 70, 71, 83, 85, 88, 90, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113], "differenti": [14, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 105, 106, 110, 111], "difficult": [111, 113], "digest": 85, "digit": [18, 106, 111], "dill": [22, 23, 26, 28, 29, 30, 31, 32, 33], "dim": 106, "dimens": [6, 18, 22, 26, 32, 35, 37, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 70, 71, 83, 85, 96, 100, 101, 104, 105, 106, 111, 112], "dimension": [6, 18, 22, 23, 31, 32, 48, 76, 81, 102, 103, 104, 105, 106, 111, 112, 113], "direct": [15, 18, 67, 68, 70, 71, 74, 81, 83, 85, 103, 107, 113], "direct_l": 68, "directli": [15, 16, 18, 57, 59, 60, 71, 77, 101, 104, 105, 106, 108, 110], "directori": [15, 61, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "disc_valu": 105, "discret": 105, "discrimin": [8, 18], "discriminativenetwork": 15, "discriminator_loss": 105, "discriminator_loss_valu": 105, "discriminator_optim": 105, "discuss": [105, 111, 112], "diseas": 113, "disp": [64, 65, 70, 76, 77, 81, 84, 88], "displai": [70, 102, 103, 105, 108, 109, 110, 111, 112], "disregard": [29, 111, 112, 113], "dist": 16, "distanc": [28, 103, 105], "distinguish": 111, "distribut": [15, 18, 22, 23, 27, 31, 37, 39, 42, 44, 46, 50, 52, 56, 58, 90, 102, 103, 104, 110, 113], "distribution_learn": 18, "dive": [13, 110], "divid": [9, 28, 67, 68, 110, 111, 112], "divis": 67, "do": [13, 15, 16, 18, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 57, 60, 71, 87, 93, 95, 97, 98, 99, 101, 102, 103, 104, 106, 109, 110, 111, 112, 113], "doc": [64, 65, 74, 76, 77, 81, 82, 84, 86, 88, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "docstr": 71, "document": [15, 18, 22, 23, 31, 32, 33, 101, 106, 108, 113], "doe": [15, 18, 35, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 90, 101, 103, 106, 109, 112], "doesn": [18, 71, 78, 87], "dog": 111, "doi": [43, 44, 45, 46, 90, 111], "domain": 67, "domain_wal": 112, "domain_wall_circuit": 112, "domain_wall_st": 112, "don": [13, 16, 101, 103, 104, 105, 106], "done": [15, 18, 60, 87, 111, 112], "donor": 103, "dot": [48, 109, 112], "down": [103, 109, 112], "download": 106, "dramat": [15, 18], "drastic": [26, 107], "draw": [35, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113], "drawn": [18, 50, 52], "driven": 18, "dropdown": 103, "dropout": 106, "dropout2d": 106, "dtype": [102, 105], "dual": [18, 107], "duck": 18, "duda": 103, "due": [15, 16, 18, 26, 107, 111, 112, 113], "duplic": [18, 49, 51], "dure": [14, 16, 18, 22, 23, 31, 32, 33, 36, 57, 80, 91, 96, 101, 105, 106, 107, 108, 110, 112], "dynam": [16, 18, 111, 113], "d\u03c9": [38, 41, 43], "e": [13, 16, 18, 22, 23, 27, 28, 29, 31, 32, 33, 38, 43, 49, 50, 51, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 97, 98, 101, 103, 105, 110, 111, 112, 113], "each": [15, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 56, 58, 61, 64, 70, 71, 81, 83, 85, 88, 90, 94, 95, 97, 98, 99, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113], "earli": [26, 107], "earlier": [103, 109], "earthquak": 113, "eas": [102, 111], "easier": [104, 109, 112], "easili": [14, 18, 90, 103, 104, 111, 113], "ecosystem": 14, "eda": 90, "edaspi": 90, "edg": [14, 104, 113], "edgecolor": [102, 104, 106, 107, 108, 109], "edit": 13, "edu": [18, 85, 107], "educ": 103, "effect": [18, 28, 29, 56, 58, 103, 104, 111, 112, 113], "effective_dim": [56, 58], "effectivedimens": [18, 58, 110], "effici": [13, 18, 67, 85, 105, 112, 113], "efficientsu2": [103, 105], "eigensolv": 85, "eigenst": 55, "eight": 111, "einstein": 18, "either": [13, 15, 18, 22, 23, 31, 34, 38, 41, 43, 62, 71, 75, 83, 85, 101, 109, 111, 112, 113], "elaps": [103, 105, 112], "electron": 112, "element": [18, 22, 26, 32, 38, 41, 43, 45, 49, 51, 57, 59, 60, 70, 85, 97, 98, 103], "elif": 111, "elit": 90, "elite_factor": 90, "els": [18, 71, 87, 102, 106], "emb": [15, 106], "embed": [90, 103], "emphas": 18, "emphasi": [28, 29], "emploi": [41, 42, 73, 102, 104, 105, 109, 113], "empti": [18, 27, 36, 78, 102, 109, 110, 112], "emul": [18, 50], "en": [66, 67, 68, 69, 71, 73, 87, 112], "enabl": [13, 18, 101, 105, 106, 113], "enable_metadata_rout": [28, 29], "encapsul": [28, 29], "encod": [18, 22, 23, 25, 31, 32, 95, 102, 103, 107, 108, 109, 111, 112, 113], "encount": 18, "encourag": [101, 106], "end": [18, 37, 71, 83, 85, 87, 103, 105, 113], "energi": [38, 43, 64, 75, 90], "enforc": [18, 50, 110], "enforce_psd": [18, 48, 49, 50, 51, 52, 53], "engin": 106, "enhanc": [18, 37, 50, 93, 104], "enough": [70, 103, 105, 110], "ensur": [16, 18, 34, 83, 85, 94, 101, 103, 104, 107, 110], "entangl": [103, 104, 106], "enter": [18, 27], "entri": [18, 22, 23, 31, 49, 51, 52, 101, 108, 113], "entropi": [95, 105, 106], "entropy_valu": 105, "enumer": [54, 106], "environ": [13, 18, 103], "eol": 18, "ep": [15, 18, 61, 64, 74, 84, 88, 102, 106], "epoch": [62, 105, 106], "epsilon": [45, 46, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "eq": 106, "equal": [18, 27, 32, 50, 52, 73, 84, 102, 107, 108, 111, 113], "equat": [64, 105], "equival": [18, 100, 112], "error": [18, 19, 26, 28, 29, 33, 36, 71, 76, 81, 87, 94, 97, 98, 100, 102, 106, 110], "escap": 73, "especi": [76, 103, 109], "essenti": [0, 16, 18], "estim": [14, 15, 16, 18, 26, 28, 29, 31, 33, 38, 41, 43, 45, 57, 60, 61, 70, 74, 77, 83, 85, 90, 93, 101, 102, 106, 107, 110, 111, 113], "estimate_stddev": [83, 85], "estimator_classifi": [102, 110], "estimator_gradi": 16, "estimator_qnn": [15, 16, 101, 102, 110], "estimator_qnn2": 101, "estimator_qnn_forward": 101, "estimator_qnn_forward2": 101, "estimator_qnn_forward_batch": 101, "estimator_qnn_input": 101, "estimator_qnn_input_grad": 101, "estimator_qnn_input_grad2": 101, "estimator_qnn_weight": 101, "estimator_qnn_weight_grad": 101, "estimator_qnn_weight_grad2": 101, "estimatorgradi": [38, 40], "estimatorqnn": [14, 16, 18, 33, 110, 111], "estimatorqnn1": 101, "estimatorqnn2": 101, "estimatorv1": 18, "estimatorv2": [16, 18, 101], "et": [26, 27, 41, 42, 56, 58, 83, 85, 103, 105, 107, 110, 111, 113], "eta": 62, "eta_n": 71, "etc": [18, 21, 101], "eugen": 103, "eval": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 106], "eval_fun": 89, "eval_jac": [71, 87, 89], "evalaut": 108, "evalu": [6, 15, 18, 26, 28, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 112, 113], "evaluate_dupl": [18, 49, 51], "evaluated_gradi": [71, 87], "even": [18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 49, 51, 73, 103, 111, 112], "everi": [18, 56, 58, 61, 74, 82, 111], "everyth": [15, 18], "evid": [18, 27, 111, 113], "evolut": [66, 73, 105], "evolutionari": [69, 90], "evolv": [66, 108], "exact": [18, 28, 50, 52, 83, 85, 105, 113], "exactli": [27, 103, 112], "examin": 103, "exampl": [8, 13, 15, 16, 18, 26, 27, 28, 29, 34, 35, 54, 57, 60, 62, 71, 75, 83, 85, 87, 90, 102, 103, 104, 105, 106, 107, 111], "exce": [16, 102], "except": [15, 18, 19, 29, 32, 74, 82, 91, 103], "exclud": 112, "execut": [15, 18, 27, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 83, 85, 92, 93, 94, 103, 105, 113], "exhibit": 54, "exist": [15, 18, 28, 29, 55, 61, 79], "exp": [37, 111], "exp_val": 18, "expect": [14, 15, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 38, 40, 41, 43, 45, 57, 60, 83, 95, 97, 98, 99, 101, 102, 103, 107, 110, 111], "experi": [90, 106], "expert": [14, 27], "explain": [16, 18, 101, 103, 106, 110, 112], "explan": 106, "explicit": 71, "explicitli": [15, 18, 57, 60, 101, 102, 106, 108], "explor": [102, 103, 104], "expon": [83, 85], "exponenti": 101, "expos": [15, 18, 101, 103], "express": [18, 110], "extend": [6, 13, 15, 18, 22, 23, 28, 29, 74, 101, 113], "extens": [14, 102, 104, 109], "extent": [104, 108], "extract": [15, 18, 22, 26, 32, 56, 58, 104, 111, 112], "f": [6, 18, 48, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112], "f_loss": 106, "face": [104, 113], "facecolor": [102, 104, 106, 107, 108, 109], "facial": 112, "facil": 14, "facilit": [13, 14, 15, 105, 113], "fact": 76, "factor": [18, 61, 88], "factori": 71, "fail": [18, 71, 87, 104], "fair": 103, "fake": 105, "fake_loss": 105, "fake_provid": 16, "fall": 104, "fallback": 18, "fals": [18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 36, 37, 50, 57, 59, 60, 61, 64, 65, 70, 71, 76, 77, 81, 83, 84, 85, 87, 88, 93, 104, 105, 106, 107, 108, 109, 110, 112, 113], "famili": [66, 83, 87, 90], "familiar": [71, 87], "famou": [103, 106], "far": [72, 80, 105], "farrokh": 111, "fashion": [18, 110], "faster": [18, 71, 82, 103, 107, 113], "favor": 18, "fc": 111, "fc1": 106, "fc2": 106, "fc3": 106, "featur": [6, 13, 15, 16, 22, 26, 28, 29, 32, 33, 34, 35, 37, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 85, 93, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112], "feature_dim": 35, "feature_dimens": [18, 35, 57, 60, 103, 104, 107, 110], "feature_map": [15, 16, 18, 32, 33, 34, 48, 49, 50, 51, 52, 53, 54, 57, 60, 102, 103, 104, 106, 107, 108, 110, 111], "feature_nam": 103, "feature_rang": 107, "feedback": 111, "few": [15, 18, 67, 103, 112], "fewer": [85, 103], "fidel": [15, 16, 18, 49, 50, 51, 52, 83, 92, 93, 94, 104, 107, 108, 112], "fidelityquantumkernel": [14, 15, 16, 18, 26, 28, 29, 51, 104, 107], "fidelitystatevectorkernel": [18, 52], "field": [18, 38, 39, 41, 42, 43, 44, 45, 46, 51, 52, 93, 101, 103, 108], "fig": [104, 105, 106, 108, 111, 112], "figsiz": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "figur": [101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112], "file": [15, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 61, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "file_nam": [22, 23, 26, 28, 29, 30, 31, 32, 33], "filter": 106, "final": [14, 15, 18, 65, 70, 74, 79, 82, 90, 105, 107, 108, 109, 110, 111, 112], "financi": 105, "find": [6, 9, 13, 18, 48, 51, 52, 71, 76, 85, 101, 103, 104, 110], "fine": [51, 52], "finish": [71, 109], "finit": [18, 38, 43, 61, 71, 83, 85, 88, 104], "first": [13, 18, 23, 27, 31, 33, 37, 76, 81, 83, 85, 87, 92, 93, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113], "firstli": 103, "fisher": [18, 56, 58, 83, 103, 110], "fisher_trac": [56, 58], "fit": [15, 18, 22, 23, 26, 28, 29, 31, 32, 33, 54, 73, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112], "fit_predict": 104, "fit_result": [18, 22, 23, 31, 32, 33], "fit_transform": [102, 103, 104, 107, 109, 110], "fix": [15, 16, 51, 52, 53, 83, 85, 101, 103, 105, 109, 110, 112], "flag": [18, 22, 23, 26, 31, 32, 33, 101], "flat": 103, "flatten": 106, "flavor": 103, "fletcher": 74, "flexibl": [14, 15, 18, 103, 112], "float": [18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 47, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 105], "float64": [28, 29, 74, 82, 108], "flower": 103, "fm": [18, 102, 106, 108, 112], "fm0": 108, "fm1": 108, "fmap": 18, "fmin_l_bfgs_b": [74, 82], "focu": 15, "focus": [13, 15, 16, 104, 110, 113], "fold": [103, 113], "folder": 13, "follow": [13, 15, 18, 26, 56, 57, 58, 60, 71, 75, 93, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113], "font": 108, "forc": [28, 29], "forget": [16, 101], "form": [15, 18, 27, 28, 29, 74, 103, 104, 111, 112], "formal": 104, "format": [15, 18, 32, 37, 60, 78, 83, 87, 101, 102, 106, 110, 113], "format_r": [27, 113], "former": [103, 104, 111], "formula": [110, 113], "forward": [18, 24, 36, 56, 57, 58, 59, 60, 71, 102, 105, 106, 110, 112], "found": [15, 16, 18, 22, 27, 32, 49, 51, 71, 87, 90, 100, 103, 104, 108, 110, 111], "four": [16, 18, 101, 103, 111], "frac": [18, 29, 83, 85, 93, 111, 112, 113], "framework": [0, 3, 14, 15, 18, 77, 103, 113], "free": [66, 67, 68, 69, 73, 103], "frequenc": [22, 74, 82], "frequent": 103, "friendli": 14, "from": [6, 9, 13, 15, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 48, 50, 52, 54, 55, 56, 57, 58, 60, 64, 70, 71, 79, 83, 85, 87, 88, 90, 92, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "from_list": [15, 16, 101, 111], "ftol": [74, 82, 84, 88], "fujii": [62, 77], "full": [16, 18, 62, 87, 103, 109, 110, 112], "fulli": [15, 18, 37, 49, 51, 111], "fun": [18, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 112], "func": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "function": [5, 6, 9, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 38, 43, 48, 49, 50, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 102, 103, 108, 109, 110, 111], "function_wrapp": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "functool": 18, "fundament": [14, 15, 104, 113], "further": [16, 18, 28, 62, 64, 65, 66, 67, 68, 69, 73, 74, 76, 81, 82, 84, 85, 86, 88, 93, 100, 104, 105, 109, 111, 112], "furthermor": [8, 61, 103], "futur": [14, 15, 18, 111], "g": [18, 22, 23, 28, 29, 31, 32, 33, 38, 43, 49, 51, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 102, 103, 105, 106, 109], "g_": 105, "gacon": 83, "gambetta": [37, 50, 93], "gamma": [83, 85, 111], "gap": [37, 104, 108], "gate": [18, 51, 52, 62, 101, 103, 105, 111, 112, 113], "gaussian": [18, 70], "gb": 15, "gecco": 90, "gellmann": 111, "gen_dist": 105, "gen_prob_grid": 105, "gener": [6, 8, 14, 15, 18, 26, 27, 29, 32, 37, 48, 60, 61, 64, 65, 70, 71, 72, 76, 77, 81, 82, 83, 84, 85, 86, 88, 90, 91, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113], "generate_dataset": 111, "generate_preset_pass_manag": 16, "generated_prob": 105, "generativenetwork": 15, "generator_loss": 105, "generator_loss_valu": 105, "generator_optim": 105, "generatorexit": 91, "genericbackendv2": 16, "genet": 90, "geometr": 83, "geometri": 110, "get": [14, 15, 18, 28, 29, 71, 72, 82, 83, 85, 87, 90, 102, 103, 104, 106, 109, 110, 112], "get_backend": 15, "get_callback_data": 108, "get_count": 16, "get_dataset_digit": 112, "get_effective_dimens": [56, 58, 110], "get_fidel": 83, "get_fisher_inform": [56, 58], "get_metadata_rout": [28, 29], "get_nlopt_optim": [66, 67, 68, 69, 73], "get_normalized_fish": [56, 58], "get_param": [28, 29], "get_support_level": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "get_unbound_training_paramet": 18, "get_unbound_user_paramet": 18, "git": 13, "github": [9, 13, 16, 18, 90, 103], "give": [13, 103, 112], "given": [5, 6, 9, 10, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 100, 102, 104, 105, 106, 110, 111, 112, 113], "global": [13, 16, 18, 56, 58, 66, 67, 68, 69, 73, 93, 104], "global_": 110, "global_eff_dim_0": 110, "global_eff_dim_1": 110, "go": [18, 22, 23, 31, 32, 33, 102, 103, 105, 106, 109, 110], "goal": [15, 74, 84, 88, 104, 105, 110, 112], "goe": 113, "gogolin": [43, 44, 62], "goldfarb": 74, "good": [15, 51, 52, 90, 102, 103, 106, 110], "gov": 103, "gpu": 18, "grad": [18, 56, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "grad_f": 71, "grad_fn": 106, "gradient": [14, 15, 16, 18, 20, 21, 24, 25, 26, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 98, 99, 102, 103, 105, 106, 107, 109, 110, 111, 112], "gradient_approxim": 70, "gradient_funct": 18, "gradient_num_diff": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "gradient_support_level": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "gradientdesc": [72, 87, 91], "gradientdescentst": 91, "grai": 106, "graph": [102, 104, 113], "graphic": [104, 113], "greater": [112, 113], "greatest": 111, "green": [104, 109], "grid": [37, 103, 105, 107], "grid_el": 105, "grid_i": 107, "grid_shap": 105, "grid_step": 107, "grid_x": 107, "ground": [83, 85, 102], "group": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 108], "grover": [27, 113], "gt": [101, 102, 103, 106, 108, 109], "gtol": [64, 88], "guang": [27, 113], "guarante": [18, 65, 73], "guess": [64, 83, 85], "guid": [13, 14, 18, 28, 29, 108, 113], "guidelin": 60, "guzik": 112, "h": [16, 37, 41, 42, 43, 44, 101, 104, 105, 112], "h2": 90, "h2_op": 90, "ha": [13, 15, 16, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 51, 52, 57, 60, 70, 71, 73, 82, 83, 85, 87, 90, 91, 101, 103, 104, 106, 107, 109, 111, 112, 113], "had": [18, 102, 103, 104], "had_transpil": 18, "hamiltonian": 90, "hand": [104, 110, 111], "handl": [15, 18, 59, 71, 74, 83, 84, 87, 103], "handwritten": [106, 111, 112], "hao": [27, 113], "happen": [105, 110], "har": 113, "hard": [18, 112, 113], "hardwar": [15, 18, 41, 42, 43, 44, 62, 82, 85, 101, 105, 106, 109, 113], "harrow": [37, 50, 93], "harsh": [26, 28], "hart": 103, "hartre": 14, "hat": 93, "have": [13, 15, 16, 18, 26, 27, 28, 29, 57, 60, 71, 77, 87, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "havl\u00ed\u010dek": [37, 50, 93], "hear": 113, "heavier": 90, "heavili": 109, "help": [26, 82, 103, 104, 107, 110], "henc": [104, 105, 111], "here": [6, 9, 13, 15, 22, 26, 32, 48, 49, 50, 57, 60, 85, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113], "hermitian": 112, "hesit": 16, "hessian": [74, 83, 85], "hessian_delai": [83, 85], "heurist": [66, 73, 76], "hi": [71, 87], "hidden": 101, "hierarchi": [15, 18], "high": [14, 15, 18, 103, 104, 108, 112, 113], "higher": [6, 16, 18, 28, 29, 38, 39, 41, 42, 43, 44, 45, 46, 48, 92, 93, 103, 104, 105, 110, 113], "highli": 15, "highlight": 109, "hilbert": [104, 111, 112], "histori": [18, 103, 106], "hoc": [18, 104, 108], "hold": [78, 87, 108], "home": [18, 107], "homebrew": 13, "hookbas": 18, "hope": 103, "hopkin": 85, "hor_arrai": 111, "horizont": 111, "hot": [18, 22, 23, 25, 31, 32, 37, 95, 102, 109], "hous": 113, "how": [13, 15, 18, 22, 23, 28, 29, 31, 32, 33, 49, 51, 71, 83, 85, 87, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112], "howev": [13, 16, 18, 26, 76, 90, 101, 102, 106, 107, 108, 111, 112, 113], "hspace": 111, "html": [64, 65, 71, 74, 76, 77, 81, 82, 84, 86, 87, 88, 106], "http": [9, 13, 15, 18, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 81, 82, 84, 86, 87, 88, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "hubbard": 112, "hue": 103, "huge": 112, "human": [34, 35, 101], "hybrid": [18, 77, 105], "hyper": [67, 100, 107], "hyperparamet": [103, 107], "hyperplan": [28, 104], "hypothes": 113, "i": [0, 6, 8, 9, 13, 14, 15, 16, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113], "ibm": [14, 15, 16, 18, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "id": 18, "idea": [104, 109, 112, 113], "ideal": 84, "ident": [18, 49, 51, 60, 83, 85, 104, 112], "identifi": [18, 74], "identity_interpret": 112, "idx": 106, "ieee": [45, 46, 85, 103], "ignor": [18, 28, 29, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 111], "ii": 103, "ij": [104, 111], "illustr": [15, 18, 102, 103, 104, 106, 108, 113], "im": [38, 41, 43], "imag": [38, 41, 43, 89, 106, 111, 112], "imagin": 113, "imaginari": [38, 41, 43, 45], "imfil": 9, "immedi": 103, "impact": 106, "implement": [14, 18, 22, 23, 26, 27, 31, 32, 33, 35, 37, 49, 50, 51, 57, 59, 60, 70, 84, 85, 88, 90, 92, 93, 103, 104, 107, 110, 111, 112], "impli": 111, "implic": 113, "implicit": 110, "implicitli": [60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 104], "import": [9, 15, 16, 18, 34, 35, 57, 60, 71, 83, 85, 87, 90, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113], "improv": [18, 26, 61, 64, 73, 83, 85, 93, 101, 107, 113], "imshow": [104, 106, 108, 111, 112], "inact": 110, "includ": [9, 14, 16, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 73, 74, 82, 85, 101, 106, 112, 113], "include_sample_tot": [37, 104, 108], "incompat": [18, 22, 23, 26, 31, 32, 33], "incorpor": [16, 18, 34, 106, 110], "incorrect": 18, "incorrectli": 109, "increas": [18, 62, 83, 85, 90, 93, 102, 103, 112, 113], "increasingli": 67, "inde": [111, 112], "independ": [18, 101, 107], "index": [13, 22, 23, 31, 101, 112], "indic": [18, 26, 32, 56, 58, 60, 71, 85, 87, 106, 110, 113], "indicatingthat": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "individu": [18, 22, 23, 31, 80, 90, 95, 97, 98, 99], "induc": [26, 107], "inequ": [73, 84], "inf": 70, "infer": [18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 49, 51, 87, 101, 106, 109], "infinit": 84, "inflex": 15, "influenc": [29, 101, 113], "info": 106, "inform": [13, 15, 18, 22, 23, 28, 29, 31, 32, 33, 40, 47, 54, 56, 58, 61, 62, 71, 72, 76, 80, 83, 85, 87, 88, 90, 94, 101, 103, 104, 108, 110, 111, 112, 113], "informationpython": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "informationqiskit": 15, "informationsoftwareversionqiskit1": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "inher": [110, 113], "inherit": [15, 18, 28, 29, 50, 52, 101], "initi": [15, 18, 22, 23, 31, 32, 33, 35, 36, 54, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 103, 104, 106, 108, 109, 110, 111, 112, 113], "initial_hessian": [83, 85], "initial_point": [15, 18, 22, 23, 31, 32, 33, 54, 70, 71, 83, 85, 87, 103, 108, 109, 110, 111, 112], "initial_point_support_level": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "initial_step_s": 70, "initial_weight": [36, 105, 106], "inject": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "inlier": 29, "inner": [6, 48, 49, 50, 51, 52, 53, 104], "innov": 14, "inplac": [15, 18, 57, 60, 105, 106, 111, 112], "input": [6, 15, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 48, 54, 56, 57, 58, 59, 60, 83, 92, 94, 95, 97, 98, 99, 102, 104, 105, 106, 108, 109, 110, 111, 112], "input1": 101, "input_data": [18, 36, 57, 59, 60], "input_gradi": [18, 36, 57, 59, 60, 101, 106], "input_param": [15, 16, 18, 54, 57, 60, 101, 105, 106, 111, 112], "input_paramet": [18, 34, 57, 60], "input_s": 105, "input_sampl": [56, 58, 110], "inputs2": 101, "insert": 112, "insid": [28, 29, 87, 91, 103, 105], "insight": 110, "inspect": [13, 18], "inspir": [90, 101], "instal": [9, 66, 67, 68, 69, 73], "instanc": [15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 49, 51, 54, 57, 60, 78, 87, 92, 93, 101, 102, 103, 104, 108, 109, 110, 113], "instanti": [18, 32, 50, 52, 107, 108], "instead": [13, 15, 16, 18, 28, 29, 57, 60, 83, 85, 87, 90, 93, 102, 104, 110, 111], "instruct": [13, 16, 18, 35, 87], "int": [18, 26, 27, 32, 33, 34, 35, 37, 45, 46, 47, 49, 50, 52, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 105, 112], "integ": [18, 22, 32, 34, 56, 58, 60, 70, 83, 85, 101, 111], "integr": [16, 27, 36, 101, 106, 113], "intellig": 103, "intend": [51, 52], "interact": 112, "interconnect": 101, "interdepend": 113, "interest": [102, 103, 112], "interfac": [14, 15, 18, 22, 23, 31, 48, 49, 50, 71, 75, 87, 92, 101, 107], "interfer": 113, "intermedi": [18, 22, 23, 31, 32, 33, 111], "intern": [18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 96], "interplai": 105, "interpol": [104, 108], "interpret": [15, 16, 18, 22, 32, 57, 59, 60, 83, 85, 102, 106, 110, 112], "intersect": 101, "intertwin": 103, "interv": [70, 103, 106], "introduc": [14, 15, 16, 18, 28, 29, 49, 51, 101, 103, 104, 105, 106, 107, 110, 112], "introduct": [18, 90, 110], "intuit": 110, "invalid": [22, 23, 31, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 57, 59, 60], "invari": 61, "invers": [26, 83, 85, 107, 112], "invest": 109, "investig": 104, "invok": [18, 22, 23, 31, 32, 33], "involv": [85, 111, 112, 113], "io": [66, 67, 68, 69, 71, 73, 87, 103], "iprint": [74, 82], "ipynb": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "ipython": [102, 103, 105, 109, 110, 111, 112], "iri": [18, 103], "iris_data": 103, "irrelev": 113, "is_bounds_ignor": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "is_bounds_requir": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "is_bounds_support": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "is_gradient_ignor": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "is_gradient_requir": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "is_gradient_support": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "is_initial_point_ignor": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "is_initial_point_requir": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "is_initial_point_support": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "is_measur": 15, "isa": [16, 18], "isa_observ": 16, "isa_qc": 16, "isaac": 27, "isbn": 103, "issu": [9, 15, 16], "ist": 15, "iswap": [41, 42], "item": [101, 105, 106, 113], "iter": [15, 18, 22, 23, 26, 31, 32, 33, 51, 52, 61, 62, 64, 70, 71, 74, 76, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112], "its": [13, 16, 18, 28, 29, 34, 50, 56, 58, 71, 87, 101, 103, 104, 108, 112, 113], "itself": [18, 83], "iv": 85, "izaac": [43, 44, 62], "j": [27, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 61, 83, 85, 93, 100, 105, 111, 112, 113], "jac": [18, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90], "jacobian": [56, 58, 63, 72, 80, 84, 88, 89], "jhuapl": 85, "jimmi": 61, "jm": 37, "job": [18, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 85, 92, 93, 94, 103], "john": [85, 103, 113], "joint": [18, 27, 113], "jointli": 106, "jonathan": 112, "josh": 62, "json": [78, 87, 111, 112], "juli": [90, 103], "jun": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "jupyt": 15, "just": [18, 85, 102, 104, 106], "justifi": 113, "k": [6, 37, 48, 49, 50, 62, 74, 77, 82, 83, 85, 93, 104, 105, 108, 112], "k_": [51, 52, 100, 104], "k_\u03b8": 100, "kale": 61, "kandala": [37, 50, 85, 93], "keep": [15, 18, 29, 101, 104, 110, 112], "keepdim": 106, "kei": [18, 27, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 103, 106, 110, 113], "kept": 15, "kernel": [0, 16, 18, 22, 26, 28, 29, 32, 35, 48, 49, 50, 51, 52, 53, 54, 55, 96, 100, 107, 111], "kernel_pca_q": 104, "kernel_pca_rbf": 104, "kernel_s": 106, "kernelloss": [18, 54, 100, 108], "kernelpca": 104, "keyword": [18, 28, 29, 100, 101], "killoran": [43, 44, 62], "kind": 102, "kingma": [61, 105], "kit": 14, "kitagawa": 62, "know": [104, 106, 113], "knowledg": [14, 71, 87], "known": [65, 76, 103, 104, 112], "kpca": 104, "kraft": 84, "kumar": 61, "kwarg": [28, 29, 36, 53, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 100], "l": [18, 27, 67, 68, 74, 105, 106, 111, 112], "l1": [18, 22, 23, 31, 97], "l2": [18, 22, 23, 31, 98], "l2loss": 102, "l_bfgs_b": [15, 18, 82, 102, 103], "label": [15, 18, 22, 26, 28, 29, 32, 37, 54, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "label_train": [26, 28, 29], "labels_test": 108, "lagrang": 100, "lambda": [60, 101, 102, 106, 111], "landscap": 5, "langl": [6, 37, 48, 49, 50, 51, 52, 83, 92, 93, 104], "languag": 85, "larg": [18, 26, 84, 85, 105, 107, 109, 110, 111, 112], "larger": [6, 26, 32, 33, 48, 62, 103, 107, 112], "larra\u00f1aga": 90, "last": [18, 27, 72, 74, 82, 83, 85, 91, 107, 111, 112], "last_avg": 85, "last_valu": 85, "latent": [18, 112], "later": [57, 60, 101, 104, 106, 110, 112], "latest": [13, 16, 18, 34, 66, 67, 68, 69, 73], "latter": [28, 29, 103, 104], "launch": 16, "layer": [18, 54, 90, 101, 103, 106, 108, 112], "layout": [16, 101], "lb": [15, 18, 102, 106], "lbfg": 106, "lbfgsb": 74, "lcu": 16, "ldot": 105, "lead": [18, 83, 103, 111, 112, 113], "leaky_relu": 105, "leakyrelu": 105, "lean": [16, 18], "leap": 103, "learn": [3, 4, 6, 9, 11, 12, 13, 18, 19, 22, 23, 28, 29, 31, 37, 48, 50, 51, 52, 57, 60, 61, 62, 71, 72, 83, 85, 91, 93, 100, 102, 105, 106, 107, 110, 111, 112], "learner": 15, "learning0": 15, "learning_r": [71, 72, 83, 85, 91, 108], "learningr": [72, 91], "least": [18, 27, 32, 33, 34, 84, 113], "leav": [106, 112], "led": 18, "left": [37, 97, 104, 105, 107, 108, 109, 111, 113], "leftrightarrow": 113, "legaci": 18, "legend": [104, 105, 107, 108, 109, 110], "len": [18, 85, 102, 103, 105, 106, 108, 109, 110, 111, 112], "length": [28, 29, 62, 70, 71, 96, 100, 101, 103, 108, 111, 112], "leq": [74, 85, 105], "less": [64, 71, 102, 112], "let": [83, 87, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112], "level": [14, 15, 18, 38, 43, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 110], "leverag": [14, 15, 18, 93, 102, 104, 106, 110, 113], "li": 113, "librari": [9, 14, 15, 18, 34, 35, 57, 60, 66, 67, 68, 69, 71, 73, 83, 85, 87, 90, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "licens": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "lie": 101, "life": 103, "light": 113, "lighter": 18, "like": [0, 15, 18, 25, 26, 28, 29, 31, 32, 38, 43, 57, 59, 60, 72, 74, 80, 102, 103, 104, 105, 109, 110, 111, 112, 113], "likelihood": [106, 113], "limit": [18, 27, 50, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 113], "limits_": 105, "linalg": [71, 85, 87], "line": [70, 74, 82, 102, 106, 111], "linear": [18, 28, 29, 41, 42, 64, 65, 74, 104, 105, 106], "linear20": 105, "linear_input": 105, "linear_model": 104, "linearli": [26, 73, 103, 104, 107], "linewidth": [102, 105, 106, 109], "link": [27, 106], "linspac": [102, 105, 106, 109], "lint": 13, "linux": 13, "list": [18, 28, 29, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 101, 108, 111], "literatur": 103, "littl": [61, 106], "live": [102, 109, 110], "ll": [15, 101, 103, 106, 109, 111, 112], "load": [18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 35, 61, 101, 103, 106, 111, 112], "load_dir": 61, "load_iri": 103, "load_param": 61, "load_state_dict": [106, 109], "loaded_classifi": 109, "loaded_model": 109, "loc": [104, 105, 107, 108, 109], "local": [13, 18, 58, 66, 67, 68, 73, 82, 85, 93, 101, 102, 109, 112], "local_ed_train": 110, "local_ed_untrain": 110, "local_eff_dim_train": 110, "local_eff_dim_untrain": 110, "localeffectivedimens": [18, 110], "log": [28, 95, 105, 106], "log2": [35, 105], "logic": [9, 87, 110], "logist": 104, "logistic_regress": 104, "logistic_scor": 104, "logisticregress": 104, "long": [18, 27, 34, 61, 102, 103, 106, 111, 112], "longer": [15, 16, 18, 50], "look": [101, 102, 103, 104, 105, 109, 110, 111, 112, 113], "loop": [71, 81, 87, 106, 111], "loss": [15, 18, 20, 21, 22, 23, 24, 25, 31, 32, 33, 54, 83, 85, 95, 96, 97, 98, 100, 101, 102, 108, 111], "loss_func": [54, 106], "loss_funct": 18, "loss_list": 106, "low": [27, 102, 113], "lower": [15, 18, 38, 39, 41, 42, 43, 44, 45, 46, 61, 65, 70, 88, 92, 93, 104, 108, 110], "lowercas": 18, "lpha": 90, "lr": [61, 105, 106], "ls_optim": 70, "lse": [83, 85], "lse_solv": [83, 85], "lt": [101, 102, 103, 106, 108, 109], "lucchi": 105, "luck": 106, "lukin": 111, "m": [6, 18, 26, 37, 43, 44, 48, 49, 50, 51, 52, 53, 62, 77, 93, 96, 100, 104, 111, 112, 113], "m_": [22, 26, 32], "m_sampl": [22, 26, 32], "machin": [3, 4, 6, 9, 11, 12, 13, 18, 19, 48, 51, 52, 57, 60, 82, 102, 106, 107, 110, 111, 112], "machine_precis": 88, "maco": 13, "made": [13, 18], "magenta": 105, "magnet": 85, "magnitud": [83, 85], "mai": [8, 13, 15, 16, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 49, 50, 51, 52, 53, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 96, 103, 104, 105, 109, 110, 111, 112], "main": [15, 81, 85, 90, 104, 110], "maintain": [14, 18], "mainten": 18, "major": 18, "make": [15, 18, 67, 71, 87, 102, 103, 104, 105, 106, 111, 112, 113], "make_blob": [15, 18, 107], "make_classif": [102, 110], "manag": [13, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 57, 60, 93, 101, 102, 105, 106, 108, 109, 110, 111, 112], "mani": [6, 18, 48, 76, 85, 96, 103, 104, 110], "manipul": 113, "manner": [101, 106, 111], "manual": [13, 15, 60, 71, 87, 103, 105, 109, 110], "manual_se": [105, 106], "map": [6, 14, 15, 18, 26, 27, 28, 29, 32, 33, 34, 37, 48, 49, 50, 51, 52, 53, 54, 57, 60, 94, 101, 102, 103, 104, 105, 106, 110, 111, 112], "mar": 37, "margin": [27, 90, 100, 107, 108], "mari": 113, "maria": 62, "mark": 18, "marker": [104, 107, 108, 109], "marshal": 103, "master": 18, "match": [18, 27, 60, 95, 97, 98, 99, 106], "math": [112, 113], "mathcal": 83, "mathemat": [84, 103, 104], "mathrm": [37, 38, 41, 43], "mathscr": 105, "matplotlib": [37, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "matric": [6, 14, 28, 29, 64, 70, 104, 111], "matrix": [6, 15, 18, 22, 23, 26, 28, 29, 31, 32, 33, 48, 49, 50, 51, 52, 53, 56, 58, 74, 83, 85, 96, 100, 108, 110, 111, 113], "matrix_test": 104, "matrix_train": 104, "matter": [18, 110], "matur": 103, "max": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 104, 109, 111, 112], "max_circuits_per_job": [18, 49], "max_ev": [66, 67, 68, 69, 70, 73], "max_evals_group": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "max_failed_rejection_sampl": 70, "max_pool2d": 106, "max_process": 82, "maxfev": [76, 77, 81], "maxfun": [74, 82], "maxim": [83, 85, 100, 112], "maximum": [27, 49, 50, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 81, 82, 83, 84, 85, 88, 90, 103, 107, 108], "maxit": [15, 18, 61, 62, 64, 65, 70, 71, 74, 76, 77, 81, 83, 84, 85, 87, 88, 90, 102, 103, 108, 109, 110, 111, 112], "maxpool2d": 106, "mayobtain": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "mcry": 113, "mea": 16, "mead": 76, "mean": [13, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 74, 82, 83, 85, 102, 103, 105, 106, 111, 112, 113], "meaningless": 28, "meant": 101, "measue_al": 16, "measur": [16, 18, 27, 32, 33, 50, 60, 85, 101, 102, 103, 105, 108, 110, 111, 112, 113], "measure_al": 16, "mechan": [14, 28, 29, 101, 103], "meet": 113, "member": 18, "memori": [18, 61, 74, 82, 103], "mention": [15, 102, 103, 109], "merg": [16, 18], "mesh": [104, 107], "mesh_i": 105, "mesh_x": 105, "meshgrid": [104, 105, 107], "meshgrid_color": 107, "meshgrid_featur": 107, "messag": [18, 19, 64, 65, 70, 76, 81, 84, 88], "met": 62, "meta": [28, 29], "metadata": [28, 29, 40, 47, 94], "metadata_rout": [28, 29], "metadatarequest": [28, 29], "method": [9, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113], "metric": [26, 28, 104, 105, 108, 110], "michael": 103, "middl": 112, "might": [15, 18, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 90, 93, 94, 101, 110], "migrat": [14, 18], "min": [82, 103, 104, 109], "min_gradient_norm": 70, "min_step_s": 70, "mind": [16, 101, 110], "minim": [18, 22, 23, 31, 32, 33, 54, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 100, 102, 103, 111, 112], "minima": 67, "minimum": [18, 55, 70, 71, 74, 76, 77, 82, 85, 90, 107], "minmaxscal": [102, 103, 107, 109, 110], "minor": 109, "mirror": 18, "misclassifi": 109, "mismatch": [18, 34, 48, 49, 50, 51, 52, 70], "miss": 103, "missingoptionallibraryerror": [66, 67, 68, 69, 73], "mistaken": 18, "mitarai": 62, "mitig": 94, "mix": 18, "mixin": 18, "ml": [0, 18, 31, 35, 103], "mlc": 103, "mode": [13, 16, 106], "model": [0, 14, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 36, 50, 56, 58, 83, 85, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 110, 112, 113], "model1": 106, "model2": 106, "model3": 106, "model4": 106, "model5": 106, "model_output": [56, 58], "model_select": [103, 107, 109, 111], "modelspac": [83, 85], "modern": 103, "modif": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "modifi": [15, 18, 54, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "modul": [16, 18, 19, 36, 75, 101, 105, 106, 113], "molecul": [85, 90, 112], "moment": 61, "momentum": [62, 105], "monitor": [105, 110], "monoton": 28, "mont": [56, 58, 83, 110], "month": 18, "more": [13, 15, 16, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 54, 60, 67, 71, 87, 90, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113], "most": [13, 18, 22, 27, 32, 85, 103, 106, 110, 113], "mostli": 104, "motiv": 101, "move": [18, 103], "mpl": [101, 102, 103, 105, 106, 110, 111, 112, 113], "mse": 106, "mseloss": 106, "mselossbackward0": 106, "much": [6, 18, 48, 71, 83, 85, 90, 111, 112, 113], "multi": [18, 22, 26, 28, 32, 102], "multiclass": [18, 21], "multiclassobjectivefunct": 18, "multidimension": [23, 31, 76], "multinomi": 105, "multioutput": 29, "multioutputregressor": 29, "multipl": [18, 82, 85, 103, 106, 109, 113], "multipli": [70, 83, 85, 100], "multivari": 105, "multivariate_norm": 105, "must": [15, 16, 18, 22, 26, 27, 32, 34, 36, 37, 57, 58, 60, 62, 64, 83, 85, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "mutat": [34, 35, 66, 73], "mutual": 104, "mxd": [48, 49, 50, 51, 52, 53], "my": 90, "my_optim": 18, "n": [6, 15, 18, 26, 37, 43, 44, 48, 49, 50, 51, 52, 53, 54, 57, 70, 71, 74, 82, 85, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 108, 110, 111, 112, 113], "n2": [18, 113], "n_": [22, 26, 32, 95, 97, 98], "n_class": [22, 28, 29, 32, 102], "n_clusters_per_class": [102, 110], "n_compon": [103, 104], "n_epoch": 105, "n_featur": [22, 26, 28, 29, 32, 102, 107, 110], "n_inform": 110, "n_output": [26, 28, 29], "n_qubit": 35, "n_redund": [102, 110], "n_sampl": [15, 18, 22, 26, 28, 29, 32, 102, 106, 107, 110], "n_samples_fit": 29, "n_samples_show": 106, "n_samples_test": [28, 29], "n_samples_train": [28, 29], "n_support_": [28, 29], "nabla": 71, "nakanishi": 77, "name": [15, 16, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 106, 109, 111, 113], "nan": 18, "nasa": 103, "nat": 111, "nathan": 62, "nati": [18, 107], "nativ": 15, "natur": [15, 26, 37, 50, 83, 85, 90, 93, 106, 107, 110], "nbsphinx": 113, "ncol": 106, "ndarrai": [18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 36, 37, 38, 40, 41, 43, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100], "ndim": 18, "nearest": [70, 103, 104, 108], "necessari": [32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 57, 60, 93, 106, 110, 112], "necessarili": 101, "necessit": 16, "need": [14, 15, 16, 18, 23, 28, 31, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 57, 60, 63, 71, 81, 87, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "neg": [22, 23, 29, 31, 71, 101, 106], "neglect": [111, 112], "negoro": 62, "neighbor": [9, 103, 111, 113], "neighborhood": 103, "neither": [32, 33, 85], "nelder": 76, "nelder_mead": 66, "nest": [28, 29], "net": [106, 109, 113], "network": [0, 13, 18, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 36, 56, 57, 58, 59, 60, 103, 106, 109, 112], "neural": [0, 18, 20, 21, 22, 23, 24, 25, 31, 32, 33, 36, 56, 57, 58, 59, 60, 103, 106, 109, 112], "neural_network": [15, 16, 18, 20, 21, 22, 23, 24, 25, 31, 32, 33, 36, 57, 60, 101, 102, 105, 106, 109, 110, 111, 112], "neuralnetwork": [18, 20, 21, 22, 23, 24, 25, 31, 36, 56, 57, 58, 60, 101, 102, 106], "neuralnetworkclassifi": [14, 15, 18, 32, 102, 110, 111], "neuralnetworkregressor": [14, 15, 18, 33, 102], "neuron": 101, "nevertheless": [22, 23, 26, 28, 29, 30, 31, 32, 33], "new": [13, 14, 16, 32, 34, 60, 90, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113], "new_kernel": 15, "new_qnn": 109, "newcom": 103, "newton": [74, 88], "next": [15, 18, 22, 23, 31, 32, 33, 63, 72, 83, 85, 87, 91, 102, 103, 104, 105, 108, 109, 110, 111, 112], "nfev": [71, 72, 79, 80, 85], "nice": [102, 105], "nicer": [103, 112], "ninput": 101, "nit": [71, 72, 79, 80, 85, 87], "njev": [71, 72, 79, 80, 87], "nllloss": 106, "nlopt": [9, 13, 66, 67, 68, 69, 73], "nlopt_algorithm": [66, 67, 68, 69, 73], "nloptoptim": [66, 67, 68, 69, 73], "nloptoptimizertyp": [66, 67, 68, 69, 73], "nmp": [18, 113], "nn": [18, 36, 105, 106], "no_grad": [105, 106], "node": [18, 101, 104, 112], "nois": [16, 18, 49, 50, 51, 61, 85, 111, 112], "noise_factor": 61, "noisi": [61, 111, 112], "non": [15, 18, 22, 23, 31, 61, 73, 74, 76, 104, 110], "none": [15, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 102, 103, 106, 108, 109, 113], "nonetyp": 18, "nonlinear": [69, 73], "nonzero": 18, "nor": [85, 101], "norm": [28, 62, 64, 70, 71, 72, 85, 87, 106], "normal": [56, 58, 70, 71, 82, 83, 85, 87, 90, 103, 104, 105, 110], "normalized_fish": [56, 58], "normalized_mutual_info_scor": 104, "nose": 103, "notabl": [85, 105], "note": [27, 28, 29, 36, 57, 60, 71, 75, 77, 83, 84, 85, 91, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112], "notebook": [101, 104, 111, 113], "noth": 18, "notic": [15, 18, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "notimplementederror": 26, "notion": [101, 110], "novel": 106, "now": [15, 16, 18, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113], "np": [15, 18, 22, 23, 26, 28, 29, 31, 32, 33, 35, 36, 70, 71, 74, 82, 83, 85, 87, 90, 91, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "nrow": 106, "nshape": 101, "nu": 28, "num": [33, 102, 112], "num_class": [18, 22, 32], "num_clbit": 60, "num_data": [56, 58], "num_dim": 105, "num_discrete_valu": 105, "num_featur": [48, 49, 50, 51, 52, 53, 103, 109], "num_imag": 111, "num_input": [15, 18, 57, 59, 60, 101, 102, 106, 110], "num_input_paramet": 34, "num_input_sampl": [56, 58, 110], "num_lat": 112, "num_observ": 101, "num_paramet": [15, 83, 85, 105, 109, 112], "num_point": 70, "num_qnn_output": 105, "num_qubit": [16, 18, 32, 33, 34, 35, 57, 60, 101, 102, 103, 105, 106, 107, 110, 111, 112], "num_sampl": [15, 18, 102, 106, 109, 110], "num_step": [26, 107], "num_training_paramet": [51, 52, 53], "num_trash": 112, "num_weight": [56, 57, 58, 59, 60, 101, 102, 106, 110], "num_weight_paramet": 34, "num_weight_sampl": [56, 58, 110], "number": [15, 16, 18, 22, 26, 27, 28, 29, 32, 33, 34, 35, 37, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "number_of_sampl": 18, "numer": [18, 51, 52, 53, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 103, 106, 111], "numpi": [15, 18, 22, 23, 31, 32, 33, 35, 51, 52, 53, 54, 56, 58, 71, 83, 85, 87, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "numpydiscrimin": 15, "nweight": 101, "nxd": [48, 49, 50, 51, 52, 53], "nxm": [48, 49, 50, 51, 52, 53], "ny": 103, "o": [18, 38, 41, 43, 83, 93, 103, 104, 105, 107, 108, 109, 113], "obj_fun": 70, "obj_func_ev": [102, 103, 110, 111], "obj_to_str": 18, "object": [5, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 60, 61, 62, 65, 70, 71, 73, 75, 76, 78, 80, 83, 84, 85, 87, 94, 96, 100, 102, 103, 106, 108, 109, 110, 111, 112], "objective_func_v": [102, 103, 110, 111, 112], "objective_valu": 109, "objectivefunct": [18, 20, 21, 25], "observ": [14, 15, 16, 18, 33, 38, 41, 43, 45, 57, 83, 85, 102, 103, 104, 110, 111, 113], "observable1": 101, "observable2": 101, "obtain": [18, 28, 90, 102, 103, 105, 107, 109, 110, 111, 112, 113], "occur": [18, 62, 113], "occurr": [22, 105], "oct": [15, 45, 46], "octob": 18, "odd": 111, "off": [105, 109, 110, 113], "off_diagon": [18, 49, 51], "offici": [13, 16, 18, 106], "offset": [45, 46], "often": [18, 57, 60, 64, 103], "old": 18, "older": 18, "olson": 112, "omit": 103, "onboard": 18, "onc": [18, 57, 60, 77, 87, 101, 102, 103, 104, 105, 109, 113], "one": [13, 15, 18, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37, 50, 57, 59, 60, 70, 71, 74, 81, 82, 83, 85, 87, 95, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113], "one_hot": [15, 18, 22, 37, 104, 108], "one_idx": 112, "onehotencod": [18, 109], "onehotobjectivefunct": 18, "ones": [18, 49, 51, 64, 105, 112], "onli": [9, 15, 18, 22, 23, 28, 29, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 69, 74, 82, 83, 85, 96, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113], "onlin": 85, "onto": [103, 112], "open": [16, 18, 101, 111, 112], "oper": [15, 18, 27, 83, 90, 103, 104, 111], "opflow": [15, 18], "opflow_qnn": 15, "opflownn": 18, "opflowqnn": 18, "opt": [90, 112], "opt_result": 112, "optic": 113, "optim": [5, 13, 15, 16, 18, 22, 23, 31, 32, 33, 35, 50, 51, 52, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 101, 102, 103, 107, 109, 110, 111, 112], "optima": [73, 82], "optimal_circuit": [55, 108], "optimal_paramet": [55, 108], "optimal_point": [55, 108], "optimal_valu": [55, 108], "optimization_level": 16, "optimized_kernel": [18, 54, 108], "optimizer_ev": [55, 108], "optimizer_result": [55, 108], "optimizer_tim": [55, 108], "optimizerclass": [78, 87], "optimizerresult": [18, 22, 23, 31, 32, 33, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "optimizerst": 72, "option": [9, 15, 18, 22, 23, 28, 29, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 101, 103, 104, 105, 106, 108, 110, 113], "optuna": [71, 87], "orang": 109, "order": [18, 27, 28, 29, 38, 39, 41, 42, 43, 44, 45, 46, 61, 71, 83, 85, 90, 92, 93, 105, 106, 110, 111, 112, 113], "ordered_paramet": 35, "ordin": 18, "org": [15, 62, 64, 65, 70, 74, 76, 77, 81, 82, 84, 85, 86, 88, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "organ": [18, 101], "origin": [15, 18, 28, 29, 84, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "original_classifi": 109, "original_optim": 109, "original_qc": 112, "original_sv": 112, "other": [0, 3, 14, 16, 18, 28, 29, 59, 71, 76, 80, 87, 101, 102, 103, 104, 105, 109, 110, 111, 113], "otherwis": [18, 22, 23, 28, 29, 31, 34, 36, 50, 52, 60, 71, 87, 109], "otim": [15, 33, 37, 57, 93, 101, 111, 112, 113], "our": [15, 16, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113], "out": [13, 15, 16, 32, 33, 77, 101, 103, 106, 112, 113], "outcom": [28, 102, 105, 106, 110, 112, 113], "outlier": 29, "outlin": 37, "outperform": 113, "output": [14, 15, 18, 20, 21, 22, 23, 25, 26, 27, 31, 32, 35, 36, 56, 57, 58, 59, 60, 74, 82, 83, 97, 98, 99, 101, 102, 103, 105, 106, 108, 110, 111, 112], "output_qc": 112, "output_s": [56, 58], "output_shap": [15, 16, 18, 22, 23, 31, 32, 57, 59, 60, 101, 102, 106, 110, 112], "output_st": 112, "output_sv": 112, "over": [26, 54, 62, 83, 85, 87, 93, 100, 107, 110, 112, 113], "overal": [14, 15, 18, 103, 111, 112], "overcom": 111, "overfit": [26, 103, 107, 110], "overlap": [15, 18, 49, 50, 92, 93, 104], "overrid": [38, 39, 41, 42, 43, 44, 45, 46, 92, 93], "overridden": [18, 34], "overview": 85, "overwritten": [61, 83, 85], "ovo": 28, "ovr": 28, "own": [13, 15, 18, 103, 106, 112], "owner": 18, "p": [18, 27, 35, 43, 44, 82, 90, 103, 111, 112, 113], "p1": 111, "p2": 111, "p3": 111, "p_": 105, "p_1": 113, "p_j": 105, "packag": [1, 9, 13, 14, 15, 18, 90, 106, 107, 111], "page": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "pages242": 85, "pai": 103, "pair": [15, 18, 92, 94, 103, 108, 110, 111], "pairgrid": 103, "pairplot": 103, "palett": 103, "pami": 103, "panda": 103, "paper": [103, 104, 107, 110, 113], "parallel": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 113], "param": [16, 18, 28, 29, 54, 55, 62, 79, 96, 100, 101, 111], "param_i": [102, 106], "param_index": 111, "param_prefix": 111, "param_shift": [16, 18], "param_tol": 62, "param_valu": 112, "param_x": [102, 106], "paramet": [15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "parameter": [18, 35, 48, 49, 50, 51, 52, 62, 83, 100, 102, 103, 105, 106, 107, 110, 112], "parameter_valu": [38, 39, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 96, 100], "parameterizediniti": 35, "parametershift": [16, 18], "parametervector": [51, 52, 53, 54, 101, 108, 111], "parametervectorel": [18, 34, 108], "parameterview": [18, 34], "parametr": [8, 14, 32, 33, 49, 50, 57, 60, 90, 92, 93, 101, 105, 108, 110, 111], "params1": 101, "params_valu": 112, "paramshiftestimatorgradi": [16, 57], "paramshiftsamplergradi": [16, 60], "parent": [18, 113], "pariti": [15, 16, 18, 32, 60, 101, 102, 106, 110], "part": [14, 15, 18, 66, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112], "partial": [16, 18, 32, 103], "particular": [60, 92, 93, 106, 109, 110, 111, 112], "particularli": 113, "partit": 104, "pass": [15, 18, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 46, 49, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "pass_manag": [16, 27, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 57, 60, 93, 101], "passmanag": 93, "past": 61, "path": [22, 23, 26, 28, 29, 30, 31, 32, 33], "pathcollect": [102, 109], "patient": [103, 105, 110, 111], "pattern": [6, 14, 48, 101, 103, 104, 105, 111, 113], "pauli": [62, 83, 90, 111], "paulisumop": 15, "paulitwodesign": [83, 85], "pca": 103, "pcolormesh": 107, "pd": 103, "pdf": [18, 70, 105, 107], "pedro": 90, "pegaso": [18, 26, 104], "pegasos_qsvc": [26, 107], "pegasos_scor": 107, "pegasosmpb": [18, 107], "pegasosqsvc": [18, 107], "penal": 112, "penalti": [18, 100], "pend": [15, 18], "pep": 18, "per": [18, 28, 29, 49, 70, 74, 78, 83, 85, 87, 90, 103, 105, 111, 113], "percentag": 90, "perfect": [26, 107], "perfectli": [103, 104], "perform": [16, 18, 22, 26, 27, 28, 29, 32, 60, 62, 64, 71, 72, 74, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 90, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113], "perhap": 103, "period": 112, "permit": 103, "person": 90, "perspect": 101, "perturb": [45, 46, 71, 83, 85, 108], "perturbation_dim": [83, 85], "petal": 103, "ph": [50, 93], "phase": 85, "phi": [37, 49, 50, 83, 92, 93, 104, 105, 111], "phi_": [37, 51, 52], "phy": [62, 111], "physic": [16, 27, 111], "pi": [15, 18, 37, 83, 85, 102, 104, 106, 107, 108, 111], "pick": [103, 110, 112], "pickl": 18, "pictori": 112, "pin": 18, "pip": [9, 13], "pipelin": [28, 29], "pivot": 113, "pixel": [111, 112], "place": [18, 54, 111, 112], "placehold": [35, 103], "plai": [101, 103, 113], "plain": [18, 32], "plane": 111, "plant": 103, "platform": 13, "platt": 28, "pleas": [9, 15, 16, 18, 22, 23, 28, 29, 31, 32, 33, 49, 64, 65, 66, 67, 68, 69, 73, 74, 76, 77, 81, 82, 84, 85, 86, 88, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113], "plot": [37, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113], "plot_barri": 113, "plot_data": [37, 104, 108], "plot_dataset": [104, 109], "plot_featur": 104, "plot_histogram": 113, "plot_surfac": 105, "plot_training_progress": 105, "plt": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "plu": [72, 103], "plug": [15, 18, 101, 104], "pmatrix": 113, "point": [15, 18, 22, 23, 28, 29, 31, 32, 33, 37, 54, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113], "poli": 105, "polyfit": 85, "pool_circuit": 111, "pool_lay": 111, "popul": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "popular": [104, 106], "posit": [18, 26, 34, 45, 46, 48, 49, 50, 51, 52, 53, 64, 83, 85, 107], "possibl": [9, 18, 28, 29, 49, 51, 60, 102, 106, 110, 111, 112, 113], "post": [18, 60, 101, 113], "potenti": [16, 18, 32, 34, 60, 82, 105], "power": [56, 58, 71, 83, 85, 106, 110], "power_law": 71, "pp": [45, 46, 85], "practic": [18, 110], "pre": [13, 15, 22, 26, 32, 85, 101, 102, 106, 107, 111, 112], "precis": [57, 65, 84, 88, 113], "precomput": [26, 28, 29], "precondit": 85, "precondition": 83, "pred": 106, "predefin": [90, 107], "predict": [18, 22, 23, 26, 28, 29, 31, 32, 33, 60, 95, 96, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 111], "predict_i": [95, 97, 98], "predict_log_proba": 28, "predict_proba": [18, 22, 26, 28, 32], "prefer": 76, "prepar": [50, 83, 92, 93, 102, 105, 112, 113], "preprint": [77, 108], "preprocess": [102, 103, 107, 109, 110], "presenc": [18, 85], "present": [18, 85, 105], "preset_passmanag": 16, "pretti": [105, 107], "prevent": [26, 83, 85, 107], "previou": [18, 22, 23, 27, 31, 32, 33, 62, 64, 71, 90, 102, 103, 104, 106, 109, 112], "previous": [15, 18, 101, 104, 106, 109, 110, 111], "previous_kernel": 15, "previous_param": 62, "price": 105, "primal": [26, 107], "primarili": 113, "primit": [14, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 57, 60, 83, 85, 90, 92, 93, 94, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "principl": [18, 101, 104], "print": [18, 27, 34, 35, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "print_opt": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "prior": 113, "priori": 104, "prioriti": [38, 39, 41, 42, 43, 44, 45, 46, 92, 93], "prob_data": 105, "prob_grid": 105, "proba_": 28, "probabilist": [90, 113], "probabl": [15, 18, 22, 23, 26, 27, 28, 31, 32, 39, 42, 44, 46, 47, 50, 52, 60, 101, 102, 105, 106, 112, 113], "probb_": 28, "problem": [9, 14, 16, 18, 32, 33, 64, 65, 70, 73, 74, 76, 83, 84, 85, 101, 102, 103, 104, 110, 111], "proce": [74, 104, 110], "procedur": [18, 22, 23, 31, 32, 33, 37, 107, 112], "proceed": [85, 103], "process": [15, 16, 18, 22, 23, 31, 32, 33, 60, 71, 72, 82, 85, 87, 90, 91, 101, 102, 103, 104, 107, 110, 111, 112, 113], "prod_": 37, "prod_i": 37, "produc": [28, 50, 110], "product": [6, 16, 18, 48, 49, 50, 51, 52, 53, 104, 111], "program": [13, 15, 84, 100], "progress": [102, 105], "proj": [74, 82], "project": [13, 18, 48, 49, 50, 51, 52, 53, 88, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "projector": 93, "prone": [16, 112], "proof": 14, "proper": [57, 60], "properli": [18, 36], "properti": [18, 34, 55, 57, 60, 61, 71, 79, 91, 102, 103, 109], "proport": [26, 28, 71, 107], "propos": [73, 83, 85, 110, 111, 113], "protocol": [22, 23, 31, 32, 33, 54, 75], "prototyp": 14, "provid": [11, 12, 14, 15, 16, 18, 24, 26, 28, 29, 30, 34, 51, 54, 57, 59, 60, 71, 83, 85, 87, 90, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113], "psd": 18, "pseudo": 109, "psi": [92, 93, 112, 113], "psi_": 112, "pt": [106, 109], "pub": [16, 18], "public": [18, 107], "publish": 18, "purpl": 109, "purpos": [15, 103, 104, 105, 107, 109, 110, 111], "push": 101, "put": [28, 29, 104], "pvqd": 93, "py": 108, "pylab": 108, "pypi": 13, "pyplot": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "python": [13, 15, 18, 90], "pytorch": [8, 13, 15, 18, 36, 101], "pytorch_discrimin": 18, "pytorchdiscrimin": 15, "q": [112, 113], "q0": 111, "q1": 111, "q2": 111, "q327": 103, "q_0": [18, 34, 35, 108], "q_1": [18, 34, 35, 108], "q_ax": 104, "qaoa": 90, "qasm": 85, "qb": [18, 27], "qb_2n": 113, "qb_ba": 113, "qbayesian": [18, 113], "qbi": [18, 27], "qc": [16, 18, 27, 54, 57, 60, 102, 105, 106, 110, 111, 112], "qc1": 101, "qc2": 101, "qc_2n": 113, "qc_ba": 113, "qc_inst": 111, "qgan": [15, 18], "qiskit": [3, 9, 11, 12, 18, 19, 50, 52, 56, 57, 58, 60, 75, 83, 85, 86, 90, 102, 103, 104, 105, 106, 107, 111, 112], "qiskit_algorithm": 18, "qiskit_copyright": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "qiskit_ibm_runtim": [16, 101], "qiskit_machine_learn": [7, 15, 16, 18, 34, 35, 57, 60, 70, 71, 82, 83, 85, 87, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "qiskit_version_t": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "qiskitmachinelearningerror": [22, 23, 26, 31, 32, 33, 34, 36, 57, 59, 60, 95, 97, 98, 99], "qiskitruntimeservic": [15, 18], "qk": 16, "qk_trainer": 54, "qka": 108, "qka_result": 108, "qkernel": [28, 29, 107], "qkt": [18, 108], "qkt_result": [18, 54], "qktcallback": 108, "qml": [15, 101, 113], "qn": 83, "qnn": [18, 32, 33, 34, 56, 57, 58, 60, 102, 105, 109, 111, 112], "qnn1": 106, "qnn2": 106, "qnn3": 106, "qnn4": 106, "qnn5": 106, "qnn_input_s": [56, 58], "qnn_qc": [18, 34, 57, 60], "qnncircuit": [18, 57, 60, 102, 110], "qpca_kernel": 104, "qr": [112, 113], "qrx": 113, "qry": 113, "qsvc": [14, 15, 18, 107, 108], "qsvc_score": 104, "qsvm": [15, 18], "qsvr": [14, 15, 18], "quadrat": [85, 100], "quant": [9, 18, 50, 93], "quant_kernel": [54, 108], "quantiti": [15, 96], "quantum": [0, 2, 9, 10, 13, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 77, 82, 83, 85, 90, 92, 93, 96, 100, 106, 109, 110], "quantum_info": [15, 18, 50, 52, 83, 85, 90, 101, 111, 112], "quantum_inst": [15, 18], "quantum_kernel": [15, 18, 26, 28, 29, 54, 55, 96, 100, 104, 107, 108], "quantumcircuit": [15, 16, 18, 27, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 57, 60, 83, 92, 93, 101, 102, 105, 106, 108, 110, 111, 112, 113], "quantumgener": [15, 18], "quantuminst": [15, 18], "quantumkernel": [15, 18, 54], "quantumkerneltrain": [15, 18, 108], "quantumkerneltrainerresult": [54, 108], "quantumregist": [112, 113], "quasi": [15, 39, 42, 44, 46, 60, 74, 102, 105], "qubit": [15, 16, 18, 27, 32, 33, 34, 35, 37, 48, 49, 50, 51, 52, 54, 57, 60, 93, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113], "queri": [18, 22, 23, 27, 31, 32, 33, 102, 113], "question": 28, "queue": 18, "quick": 106, "quickli": [14, 15], "quit": [57, 60, 90, 102, 103, 105, 110, 112], "r": [13, 18, 22, 23, 26, 28, 29, 31, 32, 33, 102, 103, 104, 106, 107, 108, 109, 111, 112], "r2_score": 29, "r_y": [105, 113], "r_y_theta": 113, "r_z": 105, "radiu": 70, "rais": [18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 54, 55, 57, 59, 60, 62, 66, 67, 68, 69, 70, 71, 73, 79, 85, 91, 93, 95, 97, 98, 99], "rand": [15, 18, 68, 85], "random": [15, 16, 18, 26, 27, 36, 37, 45, 46, 66, 68, 70, 71, 82, 83, 85, 87, 90, 101, 102, 103, 106, 109, 110, 111, 112], "random_imag": 111, "random_se": [15, 16, 18, 70, 82, 83, 85, 90, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112], "random_st": [15, 29, 102, 103, 107, 109, 111], "randomli": [56, 58, 66, 103, 106, 110], "rang": [22, 26, 32, 61, 85, 102, 103, 105, 106, 108, 109, 110, 111, 112], "rangl": [6, 37, 48, 49, 50, 51, 52, 83, 92, 93, 104, 105, 112, 113], "rank": 73, "rapidli": 108, "rate": [61, 71, 72, 83, 85, 91, 105], "rather": 104, "ravel": [104, 107], "raw": [35, 60, 94], "raw_fidel": 94, "rawfeaturevector": [18, 112], "rbf": 104, "rbf_ax": 104, "rcparam": [102, 103, 108, 109, 110, 111, 112], "rdbu": [104, 107, 108], "re": [15, 18, 38, 41, 43, 106, 109, 112], "reach": [16, 27, 76, 81, 82, 103, 108], "read": [18, 28, 29, 57, 60], "readabl": [34, 35], "reader": 103, "readi": [103, 105], "readthedoc": [66, 67, 68, 69, 71, 73, 87], "real": [18, 26, 27, 28, 29, 38, 41, 43, 45, 83, 85, 101, 105, 106, 109, 112, 113], "real_dist": 105, "real_loss": 105, "real_prob_grid": 105, "realamplitud": [15, 18, 32, 33, 34, 57, 60, 102, 103, 106, 109, 110, 112], "reason": [18, 65, 106, 112, 113], "recal": 103, "recalcul": 113, "recalibr": 113, "receiv": [55, 79], "recent": [13, 22, 32], "recogn": [101, 111], "recognit": [103, 111, 112, 113], "recommend": [54, 85, 88, 106, 109], "recomput": 106, "reconstruct": [78, 87, 112], "recov": 18, "recreat": [103, 106], "rectangl": [67, 68], "red": [102, 104, 106], "reddi": 61, "reduc": [15, 18, 102, 104, 110, 111, 112, 113], "reduct": [70, 103, 106], "redund": 102, "reevalu": 106, "refactor": 18, "refer": [13, 15, 16, 18, 22, 23, 26, 27, 31, 32, 33, 37, 41, 42, 43, 44, 45, 46, 49, 50, 51, 54, 56, 57, 58, 60, 61, 64, 65, 66, 67, 68, 69, 73, 74, 76, 77, 81, 82, 83, 84, 85, 86, 88, 90, 93, 101, 103, 104, 105, 109, 110, 113], "referenc": [18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 103], "refin": 74, "reflect": [18, 48, 49, 50, 51, 52], "refresh": 103, "regard": 103, "regardless": [18, 85], "region": 65, "regist": [16, 18, 27, 60, 112, 113], "regress": [0, 1, 6, 14, 15, 22, 23, 28, 29, 31, 32, 33, 48, 104], "regression_estimator_qnn": 102, "regressor": [12, 14, 18, 23, 29, 33, 101, 109], "regressormixin": [18, 23], "regular": [26, 83, 85, 107, 110], "reinstal": 13, "reject": 27, "rejection_sampl": [27, 113], "rel": [81, 88, 103, 105, 106], "relat": [14, 16, 18, 106], "relationship": [18, 111, 113], "releas": [15, 16], "relev": [28, 29, 87, 110, 112], "reli": [15, 18, 61, 101, 102, 103, 112], "relu": 106, "remain": [83, 85, 111, 112], "remaind": [111, 112], "rememb": [101, 106], "remind": 106, "remov": [15, 16, 18], "renam": 18, "rep": [15, 18, 83, 85, 90, 102, 103, 104, 105, 106, 107, 110, 112], "repeat": [27, 50, 87, 105, 112], "repetit": [103, 105, 112], "replac": [15, 16, 18, 107], "repositori": [13, 16, 103, 106], "repres": [18, 22, 26, 27, 32, 57, 80, 91, 101, 103, 104, 105, 108, 110, 111, 113], "represent": [18, 20, 21, 22, 23, 25, 27, 31, 32, 33, 107, 109, 112], "represt": 105, "reproduc": [70, 82, 83, 85, 90, 103, 104, 105, 106, 109, 110], "request": [16, 18, 28, 29], "requir": [13, 15, 16, 18, 26, 27, 28, 32, 33, 34, 37, 48, 49, 50, 51, 52, 53, 57, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112], "resampl": [83, 85], "rescal": [28, 29, 61], "research": 14, "resembl": 104, "reset": 112, "reset_interv": 77, "reshap": [18, 60, 102, 104, 105, 106, 107, 109, 111, 112], "residu": 29, "resolut": 105, "resolv": [18, 34], "resourc": [101, 103], "respect": [8, 14, 15, 18, 22, 26, 32, 34, 38, 41, 43, 45, 57, 59, 60, 92, 93, 101, 103, 105, 111, 112, 113], "rest": [18, 49, 51, 85, 110], "restrict": [85, 102, 111], "result": [15, 16, 18, 22, 23, 27, 28, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 101, 102, 103, 104, 106, 108, 111, 112, 113], "resum": 109, "retain": [15, 18, 28, 29, 50, 52, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "retain_graph": 105, "retriev": 55, "return": [15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112], "rev": 62, "revers": 18, "review": [16, 27, 104, 111], "revis": 113, "rho_": 112, "rhobeg": 65, "ridg": [6, 48, 104], "right": [18, 37, 71, 97, 101, 104, 105, 113], "ring": 113, "rng": 111, "robust": 76, "role": [103, 112, 113], "romero": 112, "root": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "rotat": [54, 62, 105, 107, 108], "round": [18, 70, 103, 111], "rout": [28, 29], "routin": [71, 79, 83, 85], "row": 70, "royalblu": 105, "rule": [37, 43, 44, 66, 73, 103, 106, 109], "run": [13, 16, 18, 38, 39, 41, 42, 43, 44, 45, 46, 57, 70, 82, 83, 85, 90, 92, 93, 103, 106, 107, 110, 111, 112], "run_monte_carlo": [56, 58], "runarsson": 73, "runtim": [15, 16, 18, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 90, 92, 93, 94, 103], "runtimeerror": 70, "rv": 105, "rx": [16, 41, 42, 43, 44, 101], "rxx": [41, 42, 43, 44], "ry": [15, 16, 18, 41, 42, 43, 44, 54, 101, 102, 106, 108, 111, 113], "ryi": [41, 42, 43, 44], "rz": [41, 42, 43, 44, 54, 111], "rzx": [41, 42, 43, 44], "rzz": [41, 42, 43, 44], "s41567": 111, "sacrif": 83, "sai": 18, "sake": [101, 102, 103, 106], "same": [13, 15, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 54, 62, 71, 82, 83, 85, 87, 90, 93, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "sampl": [4, 15, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 37, 39, 42, 44, 46, 47, 49, 50, 51, 52, 54, 56, 58, 60, 70, 83, 85, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112], "sample_point": 70, "sample_set": 70, "sample_set_i": 70, "sample_set_x": 70, "sample_size_factor": 70, "sample_test": [26, 28, 29], "sample_train": [26, 28, 29], "sample_weight": [22, 23, 26, 28, 29, 31, 32, 33], "sampler": [14, 15, 16, 18, 27, 32, 39, 42, 44, 46, 49, 51, 60, 83, 90, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113], "sampler1": 109, "sampler2": 109, "sampler_classifi": 102, "sampler_gradi": 16, "sampler_qnn": [15, 16, 101, 102], "sampler_qnn2": 101, "sampler_qnn_forward": 101, "sampler_qnn_forward2": 101, "sampler_qnn_forward_batch": 101, "sampler_qnn_input": 101, "sampler_qnn_input_grad": 101, "sampler_qnn_input_grad2": 101, "sampler_qnn_weight": 101, "sampler_qnn_weight_grad": 101, "sampler_qnn_weight_grad2": 101, "samplergradi": [39, 47], "samplerqnn": [14, 16, 18, 32, 105, 112], "samplerqnn1": 101, "samplerqnn2": 101, "samplerv1": [18, 60], "samplerv2": [16, 18], "sampling_radiu": 70, "samplingneuralnetwork": 18, "sanjiv": 61, "sashank": 61, "satisfi": 77, "satyen": 61, "save": [18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 61, 106, 111, 112], "save_param": 61, "saw": [103, 104], "scalar": [57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 90], "scale": [28, 85, 88, 101, 102, 103, 105, 109], "scatter": [102, 104, 106, 107, 108, 109], "scatterplot": 103, "scenario": 113, "scene": 103, "schedul": 62, "schemat": 111, "scheme": [38, 43, 71, 101, 105], "schuld": [41, 42, 43, 44, 62], "scienc": [14, 112], "scientist": 103, "scikit": [9, 15, 18, 22, 23, 28, 29, 31, 100, 102, 103, 104, 107, 109, 110], "scipi": [18, 28, 29, 64, 65, 74, 75, 76, 77, 81, 82, 84, 86, 88, 105], "scipyoptim": [64, 65, 74, 76, 77, 81, 82, 84, 88], "scope": 102, "score": [15, 18, 22, 23, 26, 28, 29, 31, 32, 33, 102, 103, 104, 107, 109, 110, 111], "script": 15, "sd": 103, "sdg": [41, 42], "seaborn": 103, "seamlessli": 106, "search": [66, 67, 70, 71, 76, 87, 90, 103], "sec": 105, "second": [18, 74, 76, 83, 85, 92, 93, 101, 103, 104, 105, 106, 109, 111, 112], "second_ord": 85, "section": [16, 18, 85, 101, 102, 103, 104, 105, 106, 109, 111, 112], "see": [8, 13, 15, 18, 22, 23, 27, 28, 29, 35, 60, 62, 68, 71, 76, 77, 81, 83, 84, 85, 87, 88, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "seed": [16, 18, 26, 45, 46, 70, 82, 83, 85, 90, 101, 103, 104, 105, 106, 109, 110, 112], "seed_simul": 15, "seed_transpil": 15, "seem": 90, "seen": [87, 101, 103, 111, 112], "segreg": 104, "select": [15, 16, 90, 106, 108, 110, 113], "self": [19, 22, 23, 26, 28, 29, 31, 32, 33, 48, 49, 50, 51, 52, 53, 70, 85, 105, 106, 108], "semi": [18, 50], "semidefinit": [48, 49, 50, 51, 52, 53], "send": [78, 87, 91], "sensit": 110, "sent": 110, "sep": 15, "sepal": 103, "separ": [18, 26, 28, 37, 60, 102, 103, 104, 107, 110], "sequenc": [18, 38, 39, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 57, 60, 64, 74, 92, 93, 94, 96, 100], "sequenti": [27, 77, 81, 84, 106], "seri": [83, 85, 101, 103, 104, 110, 111], "serial": [22, 23, 26, 28, 29, 30, 31, 32, 33, 78, 87], "serializ": [78, 87], "serializablemodelmixin": [26, 28, 29, 31], "server": [78, 87], "servic": [14, 15, 18, 103], "session": 16, "set": [4, 6, 9, 15, 16, 18, 19, 22, 26, 27, 28, 29, 32, 34, 36, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 102, 103, 104, 106, 107, 109, 111, 112], "set_config": [28, 29], "set_fit_request": [28, 29], "set_interpret": 60, "set_max_evals_group": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "set_opt": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "set_param": [28, 29], "set_score_request": [28, 29], "set_titl": [104, 105, 106, 111, 112], "set_to_non": 106, "set_xlabel": [104, 105, 108], "set_xtick": 106, "set_ylabel": [104, 105, 108], "set_ytick": 106, "set_zlim": 105, "setosa": 103, "setter": 18, "setup": [18, 83, 101, 103, 104, 106], "sever": [84, 103, 111, 112], "sgd": 106, "shade": 107, "shalev": [26, 107], "shanno": 74, "shape": [18, 22, 26, 28, 29, 32, 56, 57, 58, 59, 60, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 112], "share": [15, 82, 110], "shift": [18, 43, 44], "short": [83, 85, 90, 102, 109], "shot": [18, 50, 52], "should": [13, 15, 16, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 50, 51, 52, 60, 70, 71, 82, 83, 85, 87, 90, 101, 103, 105, 106, 107, 109, 110, 112], "show": [15, 28, 29, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "shown": [15, 56, 58, 101, 104, 107, 109, 110, 112, 113], "shrink": 105, "shuffl": [106, 107], "shwartz": [26, 107], "sigma_i": 111, "sigma_x": 111, "sigma_z": 111, "sigmoid": [26, 105], "sign": 106, "signatur": [15, 18, 26, 103], "signific": [18, 27, 109, 113], "significantli": [18, 83], "silent": 18, "sima": 27, "similar": [15, 18, 101, 102, 103, 108, 111, 112, 113], "similarli": [18, 101, 102], "simpl": [15, 18, 28, 29, 74, 101, 102, 103, 109, 111, 113], "simpler": [104, 112, 113], "simplest": [13, 103], "simplex": 76, "simpli": [13, 73, 111], "simplic": [103, 106], "simplifi": [18, 34, 57, 60, 102, 110, 111], "simul": [15, 18, 50, 82, 85, 101, 102, 103, 106, 109, 110, 113], "simultan": [45, 46, 62, 64, 74, 82, 83, 84, 85, 86, 88, 113], "sin": [15, 18, 102, 106, 113], "sinc": [13, 18, 26, 28, 35, 54, 104, 105, 108, 111, 112], "sine": 106, "singl": [15, 18, 22, 32, 33, 56, 57, 58, 59, 60, 93, 103, 106, 110], "sink": 111, "sir": 103, "situat": 85, "size": [18, 22, 26, 32, 34, 45, 46, 50, 52, 56, 58, 62, 64, 65, 70, 71, 74, 84, 85, 87, 88, 90, 101, 103, 104, 106, 107, 108, 110, 112], "size_gen": 90, "skip": 112, "sklearn": [15, 18, 26, 28, 29, 102, 103, 104, 107, 108, 109, 110, 111], "slack": 16, "slight": 102, "slightli": [28, 103], "slope": 85, "slowli": 111, "slsqp": [18, 22, 23, 31, 32, 33], "small": [15, 18, 28, 71, 83, 85, 90, 103, 104, 105, 110, 113], "smaller": [26, 67, 71, 83, 85, 107, 112], "smallest": 100, "smooth": 70, "sn": 103, "snapshot_dir": 61, "snippet": [18, 109, 110], "snobfit": 9, "so": [15, 18, 28, 29, 67, 71, 72, 80, 90, 91, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113], "soft": 100, "softmax": [95, 106], "softwar": 14, "softwareversionqiskit": 15, "solid": 109, "soloviev": 90, "solut": [9, 27, 64, 81, 90, 111], "solv": [14, 18, 64, 74, 83, 85, 100, 101, 103, 104, 106], "solver": [26, 64, 65, 74, 76, 77, 81, 82, 83, 84, 85, 86, 88, 107], "some": [13, 15, 16, 18, 23, 26, 28, 29, 31, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 57, 60, 68, 70, 82, 83, 85, 90, 93, 101, 103, 105, 106, 107, 109, 110, 111, 112], "sometim": [103, 113], "son": 103, "sooner": 18, "sophist": [15, 103], "sort": 28, "sourc": [13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "space": [6, 26, 37, 48, 50, 71, 76, 83, 85, 87, 93, 104, 107, 108, 110, 111, 112], "spall": [45, 46, 85], "span": [107, 111], "spars": [13, 18, 28, 29, 32, 36, 57, 59, 60, 61, 105, 106, 109, 110], "sparse_output": 109, "sparsearrai": [57, 59, 60], "sparsepauliop": [16, 85, 101, 111], "sparsiti": 18, "special": 102, "specif": [13, 18, 49, 51, 52, 56, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 101, 102, 110, 111, 113], "specifi": [15, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 53, 54, 57, 60, 70, 83, 85, 100, 101, 103, 109, 113], "spectral": [6, 48], "spectralclust": 104, "speed": [18, 83], "speedup": 113, "sphere": [70, 113], "spirit": [71, 87], "split": [18, 103, 107, 109, 111, 112], "spsa": [16, 18, 45, 46, 54, 83, 108], "spsa_opt": 108, "sqrt": [35, 88, 105, 112, 113], "squar": [22, 29, 33, 84, 98, 102, 106], "squared_error": [18, 22, 23, 31, 33, 102], "squeez": [103, 105, 106], "stabil": 103, "stability_const": [83, 85], "stabl": [71, 83, 85, 87, 106], "stage": [16, 18], "stage1_i": 109, "stage1_len": 109, "stage1_x": 109, "stage2_i": 109, "stage2_len": 109, "stage2_x": 109, "stai": [18, 103], "stand": [103, 105], "standard": [18, 71, 83, 85, 93, 100, 103, 107], "start": [14, 15, 18, 22, 23, 31, 32, 33, 36, 66, 71, 74, 83, 85, 87, 101, 102, 103, 105, 106, 109, 110, 112], "stat": 105, "state": [15, 16, 18, 27, 35, 49, 50, 51, 52, 63, 71, 72, 80, 83, 85, 87, 92, 93, 101, 103, 104, 105, 106, 108, 109, 111, 112, 113], "state_dict": [106, 109], "state_fidel": [15, 16, 18, 104, 107, 108], "statefidel": 94, "statefidelityresult": [92, 93], "statefn": 15, "stateless": 101, "statevector": [15, 18, 35, 50, 52, 101, 102, 103, 105, 112, 113], "statevector_simul": [15, 18], "statevector_typ": [18, 50, 52], "statevectorestim": [16, 101, 102, 106, 110, 111], "statevectorsampl": [16, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113], "static": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "stationari": [61, 76], "statist": 103, "std_bound": 90, "steepest": 74, "stem": 18, "step": [15, 18, 26, 60, 61, 62, 64, 70, 71, 72, 74, 80, 83, 84, 85, 87, 88, 90, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "step4": 106, "step_size_multipli": 70, "steppabl": 87, "steppableoptim": 71, "stepsiz": [71, 72, 83, 85, 108], "stfc": 14, "still": [15, 18, 83, 85, 102, 103, 111], "stochast": [45, 46, 61, 73, 83, 85, 90, 105], "stop": [26, 70, 71, 74, 76, 81, 82, 84, 87, 88, 107, 111], "stopiter": 91, "store": [18, 50, 61, 80, 87, 94, 101, 102, 105, 106, 109, 110, 112], "str": [22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 47, 49, 51, 54, 61, 62, 70, 86, 94, 101, 102], "str_to_obj": 18, "straight": 111, "straightforward": [16, 106], "strategi": [18, 49, 51, 73, 101], "strength": [26, 107], "strict": 101, "string": [14, 18, 22, 23, 27, 31, 32, 54, 60, 102, 108, 112], "structur": [18, 101, 102, 103, 104, 105, 108, 112, 113], "stuck": 82, "studi": [6, 48, 104, 110], "style": [83, 101, 102, 103, 105, 106, 110, 111, 112, 113], "su": [37, 111], "sub": [16, 18, 26, 28, 29, 107], "subclass": [18, 50, 101, 111, 113], "subject": 88, "submit": [16, 18], "subobject": [28, 29], "subplot": [104, 105, 106, 108, 111, 112], "subplot_kw": [105, 111], "subplots_adjust": 111, "subroutin": [84, 104], "subsequ": [15, 18], "subset": [18, 26, 27, 28, 104, 106], "subseteq": 37, "subspac": 111, "subsystem": 112, "subtleti": 112, "succe": 104, "success": [64, 106], "successfulli": 106, "suffici": [18, 70, 107], "suit": 85, "sum": [18, 22, 23, 29, 31, 102, 105, 106, 109, 112], "sum_": [37, 93, 95, 97, 98, 100, 105], "sum_jp_j": 105, "sum_sq": 112, "summari": 103, "summat": 18, "super": [53, 105, 106], "superposit": 113, "supersed": 18, "supervis": [37, 50, 93, 104], "supplementari": [85, 91], "suppli": [18, 34, 71], "support": [6, 13, 14, 15, 16, 18, 26, 28, 29, 32, 34, 38, 43, 48, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 103, 104, 108], "supported_g": [41, 42, 43, 44], "supportsfloat": [74, 82], "suppress": [103, 105], "sure": [18, 106], "surf": 105, "sv": [50, 52], "sv_qi": 15, "svc": [18, 26, 28, 100, 103], "svc_loss": [54, 108], "svcloss": [18, 54, 108], "svm": [15, 18, 26, 28, 29, 100, 103, 104, 107, 108], "svr": 29, "swap": [41, 42], "swap_test": 112, "switch": [16, 18], "symmetr": [64, 83, 85], "symptom": 113, "synergi": 113, "syntax": 14, "synthes": 35, "system": [27, 64, 85, 103, 111, 112, 113], "systemat": [67, 83], "t": [13, 16, 18, 26, 28, 29, 32, 33, 35, 41, 42, 71, 78, 87, 101, 103, 104, 105, 106, 108], "tab10": 103, "tabl": [103, 113], "tac": [45, 46], "taccuraci": 106, "tackl": [102, 103, 104], "take": [14, 15, 18, 57, 60, 75, 83, 85, 96, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113], "taken": [15, 18, 50, 52, 55, 57, 60, 81, 103, 108], "target": [18, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 54, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 97, 98, 99, 101, 102, 103, 105, 106, 111, 113], "target_i": [95, 97, 98], "target_magnitud": [83, 85], "target_qubit": 113, "task": [6, 8, 18, 48, 51, 52, 100, 104, 105, 106, 108, 113], "tau": 107, "taxonom": 103, "tb": [19, 91], "team": 18, "technic": 85, "techniqu": [76, 103, 104, 108, 113], "technologi": [14, 112], "tell": [71, 87, 89, 105], "tell_data": [71, 87], "telldata": [71, 87], "temm": [37, 50, 93], "tensor": [13, 18, 36, 83, 105, 106, 111], "term": [18, 61, 62, 103, 110, 111, 112], "termin": [61, 64, 76, 81, 83, 84, 85, 88], "termination_check": [83, 85], "terminationcheck": [83, 85], "terra": [15, 18], "terra0": 15, "test": [4, 13, 22, 23, 26, 28, 29, 31, 32, 33, 37, 103, 104, 107, 109, 110], "test_featur": [103, 104, 107, 109], "test_features_q": 104, "test_features_rbf": 104, "test_imag": [111, 112], "test_label": [103, 104, 107, 109, 111, 112], "test_load": 106, "test_predict": 109, "test_qc": 112, "test_score_c2": 103, "test_score_c4": 103, "test_score_q2_eff": 103, "test_score_q2_ra": 103, "test_score_q4": 103, "test_siz": [37, 104, 108, 111], "text": [35, 74, 95, 97, 98, 105, 111, 112], "textbook": 106, "th": [38, 39, 41, 42, 43, 44, 45, 46, 85, 111], "than": [6, 18, 26, 27, 28, 32, 33, 34, 48, 57, 60, 64, 71, 85, 102, 103, 104, 105, 106, 107, 109, 110, 113], "thank": 14, "thei": [15, 18, 28, 32, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "them": [9, 15, 16, 18, 71, 84, 87, 101, 102, 103, 104, 105, 106, 109, 110], "theodor": 27, "theorem": 113, "theoret": 101, "theori": [103, 111], "therebi": [61, 113], "therefor": [16, 18, 26, 35, 83, 85, 101, 110, 111, 112], "thesi": 18, "theta": [51, 52, 71, 83, 105, 111, 112, 113], "theta_": [71, 113], "theta_0": 71, "theta_1": 105, "theta_a_b": 113, "theta_a_bn": 113, "theta_a_nb": 113, "theta_a_nbn": 113, "theta_b": 113, "theta_j_a": 113, "theta_j_na": 113, "theta_k": 105, "theta_m_a": 113, "theta_m_na": 113, "theta_x": 113, "theta_y_nx": 113, "theta_y_x": 113, "thi": [6, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "thing": [18, 101], "think": 103, "third": [105, 111], "thiscopyright": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "thomsen": 18, "those": [13, 16, 28, 32, 90, 102, 103, 106, 113], "though": [13, 18, 73, 110, 112], "three": [18, 34, 77, 101, 102, 103, 104, 111, 112], "threshold": [27, 70, 71, 113], "threw": 18, "through": [6, 15, 16, 18, 48, 100, 101, 103, 106, 111, 112, 113], "throughout": [111, 112], "throw": [18, 91], "thrown": 18, "thu": [15, 18, 26, 35, 58, 103, 105, 107, 110, 111, 112, 113], "thumb": [106, 109], "tie": 68, "tight_layout": 108, "tile": 105, "time": [15, 18, 27, 28, 34, 55, 61, 77, 83, 85, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113], "tini": 102, "titl": [102, 103, 104, 106, 107, 108, 109, 110, 111, 112], "tloss": 106, "to_instruct": 111, "todo": 77, "togeth": [101, 110], "toi": [37, 90, 110], "tol": [61, 62, 64, 65, 71, 76, 81, 84, 88], "toler": [61, 62, 64, 71, 76, 81, 84, 88], "too": [14, 102, 104, 110], "tool": [0, 3, 14, 15, 91], "top": [49, 51], "torch": [13, 18, 36, 105, 109], "torch_connector": 18, "torchconnector": [8, 13, 14, 18, 57, 60, 101, 105, 106, 109], "torchruntimecli": 18, "torchruntimeresult": 18, "torchvis": 106, "toss": 103, "total": [29, 79, 109, 110, 112], "total_loss": [105, 106], "totensor": 106, "toward": [62, 67, 103], "tr": 112, "trace": [56, 58, 110], "track": [15, 18, 22, 23, 31, 32, 33], "tractabl": 104, "tradit": 113, "train": [0, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 49, 51, 52, 53, 54, 96, 100, 101, 102, 104, 107, 112], "train_featur": [103, 104, 107, 109], "train_features_q": 104, "train_features_rbf": 104, "train_imag": [111, 112], "train_label": [103, 104, 107, 109, 111, 112], "train_load": 106, "train_predict": 109, "train_score_c2": 103, "train_score_c4": 103, "train_score_q2_eff": 103, "train_score_q2_ra": 103, "train_score_q4": 103, "train_siz": [103, 107, 109], "train_test_split": [103, 107, 109, 111], "trainabl": [15, 18, 34, 51, 52, 54, 57, 59, 60, 93, 96, 100, 101, 103, 105, 108, 110], "trainable_fidelity_quantum_kernel": 108, "trainable_model": 18, "trainablefidelityquantumkernel": [15, 18, 54, 108], "trainablefidelitystatevectorkernel": 18, "trainablekernel": [15, 18, 51, 52, 54, 96, 100, 108], "trainablemodel": [18, 22, 23], "trained_weight": 110, "trainer": [15, 18, 54, 55], "training_param": [54, 108], "training_paramet": [18, 51, 52, 53, 54, 108], "training_parameter_bind": 18, "training_s": [37, 104, 108], "transact": [45, 46, 103], "transfer": [16, 18], "transform": [18, 28, 32, 35, 102, 103, 104, 106, 109, 111], "transit": [16, 18], "translat": [14, 60, 104], "transpil": [18, 32, 33, 38, 39, 41, 42, 43, 44, 45, 46, 57, 60, 93, 101, 102, 105, 106, 109, 110, 111, 112], "transpos": 105, "trash": 112, "travel": 112, "treat": [101, 104], "tree": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "tri": [105, 112], "trial": 103, "trick": [104, 107], "tricki": 15, "trigger": 113, "trivial": [26, 107, 110, 113], "true": [15, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 36, 37, 48, 49, 50, 51, 52, 53, 57, 60, 61, 64, 65, 70, 71, 76, 81, 83, 84, 85, 87, 88, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "truncat": [18, 88, 94], "trust": [65, 76], "trust_region": 85, "truth": [96, 100, 102], "try": [48, 49, 50, 51, 52, 103, 112], "ttic": [18, 107], "tunabl": 103, "tune": [18, 51, 52, 103, 111, 112], "tupl": [18, 32, 37, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101], "turn": [18, 100, 105, 112], "tutori": [13, 14, 15, 16, 18, 71, 87, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "tutorial_mag": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "tweak": [103, 109], "twice": [83, 84, 85, 112], "two": [9, 10, 14, 15, 18, 22, 23, 26, 27, 31, 32, 33, 34, 48, 49, 50, 51, 52, 57, 60, 83, 85, 92, 93, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112], "two_spsa": 85, "twolayerqnn": [15, 18], "txt": [13, 15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "typ": 91, "type": [18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 103, 111, 112], "typeerror": [22, 23, 26, 28, 29, 30, 31, 32, 33, 55, 79], "typic": [87, 106, 112], "u": [29, 50, 83, 101, 103, 104, 111, 112], "u_": 37, "ub": [15, 18, 102, 106], "uci": 103, "udma": 90, "uk": 14, "ultim": 104, "unbound": [18, 50, 52, 70], "unbound_pass_manag": 18, "uncertain": 113, "uncertainti": 85, "unchang": [28, 29], "uncompress": 112, "uncomput": [15, 50, 93], "unconstrain": [64, 74, 76, 81], "under": [13, 15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "underli": [14, 18, 22, 23, 31, 32, 33, 36, 54, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 102, 105, 109], "understand": [90, 113], "understood": [6, 48, 104, 110], "unexpect": 18, "unfit": 26, "unifi": [16, 18], "uniform": [37, 56, 58, 105, 110, 111, 112], "uniform_averag": 29, "uniformli": [36, 37, 83, 85, 106], "union": [18, 38, 39, 41, 42, 43, 44, 45, 46, 93], "uniqu": [18, 26], "unit": [70, 101], "unitari": [18, 37, 41, 42, 111], "univari": 90, "unknown": [22, 23, 31, 54, 85, 112], "unless": [18, 50], "unlik": [85, 96], "unnecessarili": 110, "unseen": [103, 109, 110], "unsign": [32, 60], "unsuccess": 70, "unsupervis": 104, "unsupport": 49, "unsurprisingli": 103, "until": [18, 27, 111, 112], "unused_param": [28, 29], "up": [18, 22, 23, 31, 60, 83, 85, 102, 103, 104, 106, 109, 112], "updat": [13, 15, 16, 18, 28, 29, 34, 38, 39, 41, 42, 43, 44, 45, 46, 55, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 102, 103, 112, 113], "update_default_opt": [38, 39, 41, 42, 43, 44, 45, 46, 93], "upgrad": [13, 16], "upon": 111, "upper": [70, 88, 100, 104, 107, 108, 109], "us": [0, 2, 6, 8, 9, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113], "usabl": 18, "usag": [13, 15, 16, 18], "user": [14, 15, 16, 18, 22, 23, 28, 29, 31, 32, 33, 51, 52, 54, 71, 87, 90, 96, 100, 109, 110], "user_param_bind": 18, "user_paramet": 18, "usual": [6, 15, 48, 103, 104, 106, 110, 112, 113], "utc": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "util": [15, 16, 18, 28, 29, 54, 70, 82, 83, 85, 90, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113], "v": [29, 37, 43, 44, 50, 93, 103, 104], "v1": [16, 18, 57, 60], "v2": [16, 18, 57, 60], "val": 91, "valid": [18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 103, 105], "valu": [9, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113], "valueerror": [18, 22, 26, 27, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 54, 70, 71, 85, 93], "values_1": [92, 93], "values_2": [92, 93], "vanilla": [71, 83], "var": 113, "var_lb": 70, "var_ub": 70, "vari": [111, 112], "variabl": [18, 27, 28, 29, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 113], "varianc": 93, "variant": [61, 67, 68, 102], "variat": [9, 14, 15, 18, 32, 33, 73, 85, 90, 101, 103, 105, 109], "variationalresult": 55, "varieti": 9, "variou": [14, 18, 27, 32, 112, 113], "vatan": 111, "vec": [37, 71, 104], "vector": [6, 14, 18, 22, 23, 26, 28, 29, 31, 35, 37, 45, 46, 48, 51, 52, 53, 54, 56, 58, 70, 74, 81, 82, 95, 101, 102, 103, 104, 111, 112], "ver_arrai": 111, "veri": [15, 16, 28, 90, 103, 104, 109], "verifi": [103, 109], "vers": 106, "versicolour": 103, "version": [13, 14, 15, 16, 18, 28, 29, 52, 58, 66, 67, 82, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "version3": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "versu": [102, 103, 109], "vertic": 111, "vf": [18, 102, 106], "via": [15, 16, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 35, 50, 53, 54, 57, 60, 73], "vice": 106, "vicent": 90, "vicenteperezsoloviev": 90, "view": [101, 104, 106, 111], "view_a": 106, "vill": 62, "virginica": 103, "virtual": [13, 16], "visit": [71, 87], "visual": [104, 106, 107, 113], "vol": [45, 46, 85, 103], "vqc": [8, 14, 15, 18, 103, 109], "vqc_classifi": 109, "vqe": [75, 90], "vqr": [14, 15, 18], "w": [18, 26, 28, 29, 50, 93, 103, 104, 105, 107, 108, 109], "wa": [9, 13, 15, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 70, 83, 85, 87, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "wai": [13, 15, 18, 51, 52, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113], "wait": [102, 103, 105, 109, 110, 111, 112], "want": [13, 16, 18, 60, 70, 71, 82, 83, 85, 87, 90, 101, 102, 103, 105, 109, 110, 113], "warm": [18, 22, 23, 31, 32, 33], "warm_start": [18, 22, 23, 31, 32, 33, 109], "warn": [16, 18, 22, 23, 26, 28, 29, 30, 31, 32, 33, 35, 112], "wave": 106, "we": [15, 18, 37, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "websit": 85, "weight": [15, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 36, 56, 57, 58, 59, 60, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112], "weight1": 101, "weight_decai": 105, "weight_gradi": 101, "weight_param": [15, 16, 18, 57, 60, 101, 105, 106, 111, 112], "weight_paramet": [18, 34, 57, 60], "weight_sampl": [56, 58, 110], "weighted_loss": 105, "weights2": 101, "well": [15, 18, 22, 23, 28, 29, 31, 32, 33, 71, 87, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112], "went": 103, "were": [15, 18, 104, 106, 109, 112], "what": [15, 18, 87, 101, 103, 104, 105, 110, 111, 113], "whatev": [102, 103], "when": [13, 16, 18, 22, 23, 26, 28, 29, 31, 32, 33, 34, 35, 49, 50, 51, 52, 54, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "where": [13, 15, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 57, 60, 63, 65, 71, 83, 85, 87, 90, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "wherea": 104, "whether": [18, 26, 36, 37, 50, 52, 57, 59, 60, 83, 85, 87, 108, 111, 113], "which": [8, 13, 15, 18, 26, 27, 28, 35, 38, 39, 41, 42, 43, 44, 45, 46, 49, 51, 52, 54, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "while": [18, 71, 87, 101, 103, 104, 106, 108, 110, 111, 112], "who": [71, 87, 103, 113], "whole": [22, 23, 31, 109, 111], "whose": [22, 23, 26, 28, 29, 30, 31, 32, 33, 64, 112], "why": [16, 18, 104, 106, 110, 112, 113], "wide": 103, "width": 103, "wiki": 112, "wikipedia": [103, 112], "wilei": 103, "william": 111, "window": [13, 62], "wine": 18, "wise": 103, "wish": [18, 112], "with_traceback": 19, "within": [9, 60, 62, 70, 100, 102], "without": [14, 16, 18, 27, 73, 103, 106], "woerner": 105, "won": 103, "wonder": 106, "word": [104, 105], "work": [15, 16, 18, 26, 28, 29, 36, 37, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "workflow": [18, 101, 104, 106, 113], "world": 103, "wors": [29, 103], "worst": 18, "worth": 15, "would": [16, 18, 22, 29, 85, 101, 111], "wrap": [15, 34, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 105], "wrap_funct": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "wrapper": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 108], "write": [18, 112], "written": [8, 77], "wrong": [16, 22, 26, 32, 103], "wrongli": [18, 102, 106], "wrt": 70, "wspace": 111, "www": [15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "x": [6, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 41, 42, 43, 44, 48, 49, 50, 51, 52, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113], "x0": [18, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 108, 112], "x1": 108, "x2": 108, "x3": 108, "x4": 108, "x_": [100, 102, 105, 106], "x_0": 105, "x_center": [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90], "x_fun": [63, 89], "x_i": [37, 100], "x_j": [37, 100, 105], "x_jac": [63, 89], "x_max": 104, "x_min": 104, "x_par": 54, "x_test": [106, 108], "x_train": [54, 106, 108], "x_valu": 70, "x_vec": [48, 49, 50, 51, 52, 53, 104], "xatol": 76, "xlabel": [102, 103, 106, 109, 110, 111, 112], "xlim": [104, 108], "xopt": [76, 81], "xtick": 111, "xtol": [81, 88], "xx": 104, "y": [6, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 41, 42, 43, 44, 48, 49, 50, 51, 52, 92, 93, 101, 102, 103, 104, 106, 110, 111, 113], "y01": [102, 106], "y01_": 106, "y_": [100, 102, 106], "y_cat": 102, "y_j": 105, "y_max": 104, "y_min": 104, "y_one_hot": 102, "y_p": [102, 106], "y_pred": [28, 29, 108], "y_predict": [102, 106, 111], "y_target": [102, 106], "y_test": 108, "y_train": [54, 108], "y_true": [29, 108], "y_vec": [48, 49, 50, 51, 52, 53, 104], "yao": 73, "yet": [83, 85, 103], "yield": [18, 38, 43, 71, 83, 85, 91, 100, 107], "ylabel": [102, 103, 106, 109, 110, 111, 112], "ylim": [104, 108], "yoder": 27, "you": [9, 13, 15, 16, 18, 26, 28, 29, 34, 35, 60, 70, 71, 82, 83, 85, 90, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "your": [13, 15, 16, 18, 60, 101, 102, 105, 106, 109, 110, 111, 112, 113], "your_feature_map": 18, "your_training_paramet": 18, "your_x_train": 18, "your_y_train": 18, "ytick": 111, "yy": 104, "z": [15, 18, 33, 41, 42, 43, 44, 57, 83, 85, 90, 101, 111], "z_i": 37, "zero": [18, 102, 104, 105, 111, 112], "zero_grad": [105, 106], "zero_idx": 112, "zfeaturemap": [18, 32, 33, 34, 107, 110, 111], "zip": [102, 106, 111, 112], "zoufal": 105, "zz": [83, 85], "zzfeaturemap": [15, 16, 18, 32, 33, 34, 37, 48, 49, 50, 51, 52, 57, 60, 102, 103, 104, 106, 108, 111], "\u03b8": [18, 34, 38, 41, 43, 100, 103, 108, 111], "\u03b8_0": 18, "\u03b8_1": 18, "\u03b8_par": 54, "\u03c8": [38, 41, 43], "\u03c9": [38, 41, 43]}, "titles": ["Qiskit Machine Learning API Reference", "Quantum machine learning algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.algorithms</span></code>)", "Circuit library for machine learning applications (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.circuit.library</span></code>)", "Connectors (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.connectors</span></code>)", "Datasets (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.datasets</span></code>)", "Gradients (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.gradients</span></code>)", "Quantum kernels (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.kernels</span></code>)", "Quantum Kernel Algorithms", "Quantum neural networks (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.neural_networks</span></code>)", "Optimizers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.optimizers</span></code>)", "State Fidelities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.state_fidelities</span></code>)", "Utility functions and classes (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils</span></code>)", "Loss Functions (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_machine_learning.utils.loss_functions</span></code>)", "Getting started", "Qiskit Machine Learning overview", "Qiskit Machine Learning v0.5 Migration Guide", "Qiskit Machine Learning v0.8 Migration Guide", "Qiskit Machine Learning Migration Guide", "Release Notes", "QiskitMachineLearningError", "BinaryObjectiveFunction", "MultiClassObjectiveFunction", "NeuralNetworkClassifier", "NeuralNetworkRegressor", "ObjectiveFunction", "OneHotObjectiveFunction", "PegasosQSVC", "QBayesian", "QSVC", "QSVR", "SerializableModelMixin", "TrainableModel", "VQC", "VQR", "QNNCircuit", "RawFeatureVector", "TorchConnector", "ad_hoc_data", "BaseEstimatorGradient", "BaseSamplerGradient", "EstimatorGradientResult", "LinCombEstimatorGradient", "LinCombSamplerGradient", "ParamShiftEstimatorGradient", "ParamShiftSamplerGradient", "SPSAEstimatorGradient", "SPSASamplerGradient", "SamplerGradientResult", "BaseKernel", "FidelityQuantumKernel", "FidelityStatevectorKernel", "TrainableFidelityQuantumKernel", "TrainableFidelityStatevectorKernel", "TrainableKernel", "QuantumKernelTrainer", "QuantumKernelTrainerResult", "EffectiveDimension", "EstimatorQNN", "LocalEffectiveDimension", "NeuralNetwork", "SamplerQNN", "ADAM", "AQGD", "AskData", "CG", "COBYLA", "CRS", "DIRECT_L", "DIRECT_L_RAND", "ESCH", "GSLS", "GradientDescent", "GradientDescentState", "ISRES", "L_BFGS_B", "Minimizer", "NELDER_MEAD", "NFT", "Optimizer", "OptimizerResult", "OptimizerState", "POWELL", "P_BFGS", "QNSPSA", "SLSQP", "SPSA", "SciPyOptimizer", "SteppableOptimizer", "TNC", "TellData", "UMDA", "optimizer_utils", "BaseStateFidelity", "ComputeUncompute", "StateFidelityResult", "CrossEntropyLoss", "KernelLoss", "L1Loss", "L2Loss", "Loss", "SVCLoss", "Quantum Neural Networks", "Neural Network Classifier &amp; Regressor", "Training a Quantum Model on a Real Dataset", "Quantum Kernel Machine Learning", "PyTorch qGAN Implementation", "Torch Connector and Hybrid QNNs", "Pegasos Quantum Support Vector Classifier", "Quantum Kernel Training for Machine Learning Applications", "Saving, Loading Qiskit Machine Learning Models and Continuous Training", "Effective Dimension of Qiskit Neural Networks", "The Quantum Convolution Neural Network", "The Quantum Autoencoder", "Quantum Bayesian Inference", "Machine Learning Tutorials"], "titleterms": {"0": 18, "1": [13, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113], "2": [18, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113], "3": [18, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113], "4": [18, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113], "5": [15, 18, 101, 103, 104, 105, 110, 111, 112], "6": [18, 101, 105, 111, 112], "7": [18, 105, 111, 112], "8": [16, 18, 112], "9": 112, "A": [106, 112], "The": [16, 110, 111, 112], "ad_hoc_data": 37, "adam": 61, "advanc": 101, "alarm": 113, "algorithm": [1, 7, 16, 110], "an": [102, 112, 113], "analysi": [103, 104], "analyz": 110, "ansatz": [105, 112], "api": 0, "applic": [2, 108, 112], "approxim": 5, "aqgd": 62, "ar": 14, "askdata": 63, "autoencod": 112, "b": 106, "backward": 101, "base": [1, 5, 8, 9, 12, 14], "baseestimatorgradi": 38, "basekernel": 48, "basesamplergradi": 39, "basestatefidel": 92, "basic": 110, "batch": 101, "bayesian": 113, "between": 111, "binaryobjectivefunct": 20, "bit": 16, "bug": 18, "build": [15, 112], "burglari": 113, "calcul": 110, "callabl": 104, "callback": 108, "ccnn": 111, "cg": 64, "choos": 112, "circuit": [2, 112, 113], "circuitqnn": 15, "class": [1, 5, 8, 9, 11, 12, 102, 108], "classic": [101, 103, 105, 111, 113], "classif": [102, 104, 106], "classifi": [1, 15, 102, 107], "cluster": 104, "cobyla": 65, "combin": 5, "common": 16, "comparison": 104, "compon": [104, 111, 112], "compress": 112, "comput": 110, "computeuncomput": 93, "conclus": [101, 103, 104, 105], "connector": [3, 106], "content": [106, 112], "continu": 109, "convolut": 111, "cr": 66, "creat": [15, 105, 113], "crossentropyloss": 95, "cumul": 105, "custom": 101, "data": [103, 105, 106, 111], "dataset": [4, 15, 103, 104, 108, 109, 110], "defin": [104, 106, 108, 110], "definit": 105, "densiti": 105, "deprec": [15, 18], "differ": 111, "digit": 112, "dimens": 110, "direct_l": 67, "direct_l_rand": 68, "discrimin": 105, "distribut": 105, "domain": 112, "effect": 110, "effectivedimens": 56, "esch": 69, "estimatorgradientresult": 40, "estimatorqnn": [15, 57, 101, 102, 106], "evalu": [104, 106], "exampl": [101, 110, 112, 113], "exploratori": 103, "extern": 108, "featur": [2, 14, 18, 103, 108], "fidel": 10, "fidelityquantumkernel": 49, "fidelitystatevectorkernel": 50, "fit": 108, "fix": 18, "forward": 101, "from": 16, "function": [1, 11, 12, 101, 104, 105, 106, 112], "gaussian": 104, "gener": [105, 111], "get": 13, "global": [9, 110], "go": 13, "gradient": [5, 101], "gradientdesc": 71, "gradientdescentst": 72, "gsl": 70, "guid": [15, 16, 17], "helper": 2, "how": [101, 113], "hybrid": [106, 109], "i": 112, "implement": [15, 101, 105, 113], "import": 108, "infer": [1, 113], "input": 101, "instal": 13, "instanti": [101, 113], "integr": 14, "interpret": 101, "introduct": [15, 16, 101, 104, 105, 111, 113], "isr": 73, "issu": 18, "kernel": [6, 7, 14, 15, 104, 108], "kernelloss": 96, "known": 18, "l1loss": 97, "l2loss": 98, "l_bfgs_b": 74, "layer": 111, "learn": [0, 1, 2, 14, 15, 16, 17, 101, 103, 104, 108, 109, 113, 114], "librari": 2, "lincombestimatorgradi": 41, "lincombsamplergradi": 42, "linear": 5, "load": [105, 109], "loader": 106, "local": [9, 108, 110], "localeffectivedimens": 58, "loop": 105, "loss": [12, 99, 105, 106, 112], "loss_funct": 12, "machin": [0, 1, 2, 14, 15, 16, 17, 101, 103, 104, 108, 109, 113, 114], "main": 14, "manag": 16, "map": [2, 108], "matrix": 104, "method": [14, 104], "metric": 8, "migrat": [13, 15, 16, 17], "minim": 75, "mnist": 106, "model": [103, 104, 105, 106, 108, 109, 111], "modul": 0, "multiclassobjectivefunct": 21, "multipl": [101, 102], "nelder_mead": 76, "network": [8, 14, 15, 101, 102, 105, 110, 111, 113], "neural": [8, 14, 15, 101, 102, 105, 110, 111], "neural_network": 8, "neuralnetwork": 59, "neuralnetworkclassifi": 22, "neuralnetworkregressor": 23, "new": [15, 18], "next": 14, "nft": 77, "node": 113, "non": 101, "notabl": 15, "note": 18, "number": 103, "object": 1, "objectivefunct": 24, "observ": 101, "onehotobjectivefunct": 25, "opflowqnn": 15, "optim": [9, 78, 105, 106, 108], "optimizer_util": 91, "optimizerresult": 79, "optimizerst": 80, "option": 13, "other": 15, "our": [108, 111], "overview": [14, 15, 16, 101, 104, 105, 113], "p_bfg": 82, "packag": 108, "paramet": 5, "parametr": 112, "paramshiftestimatorgradi": 43, "paramshiftsamplergradi": 44, "part": 106, "pass": [16, 101], "pca": 104, "pegaso": 107, "pegasosqsvc": 26, "perturb": 5, "pitfal": 16, "plot": 110, "pool": 111, "powel": 81, "precomput": 104, "prelud": 18, "prepar": [108, 109], "previou": 15, "primit": [15, 16], "princip": 104, "process": [105, 108], "pytorch": [14, 105, 106, 109], "qbayesian": 27, "qbi": 113, "qcnn": 111, "qgan": 105, "qiskit": [0, 13, 14, 15, 16, 17, 101, 108, 109, 110, 113], "qiskit_algorithm": 16, "qiskit_machine_learn": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12], "qiskitmachinelearningerror": 19, "qnn": [14, 101, 106, 110], "qnncircuit": 34, "qnspsa": 83, "qsvc": [28, 104], "qsvr": 29, "quantum": [1, 6, 7, 8, 14, 15, 101, 102, 103, 104, 105, 107, 108, 111, 112, 113], "quantumkerneltrain": 54, "quantumkerneltrainerresult": 55, "random": 105, "rawfeaturevector": 35, "readi": 13, "real": 103, "reduc": 103, "refer": [0, 111, 112], "regress": [102, 106], "regressor": [1, 15, 102], "reject": 113, "releas": 18, "represent": 105, "result": [10, 105, 110], "rotat": 113, "rule": 5, "run": [101, 113], "sampl": 113, "samplergradientresult": 47, "samplerqnn": [15, 60, 101, 102, 106, 110], "save": 109, "scipyoptim": 86, "serializablemodelmixin": 30, "set": [101, 105, 108, 110, 113], "sharp": 16, "shift": 5, "simpl": [106, 112], "simultan": 5, "slsqp": 84, "spectral": 104, "spsa": 85, "spsaestimatorgradi": 45, "spsasamplergradi": 46, "start": 13, "state": 10, "state_fidel": 10, "statefidelityresult": 94, "step": [14, 106], "steppabl": 9, "steppableoptim": 87, "stochast": 5, "submodul": [0, 6], "support": 107, "svc": 104, "svcloss": 100, "swap": 112, "telldata": 89, "test": [106, 108, 111, 112], "tnc": 88, "torch": 106, "torchconnector": 36, "train": [103, 105, 106, 108, 109, 110, 111], "trainablefidelityquantumkernel": 51, "trainablefidelitystatevectorkernel": 52, "trainablekernel": 53, "trainablemodel": 31, "trainer": 108, "transpil": 16, "tutori": 114, "two": 113, "umda": 90, "unitari": 5, "untrain": 110, "up": [101, 105, 108, 110, 113], "upgrad": 18, "us": [15, 104], "util": [11, 12], "v": [101, 110, 113], "v0": [15, 16], "variat": 102, "vector": 107, "visual": [105, 108], "vqc": [32, 102], "vqr": [33, 102], "wall": 112, "what": [14, 112], "without": 101, "x": 13}})