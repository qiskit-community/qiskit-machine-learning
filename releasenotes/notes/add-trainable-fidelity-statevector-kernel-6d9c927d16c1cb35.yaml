---
features:
  - |
    A new :class:`~qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel` class has
    been added that provides a trainable version of
    :class:`~qiskit_machine_learning.kernels.FidelityStatevectorKernel`. This relationship mirrors
    that between the existing
    :class:`~qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel`class and
    :class:`~qiskit_machine_learning.kernels.FidelityQuantumKernel`. Thus,
    :class:`~qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel` inherits from both
    :class:`~qiskit_machine_learning.kernels.FidelityStatevectorKernel` and
    :class:`~qiskit_machine_learning.kernels.TrainableKernel`.

    This class is used with
    :class:`~qiskit_machine_learning.kernels.algorithms.QuantumKernelTrainer` in an identical way to
    :class:`~qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel`, except for the
    arguments specific to
    :class:`~qiskit_machine_learning.kernels.TrainableFidelityStatevectorKernel`.

    For example, see the snippet below:

    .. code-block:: python

       # Instantiate trainable fidelity statevector kernel.
       quantum_kernel = TrainableFidelityStatevectorKernel(
           feature_map=fm,
           statevector_type=Statevector,
           training_parameters=training_parameters,
           cache_size=None,
           auto_clear_cache=True,
           shots=None,
           enforce_psd=True,
       )

       # Instantiate a quantum kernel trainer.
       qkt = QuantumKernelTrainer(
           quantum_kernel=quantum_kernel, loss="svc_loss", initial_point=[np.pi / 2]
       )

       # Train the kernel using QKT directly.
       qkt_results = qkt.fit(X_train, y_train)
       optimized_kernel = qkt_results.quantum_kernel
